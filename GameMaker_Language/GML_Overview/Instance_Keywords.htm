<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "9.1.1_3";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Instance Keywords</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the different instance &quot;keywords&quot;"/>
  <meta name="rh-index-keywords" content="Instance Keywords,noone,self,other,all"/>
  <meta name="search-keywords" content="self,all,noone,other,instance keywords"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Instance Keywords">
        <span>인스턴스 키워드</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>인스턴스 키워드</h1>
  <p>GameMaker Studio 2에서 특정 작업을보다 쉽게 ​​수행하기 위해 코드에 여러 <b>인스턴스 키워드</b> 중 하나를 사용할 수 있습니다 (GML 또는 드래그 앤 드롭). 이러한 키워드는 주로 서로 다른 상황에서 인스턴스를 식별하는 데 사용되며 각각 아래 텍스트에 설명되어 있습니다. 모든 키워드는 내부에서 <strong>음의 정수 값</strong> 으로 표시되므로 GameMaker Studio 2에서 사용한 값을 다른 것으로 해석 할 때 나중에 예기치 않은 결과가 나타날 수 있으므로 이러한 키워드에 대해 또는 키워드와 함께 변수 값을 할당하거나 확인할 때는주의를 기울여야합니다. . 코드에서 키워드 대신 값을 사용하는 <b>것이 전혀 권장되지 않으며</b> 나중에 문제가 발생할 수 있습니다.</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">자기</span> <span data-close-text="true">자기</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <table>
      <tbody>
        <tr>
          <th>예어</th>
          <th>기술</th>
          <th>값</th>
        </tr>
        <tr>
          <td>본인</td>
          <td>현재 코드 블록을 실행중인 인스턴스입니다.</td>
          <td>-1</td>
        </tr>
      </tbody>
    </table>
    <p class="dropspot"> </p>
    <p class="dropspot"><tt>self</tt> 는 현재 범위 내에있는 인스턴스의 고유 ID를 항상 참조하므로 현재 코드 블록의 호출 인스턴스를 식별하는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
    <p class="code">var val = 100;<br/> with (instance_create_layer(x, y, &quot;Instances&quot;, obj_Fire))<br/>     {
      <br/>     self.val = val;<br/>     }
    </p>
    <p class="dropspot">이 예제에서는 <tt>val</tt> 이라는 <i>로컬</i> 변수가 있으며 새로 만든 객체 인스턴스에서 동일한 이름으로 <i>인스턴스</i> 변수를 설정하려고합니다. 인스턴스 변수를 올바르게 식별하고 GameMaker Studio 2에게 코드 블록을 호출하는 인스턴스에서 설정하도록 지시하려면 <tt>self</tt> 키워드를 사용합니다. 대부분의 경우 <tt>self</tt> 대신 <tt>id</tt> <span>내장</span> 인스턴스 변수를 사용할 수도 있지만 <tt>self</tt> 는 특정 이점을 제공합니다. 우선 <tt>id</tt> 값이 인스턴스 조회 테이블을 통과하기 때문에 컴파일러가 <tt>id</tt> 대신 <tt>self를</tt> 사용하여 인스턴스 ID 값을 검색하는 것이 더 빠릅니다. 둘째, 확장을 만드는 사람들에게는 확장을 사용하는 프로젝트가 전역 범위 변수 또는 확장의 변수와 이름이 같은 것을 가질 수 있기 때문에 변수의 올바른 범위를 보장하는 것이 매우 유용합니다.</p>
    <p class="dropspot">또한 매우 구체적인 상황에서 <a href="Structs.htm">구조체</a> 내에서 멤버 변수를 참조하기 위해 <a href="Structs.htm">구조체</a> 내에서 <tt>self를</tt> 사용할 수도 있습니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">다른</span> <span data-close-text="true">다른</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <table>
      <tbody>
        <tr>
          <th>예어</th>
          <th>기술</th>
          <th>값</th>
        </tr>
        <tr>
          <td>다른</td>
          <td>충돌 이벤트와 관련된 다른 인스턴스 또는 <tt>with</tt> 함수의 다른 인스턴스</td>
          <td>-2</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot">특수 <i>키워드</i> <b>other</b> 에는 특정 인스턴스를 참조하는 데 사용할 수있는 두 가지 방법이 있습니다. <tt><b>with</b></tt> 함수 ( <a href="Language_Features/with.htm">여기에</a> 설명되어 있음)에 사용되거나 <a href="../../The_Asset_Editors/Object_Properties/Object_Events.htm">충돌 이벤트</a> 에 사용되는 경우에는이 섹션에서 설명합니다.</p>
    <p class="dropspot">충돌 이벤트는 두 인스턴스간에 만 발생할 수 있습니다. 여러 인스턴스간에 충돌이 여러 번 <i>발생할 수</i> 있지만 충돌 이벤트가있는 인스턴스와 관련된 &quot;다른&quot;인스턴스를 사용하여 GameMaker Studio 2에서 일대일로 모두 해결됩니다. 적에게 발사 할 수있는 플레이어 오브젝트, 복수의 적 오브젝트 및 복수의 총알 오브젝트가 있다고 상상해보십시오. 각 적에게 하나의 총알 인스턴스를 할당 할 수 있지만 생성시 무작위로 다른 대미지 변수를 할당 할 수 있습니다. 예를 들면 다음과 같습니다.</p>
    <p class="code">var nnn;<br/> nnn = instance_create_layer(x, y, &quot;Bullets&quot;, obj_Bullet);<br/> nnn.damage = 5 + irandom(5);<br/> nnn.speed = 8;<br/> nnn.direction = point_direction(x, y, obj_Player.x, obj_Player.y);</p>
    <p class="dropspot"><a href="Addressing_Variables_In_Other_Instances.htm">다른 인스턴스의 변수 주소 지정</a> 섹션에 설명 된 &quot;포인트 방법&quot;을 사용하여 변수를 설정하는 방법을 확인할 수 있습니다. 그러면 총알 오브젝트에 다른 데미지 값이 부여됩니다. 그러나 플레이어 객체는 어떻습니까? 필요한 손상을 어떻게 감지합니까? 충돌 이벤트에서 <b><tt>other</tt></b> 를 사용하여 :</p>
    <p class="code">hp -= other.damage;<br/> if hp &lt;= 0 instance_destroy();</p>
    <p class="dropspot">위의 코드는 플레이어 &quot;hp&quot;변수에서 충돌 &quot;손상&quot;변수에 <i>다른</i> 인스턴스에 저장된 양을 차감 한 다음 &quot;hp&quot;가 0보다 작거나 같은지 확인합니다. 플레이어 객체를 파괴합니다. 이 방법으로 사용 된 <b>다른</b> <i>것은 충돌 이벤트에서만 작동</i> 하며 다른 인스턴스는 변수를 확인해야합니다. 그렇지 않으면 오류가 발생합니다. 그러나 다음과 같이 충돌 이벤트에서 <b>다른</b> 변수를 사용하여 변수에 값을 할당하거나 새 변수를 만들 수도 있습니다.</p>
    <p class="code">//add ten to the other instance &quot;mana&quot; variable<br/> other.mana += 10;<br/> //set the other instance variable &quot;hit&quot; to true, creating it if the variable doesn&#39;t already exist<br/> other.hit = true;</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">모든</span> <span data-close-text="true">모든</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <table>
      <tbody>
        <tr>
          <th>예어</th>
          <th>기술</th>
          <th>값</th>
        </tr>
        <tr>
          <td>모두</td>
          <td>현재 회의실에서 활성화 된 모든 인스턴스</td>
          <td>-삼</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot">이 키워드는 GameMaker Studio 2에 기능이 적용되거나 방 내 모든 활성화 된 인스턴스를 확인하는 데 사용됩니다 (비활성화 된 인스턴스는 확인 또는 액세스되지 않음). point 메소드를 사용하여 다른 인스턴스에서 변수에 액세스하거나 변수를 설정하는 데 <tt>모두</tt> 를 사용할 수 <b>는 없지만</b> ( <a href="Addressing_Variables_In_Other_Instances.htm">여기</a> 참조) <a href="Language_Features/with.htm"><tt>with ()를</tt></a> 호출 할 때 다음 <a href="Language_Features/with.htm"><tt>과 같이</tt></a> 사용할 <strong>수</strong> 있습니다.</p>
    <p class="code">with (all)<br/>     {
      <br/>     speed = 0;<br/>     }
    </p>
    <p class="dropspot">위의 코드는 방에있는 모든 인스턴스의 속도를 0으로 설정합니다. 함수 내에서 <tt>모두</tt> 를 사용하여 방에있는 모든 인스턴스를 대상으로하거나 확인할 수 있습니다.</p>
    <p class="code">//Check a point for any active instance in the room<br/> inst = instance_position(mouse_x, mouse_y, all);         <br/>
      <br/> //Check all instances for a collision along a line<br/> if collision_line(x, y, mouse_x, mouse_y, all, false, true) {}<br/>
      <br/> //Add all instances in the room into a motion planning grid<br/> mp_grid_add_instances(grid, all, false);</p>
    <p class="dropspot"><tt>모두</tt> 매우 유용한 키워드이며 코드와 동작 내에서 다양한 상황에서 사용될 수 있으며, 원하는 효과를 얻기 위해 작성해야하는 코드의 양을 줄입니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#"><span data-open-text="true">아무도의</span> <span data-close-text="true">아무도</span></a></p>
  <div class="droptext" data-targetname="drop-down3">
    <table class=" cke_show_border">
      <tbody>
        <tr>
          <th>예어</th>
          <th>기술</th>
          <th>값</th>
        </tr>
        <tr>
          <td>아무도</td>
          <td>전혀 인스턴스가 없습니다.</td>
          <td>-4</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot">이상하게 보일 수도 있지만 게임을 프로그래밍하는 동안 여러 위치에서 발견되거나 충돌 등이 없는지 확인해야하는 경우가 많습니다.이 경우이 키워드를 사용하여 아무것도 확인하지 않고, 이 같은:</p>
    <p class="code">if instance_nearest(x, y, obj_enemy) != noone<br/>     {
      <br/>     //do something as there is an enemy instance near<br/>     }
    </p>
    <p class="dropspot">이 예제에서 <tt>instance_nearest ()</tt> 함수는 가장 가까운 인스턴스의 <tt>아무도</tt> 또는 고유 한 ID를 반환합니다. 기본적으로 인스턴스를 확인해야 할 때마다 <tt>아무도</tt> 또는 고유 한 인스턴스 ID가 반환 될 것으로 예상 할 수 있습니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Overview/Instance_Keywords.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="GML_Overview.htm">GML 개요</a></div>
        <div style="float:right">다음: <a href="Addressing_Variables_In_Other_Instances.htm">다른 인스턴스의 변수 지정</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Instance Keywords
self
all
noone
other
-->
  <!-- TAGS
instance_keywords
-->

</body></html> 