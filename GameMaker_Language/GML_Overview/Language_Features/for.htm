<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.1.2.0_5";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>for</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the for function"/>
  <meta name="rh-index-keywords" content="for"/>
  <meta name="search-keywords" content="for"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="for">
        <span>...에 대한</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>...에 대한</h1>
  <p><a class="tooltip" title="프로그래밍에서 명령문은 수행 할 동작을 나타내는 프로그래밍 언어로 합법적으로 작성된 단일 코드 행입니다. 명령문은 표현식, 연산자 및 함수를 포함하여 자체의 내부 구성 요소를 가질 수 있습니다. 문장의 예는 A = B + 5입니다. GameMaker Studio 2 프로그램은 함께 플레이어를 움직이는 것과 같이 작업을 수행하는 하나 이상의 문장 시퀀스 일뿐입니다.">명령문</a> (또는 명령문)을 여러 번 반복하는 가장 많이 사용되는 방법 중 하나는 다음 형식의 <tt>for</tt> 루프를 사용하는 것 <tt>입니다</tt> .</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br/>     {<br/>     &lt;statement&gt;;<br/>     &lt;statement&gt;;<br/>     ...<br/>     }</p>
  <p>이것은 다음과 같이 작동합니다-먼저 변수에 값을 할당하는 대입이 실행 된 다음 <a class="tooltip" title="표현식은 특정 우선 순위 규칙 및 다른 값을 리턴하기 위해 연관되는 규칙에 따라 해석되는 하나 이상의 상수, 변수, 연산자 및 / 또는 함수의 조합입니다. 간단한 표현은 (5 + 5)이며 10을 반환합니다.">표현식</a> 이 평가되고, <tt>true이면</tt> 중괄호 {}의 명령문이 실행됩니다. 다음으로 할당 된 변수에 대해 작업이 수행 된 다음 표현식이 다시 평가됩니다. 이 루프는 표현식이 <tt>false</tt> 가 될 때까지 계속됩니다.</p>
  <p>이렇게 작성하면 복잡하게 들릴 수 있지만 다음과 같이 해석해야합니다.</p>
  <ol>
    <li>첫 번째 할당은 for 루프를 초기화합니다</li>
    <li>표현식은 루프를 종료해야하는지 여부를 테스트합니다.</li>
    <li>진술이 수행됩니다</li>
    <li>작업이 수행됩니다</li>
    <li>2 단계로 돌아가서 표현식을 다시 수행하고 루프를 계속하거나 존재하십시오.</li>
  </ol>
  <p>이것은 다른 방식으로 여러 줄의 코드가 필요한 반복적 인 작업을 수행하는 데 매우 유용하며 일반적으로 배열 평가, 사물 그리기, 증분 값 설정 등의 카운터로 사용됩니다. 다음 코드 예제는 일반적인 용도를 보여줍니다. 이 유형의 진술 :</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br/>     {
    <br/>     draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br/>     }
  </p>
  <p>위의 코드는 0부터 시작하여 9까지 카운트하고 <span class="inline">for</span> 루프를 초기화 한 다음 <tt>i</tt> 의 루프 값을 사용하여 화면에 배열에 저장된 값을 그립니다. <tt>for</tt> 루프 변수 <tt>i</tt> 가 배열을 반복 할뿐만 아니라 숫자를 그리는 데 사용되는 방법과 GameMaker Studio 2에 룸에서 값을 그릴 위치를 알려주는 방법에 유의하십시오. 이러한 유연성은 프로그래밍에서 <tt>for</tt> 루프가 중요한 이유 중 하나입니다.</p>
  <p><strong>언제 <tt>for</tt> 루프를 사용해야합니까?</strong> 언제든지 현재 실행중인 <a class="tooltip" title="반복은 프로젝트 코드에서 일련의 작업을 통과하는 단일 단계입니다. 컴퓨터 프로그래밍에서 반복의 한 형태는 루프를 통하는 것입니다. 루프는 조건이 충족 될 때까지 특정 코드 세그먼트를 반복하여 계속 진행할 수 있습니다. 컴퓨터가 루프를 실행할 때마다 반복이라고합니다. 간단히 말해서 반복이란 특정 코드 조각을 반복해서 반복하여 특정 작업을 수행하는 프로세스입니다.">반복</a> 을 추적하고 해당 반복 값을 사용하는 동안 하나 이상의 명령문에 대해 고정 된 수의 반복을 수행해야합니다.</p>
  <p class="note"><b>참고</b> : 루프 카운터 변수에 사용되는 변수 &quot; <tt>i</tt> &quot;및 &quot; <tt>j</tt> &quot;의 다른 사람들과 작업 할 때 여러 예제가 표시됩니다. 이것들은 필수 변수 이름이 <b>아니며</b> &quot; <tt>a</tt> &quot;또는 &quot; <tt>foo</tt> &quot;또는 무엇이든 사용할 수 있습니다. &quot; <tt>i</tt> &quot;및 &quot; <tt>j</tt> &quot;사용은 프로그래밍의 표준 규칙입니다.</p>
  <p><span class="inline">for</span> 루프 내에서도 특별한 <span class="inline"><a href="break.htm">break</a></span> 및 <span class="inline"><a href="continue.htm">continue</a></span> 문을 사용할 수 있습니다. <span class="inline">break</span> 를 사용하면 루프를 즉시 종료하고 루프가 완료된 후 이벤트 나 함수에있는 코드로 이동합니다. 예 :</p>
  <p class="code">var _inst = noone;<br/> for (var i = 0; i &lt; 10; i += 1)<br/>     {
    <br/>     _inst = instance_find(obj_Enemy_Parent, i);<br/>     if instance_exists(_inst)<br/>         {<br/>         if _inst.object_index == obj_Enemy_Melee<br/>             {<br/>             break;<br/>             }<br/>         }<br/>     }<br/>    target = _inst;</p>
  <p>인스턴스가 발견되면 주어진 &quot;부모&quot;개체의 10 개 neaerst 인스턴스를 통해 상기 코드 루프하고, 인스턴스 오브젝트 ID를 검사하고 <span class="inline">obj_Enemy_Melee의</span> 인스턴스이면 루프는 <span class="inline">브레이크를</span> 사용 종료하고 ID 값이 할당 변수에 (인스턴스가 없으면 키워드 <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> 이 변수에 추가됩니다).</p>
  <p><span class="inline">for</span> 루프에서 <span class="inline">continue</span> 를 사용하는 예는 다음과 같습니다.</p>
  <p class="code">var _val = 0;<br/> for (var i = 0; i &lt; 10; i += 1)<br/>     {
    <br/>     if (val_array[i] &lt;= 0)<br/>         {<br/>         continue;<br/>         }<br/>     _val += val_array[i];<br/>     }
    <br/> draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p>
  <p>이 코드는 10 길이 1D <a href="../Arrays.htm">배열</a> 의 각 배열 위치에 저장된 값을 확인하고 0보다 작거나 같은 경우 루프를 <span class="inline">계속 진행</span> 하여 현재 반복이 종료되고 <span class="inline">i</span> 가 증가하고 다음을 의미합니다. 루프 반복이 시작됩니다. 값이 0보다 크면 로컬 변수 <span class="inline">_val에</span> 추가되고 루프가 완료된 후 총 값이 화면에 그려집니다.</p>
  <p>루프 키워드에 대한 더 많은 예는 <a href="repeat.htm"><tt>반복</tt></a> , <a href="while.htm"><tt>while</tt></a> 및 <a href="do___until.htm"><tt>do / until</tt></a> 섹션을 참조하십시오.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Overview/Language_Features/for.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="../Language_Features.htm">언어 특징</a></div>
        <div style="float:right">다음: <a href="switch.htm">스위치</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->

</body></html> 