<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.1.2.0_4";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>do / until</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the do / until functions"/>
  <meta name="rh-index-keywords" content="do,until"/>
  <meta name="search-keywords" content="do,until"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="do / until">
        <span>할 때까지</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>할 때까지</h1>
  <p><tt>do</tt> 함수는 하나 이상의 <a class="tooltip" title="프로그래밍에서 명령문은 수행 할 동작을 나타내는 프로그래밍 언어로 합법적으로 작성된 단일 코드 행입니다. 명령문은 표현식, 연산자 및 함수를 포함하여 자체의 내부 구성 요소를 가질 수 있습니다. 문장의 예는 A = B + 5입니다. GameMaker Studio 2 프로그램은 함께 플레이어를 움직이는 것과 같이 작업을 수행하는 하나 이상의 문장 시퀀스 일뿐입니다.">명령문을</a> 여러 번 반복하는 또 다른 방법이며, 특정 <a class="tooltip" title="표현식은 특정 우선 순위 규칙 및 다른 값을 리턴하기 위해 연관되는 규칙에 따라 해석되는 하나 이상의 상수, 변수, 연산자 및 / 또는 함수의 조합입니다. 간단한 표현은 (5 + 5)이며 10을 반환합니다.">표현이</a> 될 때까지 GameMaker Studio 2에게 무언가를하도록 지시하기 때문에 다른 하나 없이는 할 수 없기 때문에 실제로 &quot; <tt>do ... until</tt> &quot;명령문입니다 <tt>true를</tt> 반환 <tt>합니다</tt> . 이 형식은 다음과 같습니다.</p>
  <p class="code">do<br/> {
    <br/> &lt;statement&gt;;
    <br/> &lt;s <span class="inline"></span>tatement&gt;;<br/> ...
    <br/> }
    <br/> until (&lt;expression&gt;);</p>
  <p>명령문은 중괄호 ( <tt>{}</tt> ) 내에 여러 명령문의 코드 블록 일 수 있음)는 표현식이 <tt>true</tt> 가 될 때까지 실행되며 초기 명령문은 <strong>항상 한 번 이상 실행됩니다</strong> . 아래에서 <tt>do ... until</tt> 을 사용하는 일반적인 방법의 예를 찾을 수 있습니다.</p>
  <p class="code">do<br/>     {
    <br/>     x = random(room_width);<br/>     y = random(room_height);<br/>     }
    <br/> until (place_free(x, y));</p>
  <p>위의 코드는 현재 객체를 빈 위치에 놓고 x / y 변수를 한 번 이상 설정 한 다음 <tt>place_free ()</tt> 표현식이 <tt>true를</tt> 반환 할 때까지 필요한만큼 <a class="tooltip" title="반복은 프로젝트 코드에서 일련의 작업을 통과하는 단일 단계입니다. 컴퓨터 프로그래밍에서 반복의 한 형태는 루프를 통하는 것입니다. 루프는 조건이 충족 될 때까지 특정 코드 세그먼트를 반복하여 계속 진행할 수 있습니다. 컴퓨터가 루프를 실행할 때마다 반복이라고합니다. 간단히 말해서 반복이란 특정 코드 조각을 반복해서 반복하여 특정 작업을 수행하는 프로세스입니다.">반복</a> <tt>합니다</tt> .</p>
  <p><strong>언제 <span class="inline">do</span> / <span class="inline">until</span> 루프를 사용해야합니까?</strong> 하나 이상의 명령문을 반복 할 때마다 사용해야하지만 실제로 반복해야하는 횟수를 모르고 루프가 종료되기 전에 명령문이 <em>한 번 이상</em> 실행되도록해야합니다.</p>
  <p><span class="inline">do</span> 루프 내에서 <a href="break.htm"><span class="inline">break</span></a> 및 <a href="continue.htm"><span class="inline">continue</span></a> 문을 사용할 수도 있습니다. <span class="inline">break</span> 를 사용하면 루프를 즉시 종료하고 루프가 완료된 후 이벤트 나 함수에있는 코드로 이동합니다. 예 :</p>
  <p class="code">var _id = noone;<br/> do
    <br/>     {<br/>     _id = list[| 0];<br/>     if instance_exists(_id)<br/>         {<br/>         _break;<br/>         }<br/>     ds_list_delete(list, 0);<br/>     }<br/> until (ds_list_empty(list));<br/> target = _id;</p>
  <p>위의 코드에서 로컬 변수를 만들고 <a href="../Instance_Keywords.htm">noone</a> 키워드를 보유하도록 설정했습니다. 그런 다음 <span class="inline">do / until</span> 루프를 수행하여 DS 목록의 첫 번째 위치를 검사하여 유효한 인스턴스 ID를 보유하고 있는지 확인하고, 그렇지 않은 경우 루프를 <span class="inline">중단</span> 하면 목록 위치의 값이 삭제됩니다. 루프가 종료 된 후 ( <span class="inline">중단으로</span> 인해 또는 목록이 비어 있기 때문에) 로컬 변수 값이 인스턴스 변수 <span class="inline">target에</span> 지정됩니다.</p>
  <p><span class="inline">do / until</span> 루프에서 continue를 사용하는 예는 다음과 같습니다.</p>
  <p class="code">do<br/>     {
    <br/>     var _x = random(room_width);<br/>     var _y = random(room_height);<br/>     if (instance_position(_x, y, obj_Enemy)<br/>         {
    <br/>         continue;
    <br/>         }
    <br/>     instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br/>     }
    <br/> until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>이 코드는 임의의 룸 위치를 생성 한 다음 <span class="inline">obj_Enemy</span> 객체의 인스턴스가 해당 위치에 있는지 확인합니다. 그렇다면 현재 루프 반복이 <span class="inline">계속을</span> 사용하여 종료되고 새로운 반복이 시작되고, 그렇지 않으면 <span class="inline">obj_Enemy</span> 객체의 인스턴스가 임의의 위치에 작성됩니다. 루프는 룸에 10 개 이상의 객체 인스턴스가있는 경우에만 종료됩니다.</p>
  <p>마지막으로 한 가지주의 할 점 : 루프를 쉽게 영원히 만들 수 있으므로 <tt>do</tt> 루프에주의하십시오.이 경우 게임이 더 이상 중단되고 더 이상 사용자 입력에 반응하지 않으므로 강제로 닫아야합니다.</p>
  <p>루프 키워드에 대한 더 많은 예제는 <a href="repeat.htm"><tt>반복</tt></a> , <a href="while.htm"><tt>while</tt></a> 및 <a href="for.htm"><tt>for</tt></a> 섹션을 참조하십시오.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Overview/Language_Features/do___until.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="../Language_Features.htm">언어 특징</a></div>
        <div style="float:right">다음: <a href="for.htm">...에 대한</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->

</body></html> 