<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.11.5.0_29";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>physics_particle_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for physics_particle_create"/>
  <meta name="rh-index-keywords" content="physics_particle_create,phy_particle_flag_water,phy_particle_flag_zombie,phy_particle_flag_wall,phy_particle_flag_spring,phy_particle_flag_elastic,phy_particle_flag_viscous,phy_particle_flag_powder,phy_particle_flag_tensile,phy_particle_flag_colourmixing,phy_particle_flag_colormixing"/>
  <meta name="search-keywords" content="physics_particle_create,phy_particle_flag_water,phy_particle_flag_zombie,phy_particle_flag_wall,phy_particle_flag_spring,phy_particle_flag_elastic,phy_particle_flag_viscous,phy_particle_flag_powder,phy_particle_flag_tensile,phy_particle_flag_colourmixing,phy_particle_flag_colormixing"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="physics_particle_create">
        <span>physics_particle_create</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_particle_create</h1>
  <p>이 기능을 사용하면 게임 실 내 어디에서나 단일 플래그를 만들어 특정 플래그와 속성을 설정할 수 있습니다. &quot;플래그&quot;는 다음 <b>상수</b> 조합의 반환 값입니다.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>일정한</th>
        <th>기술</th>
      </tr>
      <tr>
        <td>phy_particle_flag_water</td>
        <td>연체 입자의 기본 속성입니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_zombie</td>
        <td>좀비 입자는 다른 모든 방법으로 플래그가 지정된 단일 단계 후에 파괴되는 입자입니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_wall</td>
        <td>이것은 입자를 <i>static</i> 으로 정의하고, 본질적으로 물리 시뮬레이션에서 입자와 충돌하는 것에 관계없이 고정 된 위치에 남아 있기 때문에 움직일 수없는 물체로 만듭니다. 밀도를 0으로 설정하기보다는이 플래그를 사용해야합니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_spring</td>
        <td>스프링 입자는 마치 스프링처럼 서로 붙어있는 효과를냅니다. 이 플래그로 생성 된 입자는 쌍으로 &quot;연결&quot;되며 각 입자는 생성시 가장 가까운 입자에 연결됩니다. 일단 쌍을 이루면 파티클은 &quot;파트너&quot;를 변경하지 않으며 외부 힘이 서로 힘을가할수록 외부 힘이 제거 될 때 충돌하는 힘이 커집니다. 쌍을 이루는 입자가 서로 얼마나 멀리 떨어져 있더라도 이들 사이의 연결은 스냅되지 않습니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_elastic</td>
        <td>탄성 입자는 물리 시뮬레이션에서 다른 강체와 충돌 할 때 변형되고 튕겨 나올 수도 있습니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_viscous</td>
        <td>점성 입자는 기름과 같이 &quot;끈적임&quot;또는 &quot;끈적임&quot;을 나타내는 입자입니다. 점성 입자가 응집되어 더 많이 붙습니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_powder</td>
        <td>분말 입자는 모래 나 먼지에서 볼 수있는 것과 같은 산란 효과를 생성합니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_tensile</td>
        <td>인장 입자는 액체의 표면에 표면 장력 또는 팽팽한 곡률의 효과를 생성하는 데 사용됩니다. 예를 들어 한 방울의 물에서 볼 수있는 표면 장력을 만드는 데 사용할 수 있습니다. 일단 장력이 깨지면 입자는 마치 탄성 인 것처럼 튀어 나오지만 서로를 계속 끌어 당깁니다. 결과적으로 입자는 바운스로 클러스터를 형성하는 경향이 있습니다.</td>
      </tr>
      <tr>
        <td>phy_particle_flag_colourmixing</td>
        <td>색상 혼합 입자는 충돌하는 다른 입자의 일부 색상을 취합니다. 두 충돌 입자 중 하나만 색상 혼합 입자 인 경우 다른 입자는 충돌 전 색상을 유지합니다.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>이 플래그는 비트 마스킹을 사용하여 최종 출력 값을 만든 다음 입자의 다른 기본 속성을 설정하기 위해 검사합니다 (기본 속성은 항상 <tt>phy_particle_flag_water의</tt> 속성 <tt>임</tt> ). 예를 들어 표면 장력으로 점성 액체를 시뮬레이션하려면 <a href="../../../../Additional_Information/Bitwise_Operators.htm">비트 단위</a> <i>또는</i> &quot;|&quot; 아래 예제와 같이 적절한 비트를 표시합니다. 이러한 방식으로 생성 된 각 개별 입자에 대해 다른 속성 (글로벌 속성 제외)을 설정할 수 있습니다.</p>
  <p>깃발 외에, 방의 위치를 ​​설정하여 파티클, 초기 수평 및 수직 속도, 초기 색상 및 알파, 사용자 <b>카테고리를 만들 수</b> 있습니다. 색상 및 알파 값은 <a href="physics_particle_draw.htm"><tt>physics_particle_draw ()</tt></a> 함수를 사용하여 입자를 그릴 때만 사용되지만 범주 값은 다른 여러 함수에서 사용됩니다. 이 값은 비슷한 속성을 가지려는 각 입자에 제공하는 임의의 정수 값이며 나중에 특정 범주 및 기타 여러 가지에 대해 플래그를 설정하는 데 사용할 수 있습니다. 예를 들어, &quot;물&quot;및 &quot;오일&quot;입자를 정의한 경우 사용자 범주 1을 &quot;물&quot;로 플래그 지정한 모든 입자와 사용자 범주 2를 &quot;오일&quot;로 생성 된 모든 입자를 허용합니다. 나중에 단일 카테고리를 타겟팅하여 플래그를 변경하거나 특정 데이터를 가져옵니다.</p>
  <p class="note"><b>참고</b> : 시뮬레이션에 예약되어 있고 다른 기능 (예 : 그림)에서 모든 범주를 선택하는 데 사용되는 <b>0</b> 을 <b>제외하고</b> 범주에 정수 값을 사용할 수 있습니다.</p>
  <p>이 함수는 입자를 직접 참조하는 다른 함수에서 사용하기 위해 변수에 저장 될 수있는 입자에 대한 고유 인덱스 (또는 ID) 값을 반환합니다.</p>
  <p> </p>
  <h4>통사론:</h4>
  <p class="code">physics_particle_create(flags, x, y, xv, yv, col, alpha, category)</p>
  <table>
    <tbody>
      <tr>
        <th>논의</th>
        <th>기술</th>
      </tr>
      <tr>
        <td>깃발</td>
        <td>파티클에 설정할 플래그입니다.</td>
      </tr>
      <tr>
        <td>엑스</td>
        <td>파티클을 생성 할 x 위치입니다.</td>
      </tr>
      <tr>
        <td>와이</td>
        <td>파티클을 생성 할 y 위치입니다.</td>
      </tr>
      <tr>
        <td>xv</td>
        <td>초기 수평 속도.</td>
      </tr>
      <tr>
        <td>yv</td>
        <td>초기 수직 속도.</td>
      </tr>
      <tr>
        <td>안부</td>
        <td>입자에 사용할 기본 색상입니다.</td>
      </tr>
      <tr>
        <td>알파</td>
        <td>입자에 사용할 기본 알파입니다.</td>
      </tr>
      <tr>
        <td>범주</td>
        <td>입자가 속한 사용자 정의 범주.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>보고:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>예:</h4>
  <p class="code">var flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;<br/> var x_vel = lengthdir_x(5, image_angle);<br/> var y_vel = lengthdir_y(5, image_angle);<br/> var p = physics_particle_create(flags, x, y, x_vel, y_vel,
    c_white, 1, 1);</p>
  <p>위의 코드는 파티클 유형과 초기 속도를 설정하는 변수를 생성 한 다음이를 사용하여 인스턴스 x / y 위치에 파티클을 생성합니다.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_create.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="Soft_Body_Particles.htm">연체 입자</a></div>
        <div style="float:right">다음: <a href="physics_particle_group_begin.htm">물리 _ 입자 _ 그룹 _ 시작</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
physics_particle_create
phy_particle_flag_water
phy_particle_flag_zombie
phy_particle_flag_wall
phy_particle_flag_spring
phy_particle_flag_elastic
phy_particle_flag_viscous
phy_particle_flag_powder
phy_particle_flag_tensile
phy_particle_flag_colourmixing
-->
  <!-- TAGS
physics_particle_create
-->

</body></html> 