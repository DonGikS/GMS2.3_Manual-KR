<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.11.4.0_8";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>physics_joint_wheel_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for physics_joint_wheel_create"/>
  <meta name="rh-index-keywords" content="physics_joint_wheel_create"/>
  <meta name="search-keywords" content="physics_joint_wheel_create"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="physics_joint_wheel_create">
        <span>physics_joint_wheel_create</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_wheel_create</h1>
  <p>휠 조인트는 단순히 자동차의 충격 흡수 장치에 장착 된 휠과 같이 피스톤과 회전 조인트를 결합한 것입니다. 관절에 대한 고정 점을 지정하고 물리적으로 활성화 된 두 인스턴스가 관절로 지정하고 첫 번째 인스턴스는 관절의 &quot;본체&quot;로 작동하고 두 번째 인스턴스는 &quot;바퀴&quot;로 자유롭게 움직일 수 있습니다. 관절 축. 관절이 &quot;스프링&quot;역할을하는 축선 벡터를 설정하여 휠이 장애물과 마주 칠 때 (피스톤 조인트처럼) 튀어 오르 내릴 수 있습니다. 다음 이미지는이를 보여줍니다.</p>
  <p><img alt="Wheel joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/wheel_joint_image.png"/>모터를 활성화하도록 선택하면 두 번째 인스턴스가 앵커 위치를 중심으로 회전하며 원하는 모터 속도 (N / m) 및 모터 회전 속도를 달성하는 데 사용되는 최대 모터 토크를 설정할 수 있습니다 . 휠 조인트에는 움직일 수있는 축이 있기 때문에 조인트의 댐핑 비율과 함께 발진 주파수 (Hz)를 설정할 수 있습니다. 미세 조정을 위해이 값을 사용해야 할 수도 있습니다. 더 작은 값으로 시작하여 원하는 효과를 얻을 때까지 값을 증가시킵니다.</p>
  <p>모든 관절과 마찬가지로 &quot;col&quot;값을 <tt>true</tt> 로 설정하면 두 인스턴스가 서로 상호 작용하고 충돌 할 수 있지만 충돌 이벤트가있는 경우 <i>에만</i> 충돌이 발생합니다. 그러나 <tt>false</tt> 로 설정되어 있으면 충돌이 발생하지 않습니다. .</p>
  <p> </p>
  <h4>통사론:</h4>
  <p class="code">physics_joint_wheel_create(inst1, inst2, anchor_x, anchor_y, axis_x, axis_y, enableMotor, max_motor_torque, motor_speed, freq_hz, damping_ratio, col)</p>
  <table>
    <tbody>
      <tr>
        <th>논의</th>
        <th>기술</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td>조인트와 연결하는 첫 번째 인스턴스</td>
      </tr>
      <tr>
        <td>inst2</td>
        <td>조인트와 연결할 두 번째 인스턴스</td>
      </tr>
      <tr>
        <td>anchor_x</td>
        <td>게임 세계 내에서 조인트가 고정 된 x 좌표</td>
      </tr>
      <tr>
        <td>anchor_y</td>
        <td>게임 세계 내에서 조인트가 고정 된 y 좌표</td>
      </tr>
      <tr>
        <td>axis_x</td>
        <td>휠 축 벡터의 x 구성 요소</td>
      </tr>
      <tr>
        <td>axis_y</td>
        <td>휠 축 벡터의 y 구성 요소</td>
      </tr>
      <tr>
        <td>enableMotor</td>
        <td>모터의 활성화 여부 (true) 또는 아닌지 (false)</td>
      </tr>
      <tr>
        <td>max_motor_torque</td>
        <td>원하는 모터 속도를 달성하는 데 사용되는 최대 모터 토크를 설정합니다 (미터당 뉴턴).</td>
      </tr>
      <tr>
        <td>motor_speed</td>
        <td>이것은 모터가 회전해야하는 속도입니다</td>
      </tr>
      <tr>
        <td>freq_hz</td>
        <td>이것은 관절의 진동 주파수이며 헤르츠 단위입니다.</td>
      </tr>
      <tr>
        <td>damping_ratio</td>
        <td>조인트의이 감쇠비</td>
      </tr>
      <tr>
        <td>안부</td>
        <td>두 인스턴스가 충돌 할 수 있는지 (true) 아닌지 (false)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>보고:</h4>
  <p class="code">Integer (index of the joint)</p>
  <p> </p>
  <h4>예:</h4>
  <p class="code">var mainFixture = physics_fixture_create();<br/> physics_fixture_set_box_shape(mainFixture, 128, 32);<br/> var wheelFixture = physics_fixture_create();<br/> physics_fixture_set_circle_shape(wheelFixture, 32);<br/> var o_id = instance_create_layer(x+25,
    y + 100, &quot;Instances&quot;, obj_Wheel);<br/> physics_fixture_bind(mainFixture, id);<br/> physics_fixture_bind(wheelFixture, o_id);<br/> physics_joint_wheel_create(id, o_id, o_id.x, o_id.y, 0, 1, true, 10, 1, 15, 6, false);<br/> physics_fixture_delete(mainFixture);
    <br/> physics_fixture_delete(wheelFixture);
  </p>
  <p>위의 코드는 두 개의 새로운 조명기를 만들고 정의합니다. 그런 다음 호출 인스턴스와 연결을 위해 휠 조인트를 적용하기 전에 생성 된 새 인스턴스에 바인딩 된 후 고정구가 메모리에서 삭제됩니다.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language\GML_Reference\Physics\Joints\physics_joint_wheel_create.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="Joints.htm">관절</a></div>
        <div style="float:right">다음: <a href="physics_joint_weld_create.htm">physics_joint_weld_create</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
physics_joint_wheel_create
-->
  <!-- TAGS
physics_joint_wheel_create
-->

</body></html> 