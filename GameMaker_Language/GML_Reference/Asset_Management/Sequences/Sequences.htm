<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.2.9";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Sequences</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequences"/>
  <meta name="rh-index-keywords" content=""/>
  <meta name="search-keywords" content="Sequences"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Sequences">
        <span>시퀀스</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>시퀀스</h1>
  <p>시퀀스는 일반적으로 <a href="../../../../The_Asset_Editors/Sequences.htm">시퀀스 편집기를</a> 사용하여 IDE에서 생성되지만 코드를 사용하여 생성 및 편집 할 수도 있습니다. 그러나 사용 가능한 기능을 살펴보기 전에 GameMaker에서 시퀀스가 ​​정의되는 방식과 사용될 다른 용어를 이해하는 것이 중요합니다.</p>
  <p>우선 최상위 레벨에 <b>sequence element가</b> 있습니다. 이것은 룸 편집기를 통해 또는 적절한 <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">레이어 기능을</a> 사용하여 코드로 룸의 <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">레이어에 배치하는 것</a> 입니다. 레이어 요소에는 요소 ID 값 이외의 실제 속성이 없지만이 ID는 위에서 언급 한 레이어 기능을 사용하여 시퀀스 재생을 변경하거나 시퀀스 데이터에 액세스하는 데 필요합니다.</p>
  <p>다음으로 일반적인 객체 및 인스턴스와 마찬가지로 <b>시퀀스 객체</b> 및 <b>시퀀스 인스턴스</b> 가 있습니다. 시퀀스 <i>객체</i> 는 <b>자산 브라우저</b> 에서 생성하거나 <a href="sequence_create.htm"><tt>sequence_create ()</tt></a> 함수를 사용하여 생성 한 기본 리소스이며 시퀀스 <i>인스턴스</i> 는 레이어의 요소로 룸에 배치 된 해당 시퀀스 객체의 &quot;복사&quot;입니다. 시퀀스 오브젝트를 블루 프린트로, 시퀀스 인스턴스를 해당 블루 프린트에서 생성 한 것으로 생각하십시오. 시퀀스 객체와 인스턴스는 <a href="../../../GML_Overview/Structs.htm">구조체</a> 이며 일반 객체와 달리 시퀀스 객체 구조체는 런타임에 편집 할 수 있습니다. 시퀀스 객체는 해당 시퀀스를 요소로 만들 때 해당 시퀀스의 모든 추가 인스턴스에 영향을 미칩니다 (그리고 시퀀스 객체에 대한 편집은 재설정 <b>되지 않습니다)</b> <tt>room_restart ()</tt> 또는 <tt>game_restart ()</tt> 함수를 사용하여 게임 또는 방을 다시 시작하여). 시퀀스 인스턴스 구조체에는 <b>시퀀스 데이터</b> 구조체뿐만 아니라 재생 및 사물 (아래에서 자세히 설명)을 제어하는 ​​몇 가지 매개 변수가 포함되어 있습니다.</p>
  <p>마지막으로 위에서 언급했듯이 <b>시퀀스 데이터가 있습니다</b> . 이는 또 다른 구조체입니다. 이 구조체에는 시퀀스에 대한 <i>모든</i> 데이터가 포함됩니다. 포함 된 트랙, 해당 트랙의 속성, 재생 속도 등 이 구조체 내용의 정확한 세부 사항은 아래에 설명되어 있지만 기본적으로 <b>키 프레임 데이터</b> 를 사용하여 시퀀스가 ​​재생되는 동안 작업을 수행하는 <b>자산 트랙</b> 구조체 및 <b>매개 변수 트랙</b> 구조체로 구성됩니다.</p>
  <p>시퀀스 요소는 룸 <a href="../Rooms/Sequence_Layers/Sequence_Layers.htm">레이어 함수</a> 를 사용하여 처리되지만 시퀀스 객체, 인스턴스 및 데이터에는 다음과 같은 기능이 있습니다.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="sequence_exists.htm">sequence_exists</a></li>
    <li><a href="sequence_create.htm">sequence_create</a></li>
    <li><a href="sequence_destroy.htm">sequence_destroy</a></li>
    <li><a href="sequence_get.htm">sequence_get</a></li>
    <li><a href="sequence_track_new.htm">sequence_track_new</a></li>
    <li><a href="sequence_keyframe_new.htm">sequence_keyframe_new</a></li>
    <li><a href="sequence_keyframedata_new.htm">sequence_keyframedata_new</a></li>
    <li><a href="sequence_get_objects.htm">sequence_get_objects</a></li>
    <li><a href="sequence_instance_override_object.htm">sequence_instance_override_object</a></li>
  </ul>
  <p> </p>
  <p>인스턴스가 순서대로 사용되었는지 여부를 판별하는 데 사용할 수있는 인스턴스와 연관된 <strong>내장 변수도</strong> 있습니다.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="in_sequence.htm">in_sequence</a></li>
  </ul>
  <p> </p>
  <p>이러한 함수를 사용하여 시퀀스를 생성 또는 편집하기 전에 구조체 속성에 대한 아래의 자세한 설명을 읽는 것이 좋습니다. 새로운 시퀀스를 생성하는 방법에 대한 일반적인 개요는 다음과 같습니다.</p>
  <ul class="colour">
    <li><a href="sequence_create.htm"><tt>seqeunce_create ()</tt></a> 함수를 사용하여 새 시퀀스 객체를 만들고 시퀀스 객체 인덱스를 변수에 저장합니다. 이 인덱스는 시퀀스 객체 구조체에 대한 액세스를 제공합니다.</li>
  </ul>
  <p class="code">myseq = sequence_create();</p>
  <ul class="colour">
    <li>길이, 재생 모드, 재생 속도 등과 같은 시퀀스 오브젝트 최상위 레벨 값을 설정하십시오. 예를 들면 다음과 같습니다.</li>
  </ul>
  <p class="code">myseq.length = 120;<br/> myseq.loopmode = seqplay_pingpong</p>
  <ul class="colour">
    <li>시퀀스 객체에 트랙을 추가하기 전에 트랙을 생성해야하므로 <a href="sequence_track_new.htm"><tt>sequence_track_new ()</tt></a> 함수로 정의 된 <i>자산</i> 트랙 배열을 생성 할 수 있습니다. 코드에서 자산 트랙과 매개 변수 트랙 사이에는 실제로 차이가 없습니다. 그것들은 모두 단순히 트랙이며 그것들이 어떻게 작동하는지는 od 트랙 유형과 최상위 트랙에 하위 트랙으로 할당되는지 또는 아니. 따라서 자산에 대한 트랙을 만든 다음 다른 매개 변수에 대한 하위 트랙을 할당하면 이러한 하위 트랙이 자산의 <i>매개 변수</i> 트랙으로 작동합니다. 아래 예제는 나중에 시퀀스에 추가 될 단일 그래픽 자산 트랙을 만듭니다.</li>
  </ul>
  <p class="code">var mytracks = array_create(1);<br/> mytracks[0] = sequence_track_new(seqtracktype_graphic);</p>
  <ul class="colour">
    <li>각 자산 트랙에는 시퀀스의 모양 또는 위치 등을 알려주는 데이터가 있어야하며 이는 <i>키 프레임</i> 형태로 추가됩니다. 자산 트랙의 최상위 레벨에서는 다양한 항목에 대한 키 프레임을 설정할 수 있지만 (아래의 트랙 구조 섹션에 나열되어 있음) 자산 트랙 키 프레임이므로 보간되지 않으며 단순히 주어진 프레임에 도달했을 때 참조하는 값. 각 키 프레임은 배열에 추가 된 구조체이며이 배열은 자산 트랙에 할당됩니다. 키 프레임 구조체를 만들려면 <a href="sequence_keyframe_new.htm"><tt>sequence_keyframe_new ()</tt></a> 함수를 호출하고 필요한 데이터로 키 프레임을 채우려면 <a href="sequence_keyframedata_new.htm"><tt>sequence_keyframedata_new ()</tt></a> 함수를 사용합니다.</li>
  </ul>
  <p class="code">// Create a new keyframe struct for a graphics asset track and add it to an array (as you can have multiple keys in a frame)<br/> var graphickeys = array_create(1);<br/> graphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);<br/> // Set the graphics
    keyframe top level data for the keyframe position and length, etc...<br/> graphickeys[0].frame = 0;<br/> graphickeys[0].length = 1;<br/> graphickeys[0].stretch = true;<br/> graphickeys[0].disabled = false;<br/> // Create the channel data that will
    go into this keyframe (again an array, as each key can have multiple channels of keyframe data)<br/> var graphickeydata = array_create(1);<br/> graphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);<br/> graphickeydata[0].spriteIndex
    = spr_Platform;<br/> graphickeydata[0].channel = 0;<br/> // Add the keyframe data channels to the graphics track keyframe<br/> graphickeys[0].channels = graphickeydata;<br/> // Add the definied keyframes to the track<br/> mytracks[0].name = &quot;TestGraphicTrack&quot;;<br/>    mytracks[0].keyframes = graphickeys;</p>
  <ul class="colour">
    <li>이제 방금 만든 그래픽 트랙에 하위 트랙으로 할당 할 파라미터 트랙을 만들어야합니다. 이것은 위에서 보여준 것과 비슷한 방식으로 진행될 것입니다. 이제는 트랙에 그 목적을 나타내는 이름을 주어야합니다.이 경우에는이 트랙을 사용하여 그래픽 트랙 트랙을 코스 위로 옮길 것입니다. 시퀀스 애니메이션 프레임</li>
  </ul>
  <p class="code">// Create a new parameter track struct for the position of the graphic<br/> var paramtracks = array_create(1);<br/> paramtracks[0] = sequence_track_new(seqtracktype_real);<br/> paramtracks[0].name = &quot;position&quot;;<br/> paramtracks[0].interpolation
    = true;<br/> // Create the keyframe struct to hold the parameter channel data and set the frame position for the keyframe<br/> var paramkeys = array_create(2);<br/> paramkeys[0] = sequence_keyframe_new(seqtracktype_real);<br/> paramkeys[0].frame =
    0;<br/> paramkeys[1] = sequence_keyframe_new(seqtracktype_real);<br/> paramkeys[1].frame = 120;<br/> // Create the keyframe data structs<br/> var paramkeydata1 = array_create(2);<br/> paramkeydata1[0] = sequence_keyframedata_new(seqtracktype_real);<br/>    paramkeydata1[0].channel = 0; // Channel 0 for a position track is the X position<br/> paramkeydata1[0].value = 0;<br/> paramkeydata1[1] = sequence_keyframedata_new(seqtracktype_real);<br/> paramkeydata1[1].channel = 1; // Channel 1 for a position
    track is the Y position<br/> paramkeydata1[1].value = 0;<br/> var paramkeydata2 = array_create(2);<br/> paramkeydata2[0] = sequence_keyframedata_new(seqtracktype_real);<br/> paramkeydata2[0].channel = 0;<br/> paramkeydata2[0].value = room_width;<br/>    paramkeydata2[1] = sequence_keyframedata_new(seqtracktype_real);<br/> paramkeydata2[1].channel = 1;<br/> paramkeydata2[1].value = room_height;<br/> // Assign the keyframe data structs to the channels for each key<br/> paramkeys[0].channels = paramkeydata1;<br/>    paramkeys[1].channels = paramkeydata2;<br/> // Assign the keys to the parameter track<br/> paramtracks[0].keyframes = paramkeys;</p>
  <ul class="colour">
    <li>마지막으로 파라미터 트랙을 서브 트랙으로 시작시 생성 한 메인 그래픽 자산 트랙에 할당 한 다음이 트랙을 시퀀스에 할당하여 룸에서 인스턴스를 생성 할 수 있습니다. :</li>
  </ul>
  <p class="code">mytracks[0].tracks = paramtracks;<br/> myseq.tracks = mytracks;<br/> layer_sequence_create(&quot;Assets_1&quot;, 0, 0, myseq);</p>
  <p>위의 명령어는 시퀀스의 (0, 0) 위치 <i>에</i> 스프라이트를 그린 다음 오른쪽 아래 모서리로 이동하고 루프에서 다시 움직이는 매우 간단한 시퀀스 객체를 만듭니다. 언급했듯이 시퀀스에 대한 데이터를 제공하거나 얻기 위해 다른 구조체에 액세스해야하는 곳이 많으며 아래 섹션에는 이러한 구조체에 포함 된 모든 다른 속성이 나열되어 있습니다.</p>
  <ul class="colour">
    <li><a name="object"></a> <a href="Sequence_Structs/The_Sequence_Object_Struct.htm"><label for="1">시퀀스 객체 구조</label></a></li>
    <li><a name="instance"></a> <a href="Sequence_Structs/The_Sequence_Instance_Struct.htm"><label for="2">시퀀스 인스턴스 구조</label></a></li>
    <li><a name="track"></a> <a href="Sequence_Structs/The_Track_Struct.htm"><label for="3">트랙 구조</label></a></li>
    <li><a name="keyframe"></a> <a href="Sequence_Structs/The_Keyframe_Struct.htm"><label for="4">키 프레임 구조</label></a></li>
    <li><a name="keyframe_data"></a> <a href="Sequence_Structs/The_Keyframe_Data_Struct.htm"><label for="5">키 프레임 데이터 구조</label></a></li>
  </ul>
  <p> </p>
  <p>마지막으로, 어느 <strong>이벤트로</strong> <strong>순간을</strong> 유발하거나 <strong>방송 메시지로</strong> 할 수 있습니다 시퀀스에 코드를 추가 할 수 있습니다. 이에 대해서는 다음 페이지에서 자세히 설명합니다.</p>
  <ul class="colour">
    <li><a href="Sequence_Events_Moments_Broadcast.htm">이벤트, 순간 및 방송 메시지</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language/GML_Reference/Asset_Management/Sequences/Sequences.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="../Asset_Management.htm">자산 관리</a></div>
        <div style="float:right">다음: <a href="../Fonts/Fonts.htm">폰트</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Sequences
-->
  <!-- TAGS
sequence_functions
-->

</body></html> 