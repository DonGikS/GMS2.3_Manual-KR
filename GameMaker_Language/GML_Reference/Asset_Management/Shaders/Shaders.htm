<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.2.8";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Shaders</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders"/>
  <meta name="rh-index-keywords" content=""/>
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Shaders">
        <span>셰이더</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>셰이더</h1>
  <p>셰이더는 그래픽 카드에 의해 화면에 <a class="tooltip" title="GameMaker Studio 2에서 무언가가 렌더링 될 때, 이는 일반적으로 단순히 &#39;디스플레이 버퍼에 그려 지거나&#39;표면에 그려 졌음을 의미합니다. 렌더링은 어떤 종류의 벡터 소스 (글꼴과 같은)를 비트 맵 이미지로 변환하는 프로세스를 가리킬 수도 있습니다.">렌더링</a> 되는 내용과 방법을 조작 할 수있는 매우 강력한 도구입니다. 이 작은 프로그램은 실제로 그래픽 카드 자체에서 실행되기 때문에 처리 속도가 매우 빠르기 때문에 더 많은 게임 로직을 위해 귀중한 CPU 사이클을 확보 할 수 있습니다.</p>
  <p>셰이더를 만들려면 <a href="../../../../The_Asset_Editors/Shaders.htm">셰이더 편집기를</a> 사용하여 <b>정점 셰이더</b> 와 <b>조각 셰이더</b> ( <b>픽셀 셰이더</b> 라고도 함)를 모두 작성해야하며, 예를 들어 인스턴스의 정점 위치 만 변경하려는 경우 그려 지거나 픽셀의 색상 값만 변경하려는 경우 완전한 쉐이더가 작동하려면 <b>두</b> 프로그램이 <b>모두</b> 필요 <b>합니다</b> .</p>
  <p class="note"><b>참고</b> : 셰이더를 사용하면 전달 된 변수의 값을 변경할 수 <b>없으므로</b> 이를 참조하는 모든 설명서에서 <b>셰이더 상수</b> 라고합니다.</p>
  <p>셰이더 자체를 프로그래밍하는 데 사용할 수있는 사용 가능한 GLSL ES 함수 및 변수에 대한 전체 개요는 <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">OpenGL ES Shading Language (GLSL ES) 참조 페이지를 참조하십시오</a> . 다음 링크는 OpenGL ES Api에 대한 빠른 참조 카드가 포함되어 있으므로 유용합니다 (표시된 마지막 두 카드 만 GameMaker Studio 2에 적용됨) : <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">OpenGL ES 참조 카드</a> .</p>
  <p>프로젝트에서 셰이더를 사용하는 것은 매우 간단하며 가장 기본적인 사용법을 얻기 위해 몇 줄의 코드 만 필요합니다.</p>
  <p class="code">shader_set(myShader);<br/> draw_self();
    <br/> shader_reset();
  </p>
  <p>보시다시피, 비슷한 방식으로 모드와 서피스를 블렌딩하여 셰이더를 먼저 선택 (설정)하고 사용하여 원하는 것을 그린 다음 그 후에 그리기 대상을 다시 재설정합니다. 단일 스프라이트 또는 배경이 아닌 셰이더를 통해 전체 화면을 렌더링하려면 현재 뷰를 잡도록 표면을 설정 한 다음 해당 셰이더로 전달해야합니다 (자세한 내용은 <a href="../../Drawing/Surfaces/Surfaces.htm">표면</a> 참조). .</p>
  <p class="note"><b>참고</b> : 그리기와 관련된 셰이더 <b>는 그리기 이벤트에서만 사용할</b> 수 있습니다. 또한 셰이더에 색상 값을 사용하려고하지만 개체에 텍스처가 없으면 결과가 검은 색으로 표시됩니다.</p>
  <p>사용중인 셰이더에 입력 값이있는 경우 <i>균일 한</i> 기능을 사용하여 설정됩니다. 먼저 셰이더를 사용하여 인스턴스의 <b>이벤트 생성</b> 에서 <a href="shader_get_uniform.htm"><tt>shader_get_uniform ()</tt></a> 함수를 사용하여 유니폼 <i>핸들</i> (기본적으로 유니폼을 설정하기위한 ID 값임)을 얻은 다음 이러한 핸들을 변수에 다음과 같이 저장합니다.</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br/> colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>균일 한 핸들이 있으면 <b>Draw Event</b> 의 셰이더 코드에서 다음과 같이 설정할 수 있습니다.</p>
  <p class="code">shader_set(sShaderDemo5);<br/> shader_set_uniform_f(colour_to_find, 1,1,1 );<br/> shader_set_uniform_f(colour_to_set, 1,0,0 );<br/> draw_sprite(sprite_index,image_index,x+24, y);<br/> shader_reset();
  </p>
  <p>마지막으로 유의해야 할 점은 모든 플랫폼에서 쉐이더를 사용할 수 있지만 여전히 장치마다 다르며 장치의 하드웨어 또는 소프트웨어에서 쉐이더를 사용할 수없는 경우 오류가 발생한다는 것입니다. 따라서 유니폼을 설정하거나 셰이더 자체를 사용하기 전에 셰이더가 컴파일되었는지 확인하는 것이 좋습니다.</p>
  <p class="code">if (shader_is_compiled(myShader))<br/>     {
    <br/>     shader_set(myShader);
    <br/>     draw_self();
    <br/>     shader_reset();
    <br/>     }
    <br/> else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>추가 검사로 <a href="shaders_are_supported.htm"><tt>shaders_are_supported ()</tt></a> 함수를 호출하여 하드웨어가 셰이더도 지원하는지 확인할 수 있습니다. 일반적으로 게임 시작시 이러한 확인을 수행하고 결과를 <a href="../../../GML_Overview/Variables/Global_Variables.htm">전역 변수</a> 로 저장 한 다음 나중에 확인합니다.</p>
  <p>GameMaker Studio 2는 GLSL ES 셰이더 내에서 사용할 수있는 일부 조건부 컴파일 <b>매크로</b> 도 지원하므로 특정 지원 플랫폼에서 대체 코드를 수행 할 수 있습니다. 매크로와 이들이 생성 될 플랫폼은 아래 표에 나와 있습니다.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>셰이더 매크로</th>
        <th>값</th>
        <th>대상 플랫폼</th>
      </tr>
      <tr>
        <td>_YY_GLSLES_</td>
        <td>1</td>
        <td>모든 대상 플랫폼</td>
      </tr>
      <tr>
        <td>_YY_GLSL_</td>
        <td>2</td>
        <td>맥과 우분투 (Linux)</td>
      </tr>
      <tr>
        <td>_YY_HLSL11_</td>
        <td>삼</td>
        <td>윈도우, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>_YY_PSSL_</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>GLSL ES 형식 셰이더를 사용하여 나열된 플랫폼 중 하나에서 GameMaker Studio 2 프로젝트를 컴파일하면 위의 매크로 <i>중 하나</i> 가 생성되어 다음과 같이 셰이더 코드에서 확인할 수 있습니다.</p>
  <p class="code">#ifdef _YY_HLSL11_<br/> // HLSL shader code here<br/> #else
    <br/> // GLSL shader code here<br/> #endif
  </p>
  <p>셰이더를 처음 사용하거나 GameMaker Studio 2를 사용하여 셰이더를 만들고 사용하는 데 대한보다 완벽한 가이드를 원하면 다음 매뉴얼 페이지를 참조하십시오.</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">셰이더 사용 안내서</a></li>
  </ul>
  <p> </p>
  <p>쉐이더 그리기 및 설정에 사용할 수있는 기능은 다음과 같습니다.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm">셰이더 _get_name</a></li>
    <li><a href="shader_get_uniform.htm">shader_get_uniform</a></li>
    <li><a href="shader_get_sampler_index.htm">shader_get_sampler_index</a></li>
    <li><a href="shader_set.htm">셰이더 _ 세트</a></li>
    <li><a href="shader_set_uniform_f.htm">shader_set_uniform_f</a></li>
    <li><a href="shader_set_uniform_f_array.htm">shader_set_uniform_f_array</a></li>
    <li><a href="shader_set_uniform_i.htm">shader_set_uniform_i</a></li>
    <li><a href="shader_set_uniform_i_array.htm">shader_set_uniform_i_array</a></li>
    <li><a href="shader_set_uniform_matrix.htm">shader_set_uniform_matrix</a></li>
    <li><a href="shader_set_uniform_matrix_array.htm">shader_set_uniform_matrix_array</a></li>
    <li><a href="shader_reset.htm">셰이더 _ 재설정</a></li>
    <li><a href="shader_is_compiled.htm">shader_is_compiled</a></li>
    <li><a href="shaders_are_supported.htm">shaders_are_supported</a></li>
    <li><a href="shader_current.htm">셰이더 _ 현재</a></li>
  </ul>
  <p> </p>
  <p>또한 모든 셰이더의 전역 상태를 정의하는 특수 함수가 있습니다.</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm">shader_enable_corner_id</a></li>
  </ul>
  <p> </p>
  <p>셰이더에서 텍스쳐 샘플러로 작업 할 때 사용중인 텍스쳐에 대한 정보가 필요합니다.이 경우 다음 함수를 사용할 수 있습니다.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm">sprite_get_texture</a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm">sprite_get_uvs</a></li>
    <li><a href="../Fonts/font_get_texture.htm">font_get_texture</a></li>
    <li><a href="../Fonts/font_get_uvs.htm">font_get_uvs</a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm">texture_get_width</a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm">texture_get_height</a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm">texture_get_texel_width</a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm">texture_get_texel_height</a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm">texture_set_stage</a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm">gpu_set_texfilter_ext</a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm">gpu_set_texrepeat</a></li>
  </ul>
  <p> </p>
  <p>이 매뉴얼은되지만 <b>되지</b> 오픈 GL 쉐이더 함수와 변수 중 하나를 포함, 그것은 이러한 상수는 쉐이더 오픈 GL 사양의 일부가 아니며를 단순화하기 위해 제공됩니다 GameMaker 스튜디오 2로 고유 한 것들의 목록을 포함하지 프로젝트 내에서 셰이더 통합</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">셰이더 상수</a></li>
  </ul>
  <p> </p>
  <p>마지막으로 GameMaker Studio 2를 사용하면 고유 한 사용자 정의 기본 요소를 만들 수있는 고유 한 <b>정점 형식</b> 을 정의 할 수 있습니다. 이는 셰이더 작업 속도를 크게 높이거나 기능을 확장하고 놀라운 효과를 만드는 데 사용될 수 있습니다. 다음 섹션에서 이에 대한 정보를 찾을 수 있습니다.</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">프리미티브 Vnd 정점 형식</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('GameMaker_Language\GML_Reference\Asset_Management\Shaders\Shaders.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="../Asset_Management.htm">자산 관리</a></div>
        <div style="float:right">다음: <a href="../Sequences/Sequences.htm">시퀀스</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->

</body></html> 