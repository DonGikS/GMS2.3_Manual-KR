<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "2.0_9";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Movement And Controls</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Some basic code and DnD to show people how to move things around within a game."/>
  <meta name="rh-index-keywords" content="Quick Start - Movement And Controls"/>
  <meta name="search-keywords" content="movement,controls"/>
  <meta name="robots" content="NOODP"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Movement And Controls">
        <span>움직임과 컨트롤</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>움직임과 컨트롤</h1>
  <p>이 빠른 시작 안내서의 <a href="Drawing.htm">이전 섹션에서는</a> 화면에 그림을 그리는 몇 가지 예를 보여 주었지만 이동할 수없는 경우 그림을 그리는 것만으로는 좋지 않습니다.이 섹션에서는 몇 가지를 제공합니다. 다른 유형의 게임에 대한 몇 가지 기본 제어 체계뿐만 아니라 개체의 움직임 예. 모든 예제는 DML (Drag and Drop) 및 GameMaker Language (GML)를 사용하여 제공되므로보다 편한 느낌을 가진 모든 것을 사용할 수 있습니다. 가능한 빨리 물건을 만들기 시작하기 때문에 여기서는 너무 깊이 설명하지 않을 것입니다. 따라서 링크를 탐색하고 &quot;검색&quot;기능을 사용하는 것이 좋습니다. 확실하지 않은 사항에 대한 추가 정보를 찾으려면 설명서를 참조하십시오.</p>
  <p>더 나아 가기 전에 <a href="../Introduction/The_Start_Page.htm">시작 페이지</a> 에서 새 프로젝트 (GML 또는 DnD ™)를 만들고 몇 가지 스프라이트와 객체 또는 두 개를 추가하거나 만들 수 있습니다. 이것들을 사용하여 테스트 할 수있는 몇 가지 코드-프로젝트에 인스턴스를 배치 할 공간이 있는지 확인하십시오. 간단한 흰색 사각형처럼 스프라이트가 어떻게 보이는지 걱정하지 마십시오. 아래에 나열된 예제로 작업을 시작할 수있는 모든 것을 준비했습니다.</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down" href="#"><span data-open-text="true">마우스를</span> <span data-close-text="true">향해 이동</span> <span data-open-text="true">마우스를</span> <span data-close-text="true">향해 이동</span></a></p>
  <div class="droptext" data-targetname="drop_down">
    <p class="dropspot">객체를 움직이고 플레이어와 상호 작용하는 가장 간단한 방법 중 하나는 마우스를 사용하는 것입니다.이 예에서는 기본 코드를 사용하여 사용자가 왼쪽을 클릭 한 곳으로 객체를 이동시키는 방법을 보여줍니다. 마우스 버튼 .</p>
    <p class="dropspot">시작하려면 객체를 열고 스프라이트를 할당 한 다음 <strong>Global Left Mouse Down 이벤트를 지정하십시오</strong> .</p>
    <p class="dropspot"><img alt="Adding The Mouse Left Button Down Event" class="center" src="../assets/Images/QS_Guide/QS_Add_GlobalLMBDownEvent.png"/></p>
    <p class="dropspot"><strong>전역</strong> 마우스 이벤트는 방 어디에서나 클릭을 감지하기 때문에 사용되며, 일반 마우스 이벤트는 마우스가 실제로 인스턴스 <a class="tooltip" title="스프라이트의 경우 경계 상자는 충돌이 처음 감지되는 영역의 가장자리에 지정된 이름이며 적용되는 스프라이트와 크기가 같지 않아도됩니다. 시퀀스의 경우 경계 상자는 하나 이상의 자산이 캔버스에서 차지하는 전체 공간의 바깥 쪽 가장자리입니다.">경계 상자</a> 내에서 클릭하는 경우에만 클릭을 감지합니다. 이 경우 다음 DnD ™ 또는 GML을 추가하려고합니다.</p>
    <p class="dropspot"><img alt="DnD To Move Instance Towards Mouse" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_1_1.png"/></p>
    <p class="code">move_towards_point(mouse_x, mouse_y, 2);</p>
    <p class="dropspot">여기에서는 인스턴스가 화면상의 위치를 ​​향해 이동하도록 <span class="inline">지시</span> 합니다.이 경우 &quot; <span class="inline">mouse_x</span> &quot;및 &quot; <span class="inline">mouse_y</span> &quot;위치 ( &quot; <span class="inline">mouse_x</span> &quot;및 &quot; <span class="inline">mouse_y</span> &quot;는 항상 현재 마우스 커서 위치를 유지하는 <strong>내장</strong> <a class="tooltip" title="변수는 프로그램 내에서 명명 된 값으로, 필요할 때마다 수정, 저장 및 표시 할 수 있습니다. 예를 들어 이름이 XYZ 인 정수 변수가 있고 값 10을 저장하는 경우 A = XYZ + 10과 같은 작업을 수행 할 수 있습니다. 그러면 XYZ가 10이고 변수 A의 값이 20으로 설정됩니다. 그것에 10을 더하고 있습니다. 연산자를 사용하여 변수 값을 변경할 수도 있으므로 XYZ = XYZ + 100을 수행하면 XYZ 변수의 값이 110으로 수정됩니다. 변수는 식별자와 다른 자산에 대한 참조를 저장하는 데 사용될 수도 있습니다.">변수</a> 입니다). DnD ™는 &quot; <span class="inline">direction</span> &quot;및 &quot; <span class="inline">speed</span> &quot; <a href="../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/Instance_Variables.htm"><strong>인스턴스 변수</strong></a> 를 설정하여이를 수행 <a href="../GameMaker_Language/GML_Reference/Movement_And_Collisions/Movement/move_towards_point.htm"><span class="inline">하지만</span></a> GML은 <a href="../GameMaker_Language/GML_Reference/Movement_And_Collisions/Movement/move_towards_point.htm"><span class="inline">move_towards_point ()</span></a> 함수를 사용하여이를 수행합니다 (이는 <span class="inline">속도</span> 및 <span class="inline">방향</span> 변수도 사용하기 쉬운 단일 기능으로 설정합니다) .</p>
    <p class="dropspot">이 개체의 인스턴스를 방에 놓고 재생 버튼을 누르십시오 을 클릭 한 다음 인스턴스가 마우스를 향해 움직 이도록 방 주위에서 :</p>
    <p class="dropspot"><img alt="Animation Of Instance Moving Towards Mouse" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_1_1.gif"/>큰! 이제 객체의 인스턴스가 클릭 한 위치로 이동하고 버튼을 누르고 있으면 인스턴스가 마우스 커서를 계속 따라갑니다. 그러나 문제가 있습니다 ... 한 번 클릭하고 릴리스 한 후에는 인스턴스가 계속 움직여 결국 방을 떠나게됩니다! 이 문제를 해결할 수있는 방법에는 여러 가지가 있으며, 어떤 방법을 선택하든 원하는 작업에 따라 달라 지지만, 가장 쉬운 방법은 <strong>Global Mouse Button Release</strong> 이벤트를 추가하는 것입니다. 그리고이 코드를 제공하십시오 :</p>
    <p class="dropspot"><img alt="DnD To Set The Instance Speed" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_1_2.png"/></p>
    <p class="code">speed = 0;</p>
    <p class="dropspot">이를 통해 마우스 버튼을 누르고있는 동안에 만 인스턴스가 마우스 커서를 따라 가고 버튼을 놓으면 이동이 중지됩니다. 재생을 누르십시오 지금 테스트하십시오.</p>
    <p class="dropspot">우리는이 예제를 떠나기 전에, 당신은 클릭하고 마우스 버튼을 <em>누르고,하지만</em> 커서를 이동하지 않으면 우리가 주위 다음 인스턴스가 &quot;진동&quot;다음 커서를 향해 이동합니다 ... 해결해야한다는 하나의 최종 문제가 있습니다 그것. 인스턴스가 한 번에 1 픽셀보다 빠르게 이동하기 때문에 위치를 &quot;오버 슈트&quot;한 다음 뒤로 이동 한 다음 다시 오버 슈트하려고합니다. (이동 속도 5 또는 이와 유사한 것으로 설정) 즉시 명백하지 않은 경우 문제를 확인하십시오).</p>
    <p class="dropspot"><img alt="Animation Showing Instance Vibrating" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_1_2.gif"/>이 문제를 해결하려면 다음 코드를 사용하여 객체에 <strong>단계 이벤트</strong> 를 추가해야합니다.</p>
    <p class="dropspot"><img alt="DnD Actions For The Step Event" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_1_3.png"/></p>
    <p class="code">var _dist = point_distance(x, y, mouse_x, mouse_y);<br/> if _dist &lt;= speed<br/>     {<br/>     speed = 0;<br/>     }</p>
    <p class="dropspot">여기서는 인스턴스에서 마우스 위치까지의 거리를 확인하고 현재 속도와 같거나 작은 경우 속도를 0으로 설정합니다. 이렇게하면 마우스 위치에 충분히 가까워지면 인스턴스가 중지됩니다. 불쾌한 &quot;진동&quot;문제를 얻지 마십시오.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down1" href="#"><span data-open-text="true">키보드로</span> <span data-close-text="true">4 방향 및 8 방향 움직임</span> <span data-open-text="true">키보드로</span> <span data-close-text="true">4 방향 및 8 방향 움직임</span></a></p>
  <div class="droptext" data-targetname="drop_down1">
    <p class="dropspot"><a href="What_Is_Programming_.htm">이 가이드의 시작 부분에서</a> 게임 단계마다 2 픽셀 씩 인스턴스를 오른쪽으로 이동하는 다음 DnD ™ 및 GML 코드를 보여주었습니다.</p>
    <p class="dropspot"><img alt="DnD Example" class="center" src="../assets/Images/QS_Guide/QS_DnD_Example.png"/></p>
    <p class="code">x = x + 2;</p>
    <p class="dropspot">이 유형의 이동을 <strong>위치</strong> 이동이라고합니다. 코드를 실행할 때마다 인스턴스를 선택하고 새 위치에 다시 배치하기 때문입니다. 이 예제에서 수행 할 작업은 이러한 유형의 이동을 사용하여 인스턴스를 4 방향 (위, 아래, 왼쪽 및 오른쪽)으로 이동하는 방법을 보여줍니다.</p>
    <p class="dropspot">시작하려면 오브젝트를 열고 스프라이트를 지정하십시오. 이제이 시점에서 다양한 <strong>키보드 이벤트</strong> 를 추가 할 수 있으며, 각 인스턴스에서 원하는 방향으로 인스턴스가 움직이지만 플레이어는 한 번에 한 방향으로 만 움직일 수 있기를 원합니다. 키보드 이벤트는 코드를 사용하는 것보다 조금 더 복잡합니다. 대신 화살표 키를 사용하여 이동하기 위해 다음 DnD ™ 또는 GML과 함께 객체에 추가해야하는 <strong>단계 이벤트</strong> 를 사용합니다.</p>
    <p class="dropspot"><img alt="DnD Step Event Movement Actions" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_2_1.png"/></p>
    <p class="code">if keyboard_check(vk_left)<br/>     {<br/>     x = x - 2;<br/>     }<br/> else if keyboard_check(vk_right)<br/>     {<br/>     x = x + 2;<br/>     }<br/> else if keyboard_check(vk_up)<br/>     {<br/>     y = y - 2;<br/>     }<br/> else if keyboard_check(vk_down)<br/>          {<br/>     y = y - 2;<br/>     }</p>
    <p class="dropspot">&quot; <span class="inline">if ... else if ... else if ...</span> &quot;구조를 사용하여 인스턴스가 한 번에 한 방향으로 만 이동하므로 인스턴스는 위, 아래로만 움직일 수 있어야합니다. 왼쪽이나 오른쪽이지만 대각선은 아닙니다. 물체의 실을 방에 놓고 <strong>재생</strong> 버튼을 누릅니다 그것을 지금 테스트하십시오! 모든 것이 올바르게 끝나면 다음과 같은 것이 있어야합니다.</p>
    <p class="dropspot"><img alt="Animation Showing 4-Way Keyboard Movement" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_2_1.gif"/></p>
    <p class="dropspot">이 코드를 수정하여 4 방향 이동을 8 방향 이동으로 쉽게 변환 할 수 있습니다. 코드 블록에서 &quot; <span class="inline">else</span> &quot;명령을 제거하면 모든 것이 다음과 같습니다.</p>
    <p class="dropspot"><img alt="DnD Step Event Movement Actions" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_2_2.png"/></p>
    <p class="code">if keyboard_check(vk_left)<br/>     {<br/>     x = x - 2;<br/>     }<br/> if keyboard_check(vk_right)<br/>     {<br/>     x = x + 2;<br/>     }<br/> if keyboard_check(vk_up)<br/>     {<br/>     y = y - 2;<br/>     }<br/> if keyboard_check(vk_down)<br/>          {<br/>     y = y - 2;<br/>     }</p>
    <p class="dropspot"><strong>재생</strong> 버튼을 누르면 다음과 같이 보일 것입니다 :</p>
    <p class="dropspot"><img alt="Animation Showing 8-Way Keyboard Movement" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_2_2.gif"/></p>
    <p class="dropspot">GML로 코딩하는 사용자에게 주목할 가치가있는 마지막 한 가지 ... DnD ™를 사용할 때 드롭 다운 목록에서 사용하려는 키보드 키를 선택할 수 있지만 GML을 사용하면 그렇게 간단하지 않습니다. 위 코드에 표시된 화살표 키 상수와 같이 사용할 수있는 여러 <a href="../GameMaker_Language/GML_Reference/Game_Input/Keyboard_Input/Keyboard_Input.htm">키보드 상수</a> 가 있지만 영숫자 키 <em>에는</em> 상수가 <em>없습니다</em> . 이들은 약간 다르게 처리되므로 <a href="../GameMaker_Language/GML_Reference/Strings/ord.htm"><span class="inline">ord ()</span></a> 함수를 사용해야합니다. 아래 코드는 화살표 키 대신 WASD를 사용하여 어떻게 작동하는지 보여줍니다.</p>
    <p class="code">if keyboard_check(ord(&quot;A&quot;))<br/>     {<br/>     x = x - 2;<br/>     }<br/> if keyboard_check(ord(&quot;D&quot;))<br/>     {<br/>     x = x + 2;<br/>     }<br/> if keyboard_check(ord(&quot;W&quot;))<br/>     {<br/>     y = y - 2;<br/>   }<br/>      if keyboard_check(ord(&quot;S&quot;))<br/>     {<br/>     y = y - 2;<br/>     }</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down2" href="#"><span data-open-text="true">게임 패드 움직임</span> <span data-close-text="true">게임 패드 움직임</span></a></p>
  <div class="droptext" data-targetname="drop_down2">
    <p class="dropspot">마우스 움직임과 키보드 움직임을 다루었으므로 이제 <strong>게임 패드</strong> 움직임을 다룰 차례입니다. 자, 우리는 d-pad를 다루지 않을 것입니다. 실제로 키보드를 사용하는 것과 똑같이 작동합니다 (위의 예제에서 <a href="../GameMaker_Language/GML_Reference/Game_Input/GamePad_Input/gamepad_button_check.htm"><span class="inline">gamepad_button_check ()</span></a> 또는 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Gamepad/If_Gamepad_Button_Down.htm">If Gamepad button Down에</a> 대한 키보드 기능 변경).이 예제에서는 움직임에 아날로그 스틱을 사용하는 것을보십시오.</p>
    <p class="dropspot">시작하려면 사용중인 게임 패드를 감지해야합니다. 게임 패드에는 0에서 11까지의 ID 값이 주어 지므로 &quot; <span class="inline">for</span> &quot;루프를 사용하여 연결된 게임 패드의 ID를 감지하고이 ID 값을 나중에 사용할 수 있도록 변수에 저장합니다. 연결된 첫 번째 게임 패드 만 설정하기를 원하기 때문에 게임 패드를 감지 한 후 &quot; <span class="inline">break</span> &quot;명령을 사용하여 루프를 &quot; <span class="inline">깨뜨</span> 립니다&quot;(예 : 첫 번째 게임 패드가 연결된 경우) ID 4, 루프는 5 번만 실행되어 ID 값 0-4를 확인한 다음 게임 패드가 발견되면 루프를 종료합니다. 따라서 객체를 만들거나 열어서 스프라이트를 할당 한 후 다음과 같이 <strong>이벤트 생성</strong> 을 추가 <strong>하십시오</strong> .</p>
    <p class="dropspot"><img alt="Getting Gamepad ID Using DnD" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_3_1.png"/></p>
    <p class="code">gamepad_id = -1;<br/> for (var i = 0; i &lt; 12; i += 1;)<br/>     {<br/>     if gamepad_is_connected(i)<br/>         {<br/>         gamepad_id = i;<br/>         gamepad_set_axis_deadzone(gamepad_id, 0.2);<br/>         break;<br/>         }<br/> }
    </p>
    <p class="dropspot">위 코드에서 게임 패드의 <strong><a class="tooltip" title="데드 존은 게임이 인식하기 전에 아날로그 스틱을 움직여야하는 거리입니다. 데드 존이 낮 으면 아날로그 스틱의 약간의 움직임이 플레이어 나 조준 등을 움직이게합니다. 데드 존 값이 높다는 것은 게임이 감지하기 전에 아날로그 스틱이 훨씬 더 큰 움직임을 필요로한다는 것을 의미합니다.">데드 존</a></strong> 을 설정했습니다. 다른 게임 패드 제조사의 아날로그 스틱은 다른 감성을 가지고 있기 때문에 때로는 너무 민감하여 데드 존을 설정하지 않으면 게임에서 원치 않는 움직임을 일으킬 수 있습니다. 따라서 우리는 데드 존을 0.2와 같은 값으로 설정하여 GameMaker Studio 2가 <a class="tooltip" title="절대 값은 값의 부호가 무시되는 값으로 기본적으로 모든 값을 양수 또는 0으로 변환합니다. 예를 들어 -10의 절대 값은 10입니다.">절대</a> 값 아래의 게임 패드 스틱 값을 무시하도록합니다.</p>
    <p class="dropspot">실제 움직임을 추가하려면 <strong>Step Event</strong> 가 필요하므로 지금 추가하고 다음 DnD ™ 또는 GML을 제공하십시오.</p>
    <p class="dropspot"><img alt="Get Gamepad Input Using DnD" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_3_2.png"/></p>
    <p class="code">if gamepad_id &gt; -1<br/>     {<br/>     var _h = gamepad_axis_value(gamepad_id, gp_axislh);<br/>     var _v = gamepad_axis_value(gamepad_id, gp_axislv);<br/>     x += _h * 4;<br/>     y += _v * 4;<br/>     }</p>
    <p class="dropspot">여기서 <em>왼쪽</em> 스틱의 수평 또는 수직 이동을 확인합니다. 축 함수는 -1과 1 사이의 값을 반환하므로 가로 축 -1은 왼쪽, 0은 움직이지 않고 1은 오른쪽, 세로 축은 -1, 위는 0, 움직이지 않으면 1 . 또한 값이 -1과 1 <em>사이</em> 에 있으므로 예를 들어 가로 축은 0.5의 값을 반환 할 수 있습니다. 즉, 스틱이 &quot;휴식&quot;위치 사이의 중간에 있고 오른쪽으로 완전히 밀렸 음을 의미합니다. 따라서 우리는 값에 4를 곱합니다 (인스턴스가 이동하려는 속도에 따라 실제로는 임의의 값을 곱할 수 있음). 이는 이동 속도에 따라 인스턴스의 속도가 달라짐을 의미합니다 스틱 축에 만들어졌습니다.</p>
    <p class="dropspot">이 개체의 인스턴스를 방에 놓고 <strong>재생</strong> 버튼을 누릅니다. 연결된 게임 패드의 왼쪽 스틱을 사용하여 이동하십시오. 다음과 같이 보일 것입니다 :</p>
    <p class="dropspot"><img alt="Animation Showing Gamepad Movement" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_3_1.gif"/></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down3" href="#"><span data-open-text="true">고급 8 방향 운동</span> <span data-close-text="true">고급 8 방향 운동</span></a></p>
  <div class="droptext" data-targetname="drop_down3">
    <p class="dropspot">이 마지막 예에서는 8 방향 이동 코드를 다시 방문하여 문제를 해결합니다. 즉, 대각선 이동이 실제로 위 / 아래 / 왼쪽 / 오른쪽 이동보다 빠릅니다. 이것은 대각선으로 움직일 때 x / y 이동 값으로 생성 된 직각 삼각형의 빗변을 따라 움직이기 때문입니다.</p>
    <p class="dropspot"><img alt="Image Showing Why Diagonal Movement Is Faster" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_4_1.png"/></p>
    <p class="dropspot">무슨 일이 일어나고 있는지 더 명확하게하기 위해, 모든 텍스트와 스프라이트를 제거하고 45도 회전 된 동일한 이동선을 가로로 표시합니다 :</p>
    <p class="dropspot"><img alt="Simplified Image SHowing Diaginal Movement Is Faster" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_4_2.png"/></p>
    <p class="dropspot">보시다시피, 그 차이는 매우 분명하며 인스턴스가 단계 당 1 또는 2 픽셀 이상 이동하면 대각선 이동이 <em>훨씬</em> 빠릅니다. 그래서 우리는 이것을 어떻게 제한합니까? 이에 대해 여러 가지 방법이 있지만 나중에 게임에서 유용하게 사용할 수있는 몇 가지 기능과 개념을 소개하기 때문에 그 중 하나에 만 집중할 것입니다.</p>
    <p class="dropspot">이 문제를 해결하기 위해 독립적으로 누른 키의 입력 값을 <a class="tooltip" title="변수는 프로그램 내에서 명명 된 값으로, 필요할 때마다 수정, 저장 및 표시 할 수 있습니다. 예를 들어 이름이 XYZ 인 정수 변수가 있고 값 10을 저장하는 경우 A = XYZ + 10과 같은 작업을 수행 할 수 있습니다. 그러면 XYZ가 10이고 변수 A의 값이 20으로 설정됩니다. 그것에 10을 더하고 있습니다. 연산자를 사용하여 변수 값을 변경할 수도 있으므로 XYZ = XYZ + 100을 수행하면 XYZ 변수의 값이 110으로 수정됩니다. 변수는 식별자와 다른 자산에 대한 참조를 저장하는 데 사용될 수도 있습니다.">variable</a> 로 저장 한 다음 누른 키 조합에 따라 값을 확인하고 이동해야합니다. 따라서이를 위해서는 스프라이트가 할당 된 객체가 필요하며 다음 DnD ™ 또는 GML을 사용하여 <strong>단계 이벤트</strong> 를 제공해야합니다.</p>
    <p class="dropspot"><img alt="DnD Step Event Actions To Define Movement Variables" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_4_1.png"/></p>
    <p class="note"><strong>참고</strong> : DnD ™를 두 개의 열로 나누면보다 쉽게 ​​시각화 할 수 있지만 DnD ™ 편집기에서는 연속적으로 배치됩니다.</p>
    <p class="code">var _left = keyboard_check(vk_left);<br/> var _right = keyboard_check(vk_right);<br/> var _up = keyboard_check(vk_up);<br/> var _down = keyboard_check(vk_down);<br/> var _hspd = _right - _left;<br/> var _vspd = _down - _up;</p>
    <p class="dropspot">실제로 이동하려면 더 많은 코드를 추가해야하지만, 시작하기 전에이 부분을 조금만 설명하겠습니다. 왼쪽 / 오른쪽 / 위 / 아래를 동등한 수평 및 수직 속도 값으로 변환하여 각 키의 값을 얻은 다음 몇 가지 기본 수학을 수행하여 속도 값을 얻습니다. 키를 누르는 경우 점검 조치 또는 기능이 &quot;1&quot;을 리턴하고 누르지 <em>않으면</em> 기능이 0을 리턴하기 때문에 작동합니다. 예를 들어-오른쪽을 누르는 경우 &quot; &quot; <span class="inline">_hspd</span> &quot;의 경우 <span class="inline">1-0</span> = 1 &quot;이고, 왼쪽을 누르면&quot; <span class="inline">_hspd</span> &quot;의&quot; <span class="inline">0-1</span> = -1 &quot;이됩니다 (둘 다 눌리면&quot; <span class="inline">1-1</span> = 0 &quot; <span class="inline">임</span> ). 인스턴스가 이동하지 않습니다). GameMaker Studio 2 실에서 오른쪽으로 이동하려면 <span class="inline">x</span> 위치에 추가하고 왼쪽으로 이동하면 빼는 것을 기억하십시오.이 코드는 양수 또는 음수 값을 제공하여 가로 또는 세로로 이동하여 가로 또는 세로로 이동할 수 있습니다. 키보드 입력.</p>
    <p class="dropspot">이제 인스턴스를 실제로 이동시키는 코드를 <strong>Step Event</strong> 에 추가하고 위 코드 뒤에 다음 코드를 추가 할 수 있습니다.</p>
    <p class="dropspot"><img alt="DnD Step Event Actions To Move The Instance" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_DnD_4_2.png"/></p>
    <p class="code">if (_hspd != 0 || _vspd != 0)<br/>     {<br/>     var _spd = 4;<br/>     var _dir = point_direction(0, 0, _hspd, _yspd);<br/>     var _xadd = lengthdir_x(_spd, _dir);<br/>     var _yadd = lengthdir_y(_spd, _dir);<br/>     x = x + _xadd;<br/>     y
      = y + _yadd;<br/>     }</p>
    <p class="dropspot">위 코드는 먼저 두 <a class="tooltip" title="표현식은 특정 우선 순위 규칙 및 다른 값을 리턴하기 위해 연관되는 규칙에 따라 해석되는 하나 이상의 상수, 변수, 연산자 및 / 또는 함수의 조합입니다. 간단한 표현은 (5 + 5)이며 10을 반환합니다.">표현식</a> 중 하나가 참인지 확인합니다 (예 : 수평 또는 수직 속도 변수가 0이 아닌 <span class="inline">경우)</span> . &quot; <span class="inline">if</span> &quot;GML 검사에서 &quot; <span class="inline">||</span> &quot;기호를 사용하는 방법에 유의하십시오. 이것은 프로그래밍 할 때 &quot; <span class="inline">또는</span> &quot;를 의미하므로 일반 언어로-확인 중입니다.</p>
    <p class="code">if the variable _hspd does not equal zero <strong>or </strong>if the variable _vspd does not qual zero</p>
    <p class="dropspot">당신은 함께 이러한 방법으로 <span class="inline">&quot;만약&quot;수표</span> 문자열을 여러 표현을 할 수있는, 그 표현 (자세한 내용은 <strong>표현식</strong> 섹션을 참조하십시오 평가 될 수있는 여러 가지 방법이 있습니다 <a href="../GameMaker_Language/GML_Overview/Expressions_And_Operators.htm">여기에</a> ).</p>
    <p class="dropspot">다음 코드 섹션에서는 실제 이동 속도에 대한 값을 변수에 저장 한 다음 -1, 0 또는 1 인 <span class="inline">_hspd</span> 및 <span class="inline">_vspd</span> 값을 사용하여 방향을 가져 <span class="inline">옵니다</span> . 방향 함수는 (0, 0)에서 다음과 같이 확인합니다. 우리는 방 좌표를 사용하지 않고 대신 변수 값에 따라 0 °에서 360 °까지의 방향으로 평가하기를 원합니다. 다음 다이어그램은 단어로 설명하는 것보다 더 나은 상황을 보여줍니다.</p>
    <p class="dropspot"><img alt="Example Image Showing Direction Around (0,0) Origin" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_4_3.png"/></p>
    <p class="note"><strong>참고</strong> : GameMaker Studio 2의 방향은 <strong>시계 반대 방향으로</strong> 계산되므로 0 °와 360 °는 오른쪽, 90 °는 위쪽, 180 °는 오른쪽, 270 °는 아래쪽입니다.</p>
    <p class="dropspot">마지막으로 <a href="../GameMaker_Language/GML_Reference/Maths_And_Numbers/Angles_And_Distance/lengthdir_x.htm"><span class="inline">lengthdir_x ()</span></a> 및 <a href="../GameMaker_Language/GML_Reference/Maths_And_Numbers/Angles_And_Distance/lengthdir_y.htm"><span class="inline">lengthdir_y ()</span></a> 함수를 사용하여 실제로 변수를 이동합니다. 이것들은 길이 (거리)와 방향을 취한 다음이 값을 기준으로 주어진 축에서 새로운 위치를 계산하는 <strong><a class="tooltip" title="벡터는 크기라고하는 크기와 방향을 가진 수학적 구성체입니다. GameMaker에서 벡터는 일반적으로 이동 한 거리와 방향을 표시하는 데 사용됩니다. 벡터를 사용하여 이미지를 정의 할 수 있으며 SWF와 같은 특정 이미지 형식은 벡터 수학을 사용하여 포함 된 이미지를 정의합니다.">벡터</a></strong> 함수입니다 (자세한 설명은 함수 설명 참조).</p>
    <p class="dropspot">한 번에 많은 것을 받아들이고, 모든 것을 이해하지 못한다고 걱정하지 마십시오! 당신은 시간에 것입니다! 이제 남은 것은이 개체의 인스턴스를 방에 추가 한 다음 <strong>재생</strong> 버튼을 누르는 것입니다 대각선 이동과 관련된 문제없이 부드럽고 매끄러운 8 방향 움직임을 얻을 수 있습니다.</p>
    <p class="dropspot"><img alt="Animation Showing Improved 8-Way Keyboard Movement" class="center" src="../assets/Images/QS_Guide/QS_MovementExample_4_4.gif"/></p>
  </div>
  <p> </p>
  <p>이 예제와 이전 예제를 통해 자신의 프로젝트를 시작하기에 충분한 이해를 얻었기를 바랍니다. 이 빠른 시작 안내서의 마지막 페이지에는 학습 한 내용과 추가 학습 자료에 대한 링크가 요약되어 있습니다.</p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('Quick_Start_Guide/Movement_And_Controls.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="../Content.htm">인덱스</a></div>
        <div style="float:right">다음: <a href="Summary.htm">요약</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Movement
Controls
Movement and Controls
Movement Examples
Controls Examples
-->
  <!-- TAGS
qs_movement_controls
-->

</body></html> 