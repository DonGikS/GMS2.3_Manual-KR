<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "2.0_8";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Drawing</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Some basic code and DnD to show people how things are drawn."/>
  <meta name="rh-index-keywords" content="Quick Start - Drawing"/>
  <meta name="search-keywords" content="drawing,draw event,GUI layer"/>
  <meta name="robots" content="NOODP"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Drawing">
        <span>그림</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>그림</h1>
  <p>이 섹션 (및 <a href="Movement_And_Controls.htm">이동 및 컨트롤</a> 에 대한 다음 섹션)은 GML 또는 DnD ™의 실제 예제를 제공하여 첫 게임 프로젝트를 가능한 한 빨리 시작할 수 있도록하기위한 것입니다. 우리는 가능한 빨리 물건을 만들기 시작하기를 원하기 때문에 너무 깊이 설명하지 않을 것이므로, 링크를 탐색하고 매뉴얼의 &quot;검색&quot;기능을 사용하여 살펴 보는 것이 좋습니다. 확실하지 않은 것에 대한 추가 정보가 필요합니다.</p>
  <p>이 섹션에서는 단순히 텍스트와 이미지로 화면에 정보를 그리는 것에 중점을두고 다양한 <strong>Draw Events</strong> , 특히 메인 <strong>Draw</strong> 이벤트 및 <strong>Draw GUI</strong> 이벤트에 대해 조금 더 설명합니다. 일부 예에서는 다른 이벤트를 추가해야하지만 이벤트에 대해 설명 할 것입니다.</p>
  <p><img alt="The Draw Events" class="center" src="../assets/Images/QS_Guide/QS_DrawEvents.png"/></p>
  <p>더 나아 가기 전에 <a href="../Introduction/The_Start_Page.htm">시작 페이지</a> 에서 새 프로젝트 (GML 또는 DnD ™)를 만들고 몇 가지 스프라이트와 오브젝트를 추가하거나 만들거나 할 수 있습니다. 이것들을 사용하여 테스트 할 수있는 코드. 흰색 사각형조차도 객체의 스프라이트로 작동합니다!</p>
  <p>이제 <a href="Objects_And_Instances.htm">Objects and Instances</a> 섹션에서 언급 한 것처럼 Draw Event를 오브젝트에 추가하지 않으면 GameMaker Studio 2가 기본적으로 그립니다. 즉, 오브젝트에 스프라이트가 할당 된 경우이 스프라이트가 그려집니다. 추가 된 모든 변환을 완료하십시오. 우리는 변환이란 무엇을 의미합니까? 각 오브젝트에는 기본 드로잉시 오브젝트의 인스턴스가 스프라이트를 그리는 방법을 제어하는 ​​여러 내장 <a class="tooltip" title="변수는 프로그램 내에서 명명 된 값으로, 필요할 때마다 수정, 저장 및 표시 할 수 있습니다. 예를 들어 이름이 XYZ 인 정수 변수가 있고 값 10을 저장하는 경우 A = XYZ + 10과 같은 작업을 수행 할 수 있습니다. 그러면 XYZ가 10이고 변수 A의 값이 20으로 설정됩니다. 그것에 10을 더하고 있습니다. 연산자를 사용하여 변수 값을 변경할 수도 있으므로 XYZ = XYZ + 100을 수행하면 XYZ 변수의 값이 110으로 수정됩니다. 변수는 식별자와 다른 자산에 대한 참조를 저장하는 데 사용될 수도 있습니다.">변수</a> 가 있으며 스프라이트가 그려지는 방식을 변경하기 위해 게임이 실행될 때 이러한 변수를 변경할 수 있습니다.</p>
  <p class="note"><strong>참고</strong> : <a href="../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/Sprite_Instance_Variables.htm">여기에서</a> 인스턴스 스프라이트를 변환하는 데 사용할 수있는 모든 내장 변수 목록을 찾을 수 있습니다. 끌어서 놓기 사용자는이 변수에 영향을주는 전용 작업이 있으며 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Drawing/Drawing_Actions.htm">여기</a> 에서 찾을 수 있으며 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Get_Instance_Variable.htm">인스턴스 변수 가져 오기</a> 및 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Set_Instance_Variable.htm">인스턴스 변수 설정</a> 작업과 함께 실제 변수 자체를 사용할 수도 있습니다.</p>
  <p>몇 가지 예를 살펴 보겠습니다.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down" href="#"><span data-open-text="true">알파 (투명도) 변경 알파 (투명도)</span> <span data-close-text="true">변경</span></a></p>
  <div class="droptext" data-targetname="drop_down">
    <p class="dropspot"><strong>알파</strong> 값은 그린 내용의 투명도를 제어하는 ​​것이며 GameMaker Studio 2에서는 <span class="inline">image_alpha</span> 내장 변수를 사용하여 할당 된 스프라이트의 투명도를 변경할 수 있습니다. 이것이 어떻게 작동하는지 보려면 객체를 열거 나 생성하고 스프라이트를 할당 한 다음 객체에 <strong>Create Event를 지정하십시오</strong> . 이벤트 생성에서 다음 DnD ™ 또는 GML을 추가하면됩니다.</p>
    <p class="dropspot"><img alt="DnD Draw Example For Transparency" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_1.png"/></p>
    <p class="code">var _val = random(1);<br/> image_alpha = _val;</p>
    <p class="dropspot">이미지 알파는 0에서 1까지의 값으로 계산되며, 여기서 0은 완전히 투명하고 1은 완전히 불투명합니다 (기본적으로 1로 설정 됨). 따라서이 예에서는 이미지 알파를 0에서 1 사이의 임의의 10 진수 값으로 설정하기 만하면됩니다.이 개체의 인스턴스를 방에 몇 개 놓고 <strong>재생</strong> 단추를 클릭하십시오. IDE 상단에 있습니다.</p>
    <p class="dropspot">객체의 각 인스턴스가 다른 투명도로 스프라이트를 그립니다 (예 :</p>
    <p class="dropspot"><img alt="Example Of Sprites Drawn With Different Alpha Values" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_1.png"/></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down1" href="#"><span data-open-text="true">색상 혼합 변경 (색조)</span> <span data-close-text="true">색상 혼합 변경 (색조)</span></a></p>
  <div class="droptext" data-targetname="drop_down1">
    <p class="dropspot">오브젝트가 기본적으로 스프라이트를 그리는 경우이 스프라이트는 실제로 색상과 <strong>혼합</strong> (또는 <strong>착색</strong> )되어 그려 <span class="inline">지며이</span> 색상 값은 <span class="inline">image_blend</span> 내장 변수에 저장됩니다. 기본적으로이 색상은 흰색으로, 스프라이트가 화면에 표시 될 때 색상이 추가되지 않음을 의미합니다. 그러나 다른 색상을 사용하여 특수 효과를 얻을 수 있습니다 (예 : 빨간색을 사용하여 인스턴스에 약간의 손상이 있음을 표시).</p>
    <p class="dropspot">이 예제에서는 키를 누른 상태에서 다른 색상을 스프라이트와 혼합하여 오브젝트를 열거 나 생성하고 스프라이트를 할당 한 다음 오브젝트에 <strong>키 다운 &lt;Space&gt; 이벤트</strong> .</p>
    <p class="dropspot"><img alt="Add Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_Add_SpaceKeyPressEvent.png"/></p>
    <p class="dropspot">이 키 다운 이벤트에서 다음 DnD ™ 또는 GML을 추가하십시오.</p>
    <p class="dropspot"><img alt="DnD Example Using Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_2.png"/></p>
    <p class="code">var _col = choose(c_red, c_green, c_blue, c_yellow, c_fuchsia, c_orange);<br/> image_blend = _col;</p>
    <p class="dropspot">이 개체의 인스턴스를 방에 몇 개 놓고 플레이 버튼을 클릭하십시오. IDE 상단에서 <em>스페이스</em> 키를 누른 상태에서 테스트하십시오. 키를 누르고있는 동안 각 인스턴스가 색상을 빠르게 변경하고 릴리스되면 변경을 중지한다는 것을 알아야합니다.</p>
    <p class="dropspot"><img alt="Example Showing Colour Blending" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_2.png"/></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down2" href="#"><span data-open-text="true">스케일 변경 스케일</span> <span data-close-text="true">변경</span></a></p>
  <div class="droptext" data-targetname="drop_down2">
    <p class="dropspot">스프라이트에 대해 변경할 수있는 또 다른 속성은 <strong>스케일</strong> 값으로, 원할 때마다 더 크게 또는 더 작게 그릴 수 있습니다. 스케일은 두 개의 <span class="inline">개별</span> 변수, <span class="inline">image_xscale</span> 변수와 <span class="inline">image_yscale</span> 변수에 의해 X 및 Y 축을 따라 독립적으로 <span class="inline">계산</span> 됩니다. 기본적으로 이들은 1로 설정되어 있으며 <strong>승수</strong> 처럼 작동하므로 0.5 값은 절반이고 2 값은 두 배입니다.</p>
    <p class="note"><strong>중대한!</strong> 이러한 변수 <strong>를</strong> 사용하여 할당 된 스프라이트 스케일을 <strong>변경하면 경계 상자의 크기도 일치하도록 변경</strong> 됩니다. 즉 스프라이트의 충돌 감지 영역도 스케일됩니다.</p>
    <p class="dropspot">이 예제에서는 간단한 수학을 사용하여 인스턴스가 스프라이트를 루프에서 위아래로 스케일링합니다. 시작하려면 객체를 열거 나 생성하고 스프라이트를 할당 한 다음 객체에 <strong>Create Event를 지정하십시오</strong> . 이 경우 다음을 추가하십시오.</p>
    <p class="dropspot"><img alt="DnD Set Variable Example" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_3_1.png"/></p>
    <p class="code">timer = 0;</p>
    <p class="dropspot">이제 다음과 같이 객체에 <strong>단계 이벤트</strong> 를 추가하십시오.</p>
    <p class="dropspot"><img alt="DnD Actions To Change Sprite Scale" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_3_2.png"/></p>
    <p class="code">timer = timer + 1;<br/> var _val = dsin(timer);<br/> image_xscale = 1 + _val;<br/> image_yscale = 1 + _val;</p>
    <p class="dropspot">여기에서는 수학 함수 <a href="../GameMaker_Language/GML_Reference/Maths_And_Numbers/Angles_And_Distance/dsin.htm"><span class="inline">dsin ()</span></a> 을 사용하여 타이머 변수를 사용하여 -1과 1 사이의 값을 생성 한 다음이를 스케일 변수에 적용합니다. 방에 인스턴스를 배치하고 <strong>재생</strong> 버튼을 누른 후 인스턴스가 0의 스케일에서 2의 스케일로 확장 및 축소되는 방식을 다시 확인해야합니다.</p>
    <p class="dropspot"><img class="center" src="../assets/Images/QS_Guide/QS_DrawExample_3.gif" title="Animation Showing Sprite Scaling"/></p>
    <p class="dropspot">마지막으로 ... &quot; <span class="inline">image_yscale</span> &quot;섹션을 &quot; <span class="inline">1-_val</span> &quot;로 변경하고 어떻게되는지 확인하십시오!</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>위의 예제는 GameMaker Studio 2가 기본 드로잉 일 때 오브젝트 스프라이트를 조작 할 수있는 많은 방법 중 일부를 보여줍니다. 그러나 오브젝트에 대해 둘 이상의 것을 그리려면 어떻게해야합니까? 이러한 경우 <strong>Draw 이벤트</strong> 를 사용하여 GameMaker Studio 2에 그릴 대상을 명시해야합니다. 다음 예제에서 수행 할 작업입니다.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down3" href="#"><span data-open-text="true">두 개 이상의 스프라이트를 함께</span> <span data-close-text="true">그리기 두 개</span> <span data-open-text="true">이상의 스프라이트를 함께</span> <span data-close-text="true">그리기</span></a></p>
  <div class="droptext" data-targetname="drop_down3">
    <p class="dropspot">이 예제에서는 두 개의 스프라이트와 하나의 오브젝트가 필요합니다. <span class="inline">&quot;spr_One&quot;와</span> <span class="inline">&quot;spr_Two&quot;,</span> 스프라이트를 호출 한 후 중앙으로와 <span class="inline">&quot;spr_Two&quot;은</span> <span class="inline">&quot;spr_One&quot;원점</span> 설정에 그 기원을 설정 중간 왼쪽 :</p>
    <p class="dropspot"><img alt="Show Origins For Sprites" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_1.png"/>생성 한 객체에 첫 번째 스프라이트 (중심 원점이있는 &quot; <span class="inline">spr_One</span> &quot;)를 할당 한 <strong>다음 짝수 만들기</strong> t를 추가합니다. 이벤트 생성에서 다음 DnD ™ 또는 GML을 추가하십시오.</p>
    <p class="dropspot"><img alt="Set Draw Angle Variable In DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_1.png"/></p>
    <p class="code">draw_angle = 0;</p>
    <p class="dropspot">이 변수를 사용하여 시간이 지남에 따라 &quot; <span class="inline">spr_Two</span> &quot;를 회전시키고 오브젝트에 지정된 스프라이트 ( &quot; <span class="inline">spr_One</span> &quot;)에 <span class="inline">겹쳐서 그립니다</span> . 이를 위해 <strong>Draw Event</strong> 를 객체에 추가해야합니다. 이를 통해 GameMaker Studio 2에 인스턴스가 그리는 것을 인계하고 싶다는 것을 의미합니다. 이는 코드에 <a href="../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_self.htm"><span class="inline">draw_self ()</span></a> 함수 또는 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Drawing/Draw_Self.htm"><strong>Draw Self</strong></a> 액션에 대한 호출이 포함됨을 의미합니다. 이 액션은 Draw 이벤트가없고 할당 된 스프라이트를 그리는 것이 기본 일 때 객체가하는 일을 단순히 복제합니다. 그런 다음 회전하는 오버레이 스프라이트로 사용할 두 번째 스프라이트를 그립니다. DnD ™ 및 GML은 다음과 같습니다.</p>
    <p class="dropspot"><img alt="Draw Two Sprites With DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_2.png"/></p>
    <p class="code">draw_self();<br/> draw_angle = draw_angle + 0.5;<br/> draw_sprite_ext(spr_Two, 0, x, y, 1, 1, draw_angle, c_red, 1);</p>
    <p class="dropspot">룸 편집기에 오브젝트의 여러 인스턴스를 추가 한 다음 <strong>재생</strong> 버튼을 누릅니다. <a class="tooltip" title="IDE (Integrated Development Environment)는 컴퓨터 프로그래머에게 소프트웨어 개발을위한 포괄적 인 기능을 제공하는 소프트웨어 응용 프로그램입니다. 이 경우 GameMaker Studio 2의 전체 프론트 엔드는 IDE로 간주되며 그래픽을 생성하고 사운드를 추가하며 게임을 만들기위한 코드를 추가하는 섹션을 포함합니다.">IDE</a> 상단에 <a class="tooltip" title="IDE (Integrated Development Environment)는 컴퓨터 프로그래머에게 소프트웨어 개발을위한 포괄적 인 기능을 제공하는 소프트웨어 응용 프로그램입니다. 이 경우 GameMaker Studio 2의 전체 프론트 엔드는 IDE로 간주되며 그래픽을 생성하고 사운드를 추가하며 게임을 만들기위한 코드를 추가하는 섹션을 포함합니다.">있습니다</a> . 모든 것이 올바르게 진행 되었다면 다음과 같이 보일 것입니다 :</p>
    <p class="dropspot"><img alt="Animation Drawing Two Sprites Together" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_2.gif"/></p>
    <p class="dropspot">이 예제를 떠나기 전에 약간 조정하고 &quot; <span class="inline">spr_Two</span> &quot;를 단순히 회전시키는 대신 마우스 위치를 가리 키도록하겠습니다. 이를 위해 Draw Event DnD ™ 또는 GML을 다음과 같이 변경해야합니다.</p>
    <p class="dropspot"><img alt="Edited Draw Code For Drawing Two Sprites With DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_4_3.png"/></p>
    <p class="code">draw_self();<br/> draw_angle = point_direction(x, y, mouse_x, mouse_y);<br/> draw_sprite_ext(spr_Two, 0, x, y, 1, 1, draw_angle, c_red, 1);</p>
    <p class="dropspot">프로젝트를 다시 실행하면 이번에는 매우 다른 것을 볼 수 있습니다!</p>
    <p class="dropspot"><img alt="Animation Drawing Two Sprites Pointing At Mouse" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_4_3.gif"/>스프라이트는 이제 어디로 이동하든 마우스를 향합니다! 보시다시피, 스프라이트 레이어링은 오브젝트에 세부 사항을 추가하거나 오브젝트에 지정된 &quot;기본&quot;스프라이트와 무관하게 무언가를 이동시키는 좋은 방법이며, 아마도 여러분 자신이 많이 사용할 강력한 도구입니다 프로젝트.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down4" href="#"><span data-open-text="true">스프라이트 이외의 것</span> <span data-close-text="true">그리기</span> <span data-open-text="true">스프라이트 이외의 것</span> <span data-close-text="true">그리기</span></a></p>
  <div class="droptext" data-targetname="drop_down4">
    <p class="dropspot">텍스트 나 모양과 같이 스프라이트 이외의 Draw Event에서도 사물을 그릴 수 있습니다. 이 예제에서는 DnD ™ 또는 GML <span class="inline">draw_self ()</span> 함수를 사용하여 객체 스프라이트를 그리지 만 <strong>text로</strong> 시작하여 다른 <span class="inline">것들도</span> 그릴 것입니다. 이 예제에서는 스프라이트와 오브젝트 (스프라이트가 할당 된)가 필요합니다. 객체에서 먼저이 DnD ™ 또는 GML을 사용하여 <strong>이벤트 생성을</strong> 추가합니다.</p>
    <p class="dropspot"><img alt="Setting Variables Using DnD" class="center" height="506" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_1_1.png" width="317"/></p>
    <p class="code">name = choose(&quot;Fred&quot;, &quot;Jonas&quot;, &quot;Sharon&quot;, &quot;Kate&quot;, &quot;Frank&quot;, &quot;John&quot;, &quot;Monica&quot;, &quot;Amanda&quot;);<br/> number = irandom(100);</p>
    <p class="dropspot">이 모든 것은 GameMaker Studio 2에게 나열된 이름 중 하나를 선택하고 변수에 할당하고 각 객체 인스턴스에 대해 0에서 100 사이의 난수를 생성하도록 지시합니다. 이 값을 화면에 <strong>그리</strong> 려고합니다. 이제 <strong>그리기 이벤트</strong> 를 추가하고 다음 DnD ™ 또는 GML을 추가해야합니다.</p>
    <p class="dropspot"><img alt="Drawing Text Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_1.png"/></p>
    <p class="code">draw_self();<br/> draw_set_halign(fa_center);
      <br/> draw_text(x, y + 32, &quot;My name is &quot; + name);<br/> draw_text(x, y + 48, &quot;My number is &quot; + string(number));</p>
    <p class="dropspot">위의 코드에서 우리가 그리는 &quot;number&quot;변수에 <a href="../GameMaker_Language/GML_Reference/Strings/string.htm"><span class="inline">string ()</span></a> 함수 또는 <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Data_Types/Number_To_String.htm"><strong>Number To String</strong></a> 동작을 사용한다는 것을 알 수 있습니다. 모든 텍스트는 값이 아닌 <em>문자</em> 로 구성되어야하므로 숫자 값을 그리기 원하는 문자로 변환하려면이 함수 / 액션을 사용해야합니다. 이 경우 생성 한 난수를 가져 와서이를 그릴 수있는 &quot;문자열&quot;로 바꿉니다. 또한 텍스트 <strong>정렬</strong> 을 설정합니다. 이것은 단순히 GameMaker Studio 2에게 주어진 위치를 기준으로 텍스트 그리기를 시작할 위치를 알려주며,이 경우 텍스트가 x 축을 따라 중앙에 오기를 원합니다.</p>
    <p class="dropspot">룸 편집기에 오브젝트의 여러 인스턴스를 추가 한 다음 재생 버튼을 누릅니다. IDE 상단에 있습니다. 다음과 같이 보일 것입니다 :</p>
    <p class="dropspot"><img alt="Sprites Being Drawn Along With Text" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_5_1.png"/></p>
    <p class="dropspot">지금까지 모든 예제에서 인스턴스에 할당 된 스프라이트를 그렸습니다. 그러나 항상 그런 것은 아닙니다. 지정된 스프라이트에 관계없이 드로우 이벤트에서 <strong>원하는 것을 그릴 수 있습니다</strong> . 이 점을 설명하기 위해 <span class="inline">draw_self ()</span> 호출을 제거하여 현재 가지고있는 코드를 변경하고 다음과 같이 색상 타원을 그리는 함수로 대체합니다.</p>
    <p class="dropspot"><img alt="Drawing Shapes Along With Text Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_5_2.png"/></p>
    <p class="code">draw_ellipse_colour(x - 50, y - 32, x + 50, y + 32, c_fuchsia, c_lime, false);<br/> draw_set_halign(fa_center);
      <br/> draw_text(x, y + 32, &quot;My name is &quot; + name);<br/> draw_text(x, y + 48, &quot;My number is &quot; + string(number));</p>
    <p class="dropspot">프로젝트를 다시 실행하면 다음이 표시됩니다.</p>
    <p class="dropspot"><img alt="Example Of Drawing Shapes And Text Together" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_5_2.png"/></p>
    <p class="dropspot">이것에 대해 한 가지 중요한 점은 할당 된 스프라이트를 그리지 않아도 <strong>충돌 감지에 여전히 사용된다는 것</strong> 입니다. 따라서 한 가지를 그리는 동안에도 충돌이 보이지 않더라도 인스턴스와 함께 방에 배치 된 것처럼 지정된 스프라이트를 기준으로 충돌이 계산됩니다. 이것은 다른 스프라이트를 그릴 수는 있지만 할당 된 스프라이트를 기반으로 단일 <strong>충돌 마스크를</strong> 유지한다는 것을 의미하므로 실제로는 매우 편리합니다. 또한 X / Y 스케일과 같은 다른 변환을 계속 적용 할 수 있으며 충돌을 나타 내기 위해 아무것도 그려지지 않더라도 충돌은 변경된 크기를 기반으로합니다.</p>
  </div>
  <p> </p>
  <p> </p>
  <h1>GUI 레이어</h1>
  <p>우리는 페이지 상단에 <strong>Draw GUI 이벤트</strong> 와 <strong>Draw 이벤트</strong> 에 대해 이야기 할 것이라고 언급 했으므로 이제 살펴 보겠습니다. GUI 이벤트 그리기는 <strong><a class="tooltip" title="창, 아이콘 및 버튼과 같은 그래픽 요소를 포함하는 사용자 인터페이스 인 &#39;그래픽 사용자 인터페이스&#39;의 줄임말입니다. GameMaker에는 점수, 생명, 인벤토리 등을 위해 특별히 설계된이 레이어에 그릴 수있는 특정 객체 이벤트 세트 (Draw GUI 이벤트)가 있습니다.">GUI</a> 레이어</strong> 라고하는 방에서 작동하는 고정 폭과 높이의 특수 그리기 레이어 인 <strong><a class="tooltip" title="창, 아이콘 및 버튼과 같은 그래픽 요소를 포함하는 사용자 인터페이스 인 &#39;그래픽 사용자 인터페이스&#39;의 줄임말입니다. GameMaker에는 점수, 생명, 인벤토리 등을 위해 특별히 설계된이 레이어에 그릴 수있는 특정 객체 이벤트 세트 (Draw GUI 이벤트)가 있습니다.">GUI</a> 레이어</strong> 에서 작동합니다. GUI 레이어의 가장 큰 <em>장점은 룸 카메라와 함께 움직이지</em> 않기 때문에 스코어, 헬스 바 및 게임이 사용자에게 전달하는 데 필요한 기타 정보와 같은 정적 GUI 항목을 추가하기에 이상적인 장소입니다. GUI 레이어에 대한 자세한 내용은 매뉴얼의 <a href="../The_Asset_Editors/Object_Properties/Draw_Events.htm">이벤트 그리기</a> 섹션에서 확인할 수 있습니다.</p>
  <p class="note"><strong>참고</strong> : 방은 화면 크기보다 클 수 있으므로 플레이어가 움직일 수있는 수준이 클 수 있습니다. 즉, 방 편집기 (또는 코드)에서 게임 동작을 따르는 <strong>카메라</strong> 를 정의해야합니다. . 이것은 기본적으로 화면의 고정 영역을 설정하여 방의 플레이어 위치를 기반으로 더 큰 방의 다른 부분을 표시하는 방법이며 많은 게임에서 사용됩니다. 마리오 나 젤다와 같은 클래식 게임에서 항상 주인공을 따르는 방식을 생각하십시오. 카메라로 끝났습니다. 자세한 내용은 매뉴얼의 룸 편집기 섹션에서 <a href="../The_Asset_Editors/Room_Properties/Room_Properties.htm">룸 속성</a> 섹션을 참조하십시오.</p>
  <p>다음 예제는 모두 <strong>Draw GUI</strong> 이벤트를 사용하므로 개체를 만들고 해당 이벤트를 추가해야합니다. 기본적으로 아무 것도 그리거나 충돌을 감지하지 않기 때문에 오브젝트에 스프라이트를 할당 할 필요가 없습니다. 사물을 그리거나 게임의 특정 측면을 제어하기 위해 설계된 이와 같은 객체를 종종 <strong>컨트롤러 객체</strong> 라고합니다. 또한 모든 예제에 동일한 객체를 사용할 것이므로 반드시 순서대로 수행하는 것이 좋습니다 (단, 반드시 필요한 것은 아님).</p>
  <p><img alt="Draw GUI Event In An Object" class="center" src="../assets/Images/QS_Guide/QS_DrawGUIObject.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down5" href="#"><span data-open-text="true">텍스트 그리기 텍스트</span> <span data-close-text="true">그리기</span></a></p>
  <div class="droptext" data-targetname="drop_down5">
    <p class="dropspot">GUI 레이어에 그릴 때 왼쪽 위 모서리는 원점 위치이고 오른쪽은 + X이고 아래는 + Y입니다. 이 예제에서 볼 수 있듯이 텍스트와 그래픽을 쉽게 배치 할 수 있습니다. 여기서 할 것은 플레이어 점수를 나타내는 값을 그리는 것입니다. 따라서 객체에서이 값을 유지하기 위해 변수를 초기화하기 위해 <strong>Create Event</strong> 를 추가해야합니다.</p>
    <p class="dropspot"><img alt="Defining A Variable Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_1.png"/></p>
    <p class="code">player_score = 0;</p>
    <p class="dropspot">또한 스페이스 키를 누를 때마다 점수를 높이기 위해 <strong>키보드 다운 &lt;Space&gt; 이벤트</strong> 를 객체에 추가하려고합니다.</p>
    <p class="dropspot"><img alt="Adding A Space Key Pressed Event" class="center" src="../assets/Images/QS_Guide/QS_Add_SpaceKeyPressEvent.png"/></p>
    <p class="dropspot">이 경우 다음을 추가하십시오.</p>
    <p class="dropspot"><img alt="DnD Actions In The Space Key Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_2.png"/></p>
    <p class="code">var _val = irandom(100);<br/> player_score = player_score + _val;</p>
    <p class="dropspot">마지막으로 Draw GUI 이벤트에서 다음과 같이 점수 값을 그립니다.</p>
    <p class="dropspot">이 경우 다음을 추가하십시오.</p>
    <p class="dropspot"><img alt="Drawing Text To The GUI Layer Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_6_3.png"/></p>
    <p class="code">draw_set_halign(fa_left);<br/> draw_set_colour(c_yellow);
      <br/> draw_text(32, 32, &quot;SCORE:&quot;);<br/> draw_set_colour(c_white);
      <br/> var _str = string(player_score);<br/> draw_text_transformed(32, 48, _str, 2, 2, 0);</p>
    <p class="dropspot">GUI를 그릴 때 어떤 인스턴스와도 관련이 필요하지 않기 때문에 그릴 텍스트의 x / y 위치에 <a class="tooltip" title="컴퓨터 프로그래밍에서 하드 코딩이라는 용어는 고정 된 것으로 간주되고 변경되지 않는 코드를 설명하는 데 사용됩니다. 하드 코드 된 기능은 나중에 수정할 수없는 방식으로 하드웨어 나 소프트웨어에 내장되어 있습니다. 예를 들어 게임을 만들고 플레이어 상태를 10으로 &#39;하드 코딩&#39;하는 경우 변수를 사용하는 대신 게임 코드 전체에서 값 10을 사용하게됩니다.">하드 코딩 된</a> (또는 고정 된) 값을 사용한 방법을 알 수 있습니다. 층. 또한 &quot;색상 설정&quot;기능을 사용하여 텍스트의 색상을 변경하고 &quot;변환 된&quot;기능을 사용하여 실제 점수 값을 더 크게 만들었습니다. 이는 자신의 게임에서 텍스트 요소를 사용자 지정하는 방법을 보여줍니다.</p>
    <p class="dropspot">이 개체의 단일 인스턴스를 지금 방에 추가 한 다음 <strong>재생</strong> 버튼을 누르십시오 . 게임이 실행되면 <span class="inline">&lt;Space&gt;</span> 키를 눌렀다가 <span class="inline">놓으면</span> 점수 값이 증가하는 것을 볼 수 있습니다.</p>
    <p class="dropspot"><img alt="Animation Showing Text Being Drawn To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_6.gif"/></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down6" href="#"><span data-open-text="true">스프라이트 그리기 스프라이트</span> <span data-close-text="true">그리기</span></a></p>
  <div class="droptext" data-targetname="drop_down6">
    <p class="dropspot">이 예제에서는 GUI 레이어를 사용하여 스프라이트를 그립니다. 이를위한 가장 명백한 용도는 플레이어의 삶을 이끌어내는 것입니다. 이 예제에는 약 64x64 픽셀이어야하는 스프라이트가 필요하지만 직접 그릴 때 오브젝트에 할당되지 않아야합니다.</p>
    <p class="dropspot">먼저 <strong>Create Event</strong> 의 객체에 새로운 변수를 추가해야합니다 (이전 예제를 수행 한 경우 이미 존재하는 것 아래에 다음을 추가하십시오).</p>
    <p class="dropspot"><img alt="Defining Variables Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_1.png"/></p>
    <p class="code">player_lives = 3;<br/> gui_w = display_get_gui_width();</p>
    <p class="dropspot">이 코드에서는 플레이어 수명을위한 변수를 초기화하지만 GUI 레이어의 너비를 유지하는 변수도 만들어서 화면 오른쪽에 상대적으로 물건을 배치 할 수 있습니다. 우리는 코드에 값을 하드 코딩하고 사용할 수 있지만 방의 크기를 변경하거나 카메라 등을 추가하는 경우 나중에 어디서나 코드를 작성하고 값을 변경하십시오. <a href="../GameMaker_Language/GML_Reference/Cameras_And_Display/display_get_gui_width.htm"><span class="inline">display_get_gui_width ()</span></a> 함수를 대신 사용한다는 것은 코드가 GUI 계층이 끝나는 모든 크기에 자동으로 적용되므로 향후 변경에 대해 걱정할 필요가 없음을 의미합니다.</p>
    <p class="dropspot">다음으로 Enter 키를 누를 때마다 수명을 변경하는 데 사용할 <strong>키보드 누름 &lt;Enter&gt; 이벤트</strong> 를 객체에 추가하려고합니다.</p>
    <p class="dropspot"><img alt="Adding An Enter Key Pressed Event" class="center" src="../assets/Images/QS_Guide/QS_Add_EnterKeyPressEvent.png"/></p>
    <p class="dropspot">이 경우 다음을 추가하십시오.</p>
    <p class="dropspot"><img alt="DnD In The Enter Key Down Event" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_2.png"/></p>
    <p class="code">player_lives = player_lives -1;<br/> if player_lives &lt; 0<br/>     {<br/>     player_lives = 3;<br/>     }</p>
    <p class="dropspot">마지막으로 스프라이트를 디스플레이에 그려야합니다. 이를 위해 &quot; <span class="inline">for</span> &quot;루프 (GML을 사용하는 정보 및 <a href="../GameMaker_Language/GML_Overview/Language_Features/for.htm">여기</a> 에 DnD ™ <a href="../Drag_And_Drop/Drag_And_Drop_Reference/Loops/For.htm">를 사용하는 경우</a> )와 GUI 너비 변수를 사용하여 모든 것을 화면 오른쪽 상단에 배치합니다. 따라서 이것을 Draw Gui Event에 추가하십시오 (이전 예제에서 수행 한 다른 조치 후).</p>
    <p class="dropspot"><img alt="DnD Actions To Draw Sprites To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_7_3.png"/></p>
    <p class="code">for (var i = 0; i &lt; player_lives; i += 1;)<br/>     {<br/>     var _xx = gui_w - 48 - (i * 70);<br/>     draw_sprite(spr_Heart, 0, _xx, 48);<br/>     }</p>
    <p class="dropspot">이 객체의 인스턴스를 아직 룸에 추가하지 않은 경우 계속 진행하여 지금 추가하십시오 (하나만!). <strong>재생</strong> 버튼을 누릅니다. . 게임이 실행되면 <span class="inline">&lt;Enter&gt;</span> 키를 여러 번 눌러 삶의 변화를보십시오.</p>
    <p class="dropspot"><img alt="Animation Drawing Sprites To The GUI Layer" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_7.gif"/></p>
    <p class="dropspot">이 예를 떠나기 전에 수명 수를 실험하고 어떻게되는지 확인해야합니다. 현재 3으로 설정되어 있지만 Create Event 및 Key Pressed 이벤트를 변경하여 값을 5 또는 10으로 설정하십시오 ... 모든 것을 올바르게 수행하면 코드가 올바르게 조정되고 그려야합니다!</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down7" href="#"><span data-open-text="true">Healthbar</span> <span data-close-text="true">그리기</span> <span data-open-text="true">Healthbar</span> <span data-close-text="true">그리기</span></a></p>
  <div class="droptext" data-targetname="drop_down7">
    <p class="dropspot">이 마지막 예제는 GUI 계층에 Healthbar를 그리는 것을 다룹니다. 이 작업을 수행하는 방법에는 여러 가지가 있지만 GameMaker Studio 2에는 헬스 바를 수행하기위한 기능이 내장되어 있으므로 스프라이트 나 모양을 사용하여 직접 만들 수도 있지만 여기서 사용할 것입니다. 먼저 이전과 같이 상태 값을 보유하기 위해 변수를 초기화해야하므로 다음 DnD ™ 또는 GML을 객체의 <strong>이벤트 생성</strong> (이미있을 수있는 다른 코드 뒤)에 추가하십시오.</p>
    <p class="dropspot"><img alt="Defining A Variable Using DnD" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_1.png"/></p>
    <p class="code">player_health = 100;</p>
    <p class="dropspot">어떤 화살표 키를 눌렀는지에 따라 화살표 키를 사용하여 건강 값을 위 또는 아래로 변경하고 싶습니다. <strong>키보드로 누른 &lt;Arrow&gt;</strong> 이벤트를 두 개 추가하여이를 수행 할 수 있지만, <strong>단계 이벤트</strong> 및 일부 <strong>이벤트</strong> 를 사용하는 것이 더 쉽습니다. 키를 확인하려면 다음 DnD ™ 또는 GML을 사용하여 <strong>단계 이벤트를</strong> 추가하십시오.</p>
    <p class="dropspot"><img alt="Step Event DnD Actions" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_2.png"/></p>
    <p class="code">if keyboard_check(vk_up)<br/>     {<br/>     if player_health &lt; 100<br/>         {<br/>         player_health = player_health + 1;<br/>         }<br/>     }<br/> if keyboard_check(vk_down)<br/>     {<br/>     if player_health &gt; 0<br/>     {<br/>              player_health = player_health - 1;<br/>         }<br/>     }</p>
    <p class="dropspot">이 작업을 수행하면 Draw GUI 이벤트에서 수행되는 상태 표시 줄을 실제로 살펴볼 수 있습니다. 이는 이미 존재하는 다른 항목 뒤에 다음을 추가합니다.</p>
    <p class="dropspot"><img alt="DnD For The Draw GUI Event To Draw A Healthbar" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_DnD_8_3.png"/></p>
    <p class="code">var _xx = gui_w / 2;<br/> draw_healthbar(_xx - 50, 24, _xx + 50, 40, player_health, c_black, c_white, c_red, c_lime, 0, true, true);</p>
    <p class="dropspot">이 객체의 인스턴스를 아직 룸에 추가하지 않은 경우 (단 하나만!) <strong>플레이</strong> 버튼을 누릅니다. . 게임이 실행되면 <span class="inline">&lt;위쪽 화살표&gt;</span> 및 <span class="inline">&lt;아래쪽 화살표&gt;</span> 키를 여러 번 눌러 상태 변화를 봅니다.</p>
    <p class="dropspot"><img alt="Animation Of Drawing A Healthbar" class="center" src="../assets/Images/QS_Guide/QS_DrawExample_8.gif"/></p>
  </div>
  <p> </p>
  <p>이 예제를 수행 한 후 GameMaker Studio 2를 사용할 때 약간 더 자신감을 갖고 그것이 어떻게 작동하는지 조금 더 이해하기를 바랍니다. 다음 섹션에서는 사용자가 입력 한 내용을 수용하고 이에 응답 할뿐만 아니라 방을 돌아 다니기 위해 그렸던 것들을 얻는 방법을 살펴볼 것입니다.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('Quick_Start_Guide/Drawing.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="../Content.htm">인덱스</a></div>
        <div style="float:right">다음: <a href="Movement_And_Controls.htm">움직임과 컨트롤</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Drawing
Drawing Examples
Quick Start Drawing
-->
  <!-- TAGS
qs_drawing
-->

</body></html> 