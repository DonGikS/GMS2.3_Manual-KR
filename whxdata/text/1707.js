rh._.exports({"0":["gamepad_axis_value"],"1":["gamepad_axis_value"],"2":["gamepad_axis_value"],"3":["\n\n\n\n  ","\n  ","\n  ","You can use this function to get the value of the different axes from a given gamepad slot. You supply the gamepad slot index to check, along with either an axis index constant (as listed ","here","), or an integer value between\n    0 and ","gamepad_axis_count()"," -1. The return value will be between -1 and 1 for each of the available horizontal and vertical axes.","\n  "," ","\n  ","\n  ","gamepad_axis_value(device, axisIndex);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","device","\n        ","Which gamepad device \"slot\" to check.","\n      ","\n      ","\n        ","axisIndex","\n        ","The axis index to check (see the ","constants list",").","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","real","\n  "," ","\n  ","\n  ","var haxis = gamepad_axis_value(0, gp_axislh);"," var vaxis = gamepad_axis_value(0, gp_axislv);"," direction = point_direction(0, 0, haxis, vaxis);"," speed = point_distance(0 ,0, haxis, vaxis) * 5;","\n  ","The above code sets the speed and direction of the instance based on the returned values of the left analogue controller of the gamepad plugged into device \"slot\" 0.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Gamepad Input","\n        ","Next: "," gamepad_button_check ","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["gamepad_axis_value"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1707"})