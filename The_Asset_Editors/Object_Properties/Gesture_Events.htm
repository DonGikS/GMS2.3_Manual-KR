<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1.1_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Gesture Events</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing the gesture events."/>
  <meta name="rh-index-keywords" content="Objects - Gesture Events,event_data"/>
  <meta name="search-keywords" content="flick,pan,rotate,gesture,gesture events,tap"/>
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Gesture Events">
        <span>제스처 이벤트</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>제스처 이벤트</h1>
  <p><img alt="The Gesture Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png"/></p>
  <p>제스처 이벤트 범주의 이벤트는 GameMaker Studio 2가 마우스 또는 터치 스크린 이벤트의 &quot;제스처&quot;를 감지 할 때마다 트리거됩니다 (이 제스처 이벤트는 모바일 용으로 특별히 설계된 반면 다른 대상에서 마우스를 감지하는 데 사용될 수도 있음) 이 경우에는 다중 터치를 감지하지 못합니다). 제스처 시스템의 목표는 직접 마우스 / 터치 읽기 기능보다 높은 수준에서 입력을 시도하고 인식하는 것이며 터치 기반 장치에서 일반적으로 사용되는 입력의 구현을 단순화하도록 설계되었습니다.</p>
  <p class="note">참고 : 이러한 이벤트는 해당 플랫폼에서 이러한 이벤트를 사용하는 멀티 터치에 대한 지원이 없기 때문에 HTML5 플랫폼에서 트리거되지 않습니다. 해당 대상에서 제스처를 찾으려면 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/Device_Input.htm">장치 기능</a> 을 사용해야합니다.</p>
  <p><strong>인스턴스</strong> 제스처 또는 <strong>전역</strong> 제스처를 감지하도록 선택할 수 있습니다. 여기서 인스턴스 제스처 이벤트는 초기 터치 / 클릭이 회의실 내의 인스턴스에있을 때만 트리거됩니다. 이 이벤트가 트리거 되려면 인스턴스에 유효한 충돌 마스크가 있어야합니다 (자세한 내용 <a href="../Sprites.htm">은 Sprite Editor-Collision Mask</a> 및 <a href="../Objects.htm">Object Editor-Collision Mask</a> 섹션 참조). 그러나 글로벌 이벤트는 게임 룸 내의 아무 곳이나 이벤트가있는 모든 인스턴스를 터치 / 클릭하면 트리거됩니다.</p>
  <p>제스처가 인식되면 사용 가능한 이벤트 중 하나 이상이 트리거되고 트리거 된 이벤트는 감지 된 제스처 유형에 따라 다릅니다. 그러나 모든 경우에 <a href="../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS 맵</a> 이 생성되어 내장 변수 <span class="inline">event_data</span> 에 저장됩니다. 사용 가능한 키는 생성 된 이벤트 종류에 따라 다르며 아래의 각 하위 섹션에 표시되어 있습니다.</p>
  <p class="note"><strong>참고</strong> : <span class="inline">event_data</span> 변수는 해당 <span class="inline">이벤트</span> 가 시작될 때 자동으로 생성 된 후 마지막에 다시 파괴되어이 변수가 -1 값으로 재설정되므로 <span class="inline">event_data</span> 변수는 이러한 이벤트에서만 유효합니다. 다른 시간.</p>
  <p>터치중인 위치 아래에 여러 인스턴스가 있고 모두 제스처 이벤트가있는 경우 &quot;최상위&quot;인스턴스가 아니라 <em>모든</em> 인스턴스가 트리거됩니다. 또한 여러 카메라보기를 사용하고 인스턴스를 끌 때 반환되는 값은 초기 터치 / 클릭을 받았을 때의보기를 기반으로합니다. 이는 해당 인스턴스의 해당 제스처에서 모든 후속 이벤트에 해당됩니다. 따라서 한보기에서 인스턴스를 터치하고 드래그 한 다음 다른보기에서 터치를 해제하면 제스처가 처음 감지 된 초기보기에 상대적인 값이 반환됩니다.</p>
  <p> </p>
  <p><img height="20" src="../../assets/Images/Icons/Icon_Tap.png" style="margin-left:0px" width="20"/><img src="../../assets/Images/Icons/Icon_Drag.png"/><img src="../../assets/Images/Icons/Icon_Flick.png"/> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">탭, 드래그 및 톡 이벤트</span> <span data-close-text="true">탭, 드래그 및 톡 이벤트</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">&quot;Tap&quot;, &quot;Drag&quot;및 &quot;Flick&quot;이벤트는 모두 화면에서 한 번의 터치 또는 마우스 클릭을 기반으로하며 <span class="inline">event_data</span> DS 맵에는 다음 키가 포함됩니다.</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>키</th>
          <th>기술</th>
        </tr>
        <tr>
          <td>&quot; <span class="inline">제스쳐</span> &quot;</td>
          <td>재생중인 제스처에 <i>고유 한</i> ID 값입니다. 이를 통해 멀티 파트 제스처의 여러 부분 (예 : 드래그 시작, 드래그 및 드래그 엔드)을 서로 연결할 수 있습니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">터치</span> &quot;</td>
          <td>이것은 제스처에 사용되는 터치 인덱스입니다. 일반적으로이 값은 0에서 시작하여 누른 각 손가락에 대해 증가한 다음 모든 손가락을 제거하면 다시 0으로 재설정되지만 사용자가이 이벤트가 다른 터치에 의해 트리거 될 때 다른 곳에서 화면을 터치하면 0보다 큽니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">posX</span> &quot;</td>
          <td>터치의 공간-공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">위치</span> &quot;</td>
          <td>터치의 실내 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawposX</span> &quot;</td>
          <td>터치의 <i>원시</i> 창 공간 X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawposY</span> &quot;</td>
          <td>이것은 터치의 <i>원시</i> 창 공간 Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">guiposX</span> &quot;</td>
          <td>터치의 gui-space X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td><span class="inline">guiposY</span></td>
          <td>터치의 GUI 공간 Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">diffX</span> &quot;</td>
          <td>이것은 현재 제스처의 위치와이 제스처에서 마지막 터치의 위치 사이의 공간 X 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">diffY</span> &quot;</td>
          <td>이것은 현재 제스처의 위치와이 제스처에서 마지막 터치의 위치 사이의 공간 Y 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawdiffX</span> &quot;</td>
          <td>이 동작에서 현재 터치 위치와 마지막 터치 위치 사이의 원시 X 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawdiffY</span> &quot;</td>
          <td>이 동작에서 현재 터치 위치와 마지막 터치 위치 사이의 원시 Y 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">guidiffX</span> &quot;</td>
          <td>이것은 현재 제스처의 위치와이 제스처에서 마지막 터치의 위치 간의 GUI 공간 X 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">guidiffY</span> &quot;</td>
          <td>이것은 현재 제스처의 위치와이 제스처에서 마지막 터치의 위치 사이의 GUI 공간 Y 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">viewstartposX</span> &quot;</td>
          <td>현재 동작의 X 방 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">viewstartposY</span> &quot;</td>
          <td>현재 제스처의 방 Y 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawstartposX</span> &quot;</td>
          <td>이것은 현재 제스처의 원시 X 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">rawstartposY</span> &quot;</td>
          <td>현재 제스처의 원시 Y 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">guistartposX</span> &quot;</td>
          <td>현재 동작의 GUI 공간 X 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">guistartposY</span> &quot;</td>
          <td>현재 제스처의 GUI 공간 Y 시작 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot; <span class="inline">isflick</span> &quot;</td>
          <td><b>Drag End 이벤트에서만 사용할 수 있습니다</b> . 드래그 끝이 플릭으로 감지되면 1로 설정됩니다. 즉, 어쨌든 드래그를 처리하는 경우 별도의 <b>Flick 이벤트</b> 가 필요하지 않습니다.</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true">탭</span> <span data-close-text="true">탭</span></a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p class="dropspot">Tap 이벤트는 인스턴스가 터치 또는 클릭 될 때 또는 글로벌 이벤트 인 경우 게임이 방의 아무 곳이나 터치 또는 클릭을 등록 할 때 트리거됩니다. 탭은 빠른 터치 및 해제로 간주되며 터치가 너무 오래 지속되면 드래그로 간주됩니다 (탭 이벤트 대신 드래그 제스처 이벤트를 트리거 함). 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">x_goto = x;<br/> y_goto = y;</p>
      <h4>탭 이벤트</h4>
      <p class="code">x_goto = event_data[? &quot;posX&quot;];<br/> y_goto = event_data[? &quot;posY&quot;];</p>
      <h4>스텝 이벤트</h4>
      <p class="code">var _pd = point_distance(x, y, x_goto, y_goto);<br/> move_towards_point(x_goto, y_goto, clamp(_pd, 0, 5);</p>
      <p class="dropspot">위의 코드는 화면에서 탭을 감지 한 다음 탭 위치를 가져 와서 인스턴스를 해당 위치로 이동합니다. 탭 감지 시간을 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">늘리거나 줄이려면 gesture_drag_time ()</span></a> 함수를 사용하여 설정할 수 있습니다. 이것은 초기 감지와 탭이 드래그가되는 시간을 설정하므로 탭 감지를 더 길게하려면 더 높은 값으로 설정하거나 더 짧게하려면 더 낮은 값으로 설정하십시오 (값은 초 단위이며 기본값은 0.16 임).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#"><span data-open-text="true">더블 탭</span> <span data-close-text="true">더블 탭</span></a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot">더블 탭 이벤트는 인스턴스가 빠르게 연속으로 두 번 터치되거나 클릭 될 때 (또는 글로벌 이벤트 인 경우 게임이 방 안 어디에서나 두 번의 빠른 터치 또는 클릭을 등록 할 때) 트리거됩니다. 더블 탭은 두 번의 빠른 터치 및 해제로 간주되지만 터치가 너무 오래 지속되면 드래그로 간주됩니다 (더블 탭 이벤트 대신 드래그 제스처 이벤트를 트리거 함). 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">x_goto = x;<br/> y_goto = y;</p>
      <h4>더블 탭 이벤트</h4>
      <p class="code">instance_destroy();</p>
      <p class="dropspot">위 코드는 단순히 더블 탭을 감지하고 인스턴스를 파괴합니다. 당신이 함수를 사용하여 더블 탭을 트리거 탭 사이의 시간을 설정할 수 있습니다 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_time.htm"><span class="inline">gesture_double_tap_time ()</span></a> (- 초 - 디폴트 값이 0.16을) 당신은 또한 기능과 탭 사이의 감지 거리를 설정할 수 있습니다 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_distance.htm"><span class="inline">gesture_double_tap_distance을 ()</span></a> (이 거리 밖에서 두 번째 탭이 감지되면 일반 탭 이벤트로 간주됩니다).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#"><span data-open-text="true">드래그 시작</span> <span data-close-text="true">드래그 시작</span></a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot">드래그 시작 이벤트는 사용자가 손을 떼지 않고 터치 또는 클릭을 유지하면 트리거됩니다. 초기 터치 후 설정 시간이 지났을 때 한 번 트리거됩니다 (기본적으로 0.16 초임). <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">이는 gesture_drag_time ()</span></a> 함수를 사용하여 다른 값으로 초 단위로 설정할 수 있습니다. 이 이벤트가 트리거 된 후 사용자가 터치 / 클릭을 누른 상태에서 터치 / 클릭이 해제 될 때까지 모든 단계에서 드래그 이벤트가 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">drag_offsetX = 0;<br/> drag_offsetY = 0;</p>
      <h4>드래그 시작 이벤트</h4>
      <p class="code">drag_offsetX = x - event_data[?&quot;posX&quot;];<br/> drag_offsetY = y - event_data[?&quot;posY&quot;];</p>
      <p class="dropspot">위의 코드는 Drag Start 이벤트를 사용하여 터치 / 클릭 위치를 가져 와서 x 및 y 축의 오프셋 값을 설정합니다. 그런 다음 인스턴스를 드래그 할 때 터치 / 클릭이 감지 된 위치로 &quot;점프&quot;하지 않도록 할 수 있습니다 (이 예제의 연속은 아래 드래그 이벤트 참조).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">드래그</span> <span data-close-text="true">드래그</span></a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p class="dropspot">끌기 이벤트는 끌기 시작 이벤트 후에 트리거되며 사용자가 인스턴스 (또는 글로벌 이벤트 인 경우 화면)에서 터치 / 클릭을 유지하고 정의 된 끌기 임계 값 이상으로 이동하는 모든 단계에 대해 트리거됩니다. 이 거리는 기본적으로 0.1 인치이지만 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_distance.htm"><span class="inline">gesture_drag_distance ()</span></a> 함수를 사용하여 설정할 수 있습니다. 이동이 없거나 이동이 정의 된 임계 값 미만인 경우 이벤트가 트리거되지 않습니다. 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">drag_offsetX = 0;<br/> drag_offsetY = 0;</p>
      <h4>드래그 시작 이벤트</h4>
      <p class="code">drag_offsetX = x - event_data[?&quot;posX&quot;];<br/> drag_offsetY = y - event_data[?&quot;posY&quot;];</p>
      <h4>드래그 이벤트</h4>
      <p class="code">x = event_data[?&quot;posX&quot;] + drag_offsetX;<br/> y = event_data[?&quot;posY&quot;] + drag_offsetY;</p>
      <p class="dropspot">위의 예제 코드는 Drag Start 이벤트에 설정된 오프셋 변수를 사용하여 Dragging 이벤트가 트리거 될 때 인스턴스를 이동합니다.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true">드래그 엔드</span> <span data-close-text="true">드래그 엔드</span></a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p class="dropspot">드래그 종료 이벤트는 사용자가 인스턴스 (또는 이벤트가 전역 인 경우 화면)에서 터치 / 클릭을 놓으면 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있지만이 경우 맵에 추가 키 &quot; <span class="inline">isflick</span> &quot;가 있습니다. <span class="inline">긋기</span> 는 드래그가 발생한 초당 거리로 계산되며 &quot; <span class="inline">isflick</span> &quot;키의 값이 정의 된 초당 거리 값보다 크면 true이고, 그렇지 않으면 false입니다. 기본값은 초당 2 인치이지만 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed ()</span></a> 함수를 사용하여 다른 값으로 설정할 수 있습니다. 또한 &quot;isflick&quot;변수가 true 인 경우 트리거되는 전용 Flick 이벤트도 있습니다. 사용 예는 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">flickVelX = 0.0;<br/> flickVelY = 0.0;</p>
      <h4>드래그 종료 이벤트</h4>
      <p class="code">isFlick = event_data[?&quot;isflick&quot;];<br/> if (isFlick)<br/>     {<br/>     flickVelX = event_data[?&quot;diffX&quot;];<br/>     flickVelY = event_data[?&quot;diffY&quot;];<br/>     }<br/> else
        <br/>     {<br/>     flickVelX = 0;<br/>     flickVelY = 0;<br/>     }</p>
      <h4>스텝 이벤트</h4>
      <p class="code">x += flickVelX;<br/> y += flickVelY;<br/> flickVelX *= 0.7;<br/> flickVelY *= 0.7;</p>
      <p class="dropspot">위의 코드는 단순히 마지막 Dragging 이벤트와 현재 Drag End 이벤트의 x 및 y 위치 차이를 가져오고 이동이 긋기 임계 값보다 큰 경우 인스턴스를 이동하는 데 사용되는 일부 변수를 설정합니다. 단계 이벤트.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true">톡</span> <span data-close-text="true">톡</span></a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p class="dropspot">Flick 이벤트는 터치 / 클릭을 누른 상태에서 끌어서 놓은 후 마지막 끌기 위치와 놓기 위치 사이의 거리가 초당 2 인치보다 큰 경우에만 트리거됩니다 (이 설정은 기본 설정 임) <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed ()</span></a> 함수를 사용하십시오. 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">flickVelX = 0.0;<br/> flickVelY = 0.0;</p>
      <h4>톡 이벤트</h4>
      <p class="code">flickVelX = event_data[?&quot;diffX&quot;];<br/> flickVelY = event_data[?&quot;diffY&quot;];</p>
      <h4>스텝 이벤트</h4>
      <p class="code">x += flickVelX;<br/> y += flickVelY;<br/> flickVelX *= 0.7;<br/> flickVelY *= 0.7;</p>
      <p class="dropspot">위의 코드는 단순히 마지막 Dragging 이벤트와 현재 Flick 이벤트의 x 및 y 위치 차이를 가져오고 이동이 긋기 임계 값보다 큰 경우 단계에서 인스턴스 이동에 사용되는 일부 변수를 설정합니다 행사.</p>
    </div>
    <p> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Pinch.png" style="margin-left: 60px"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">핀치 이벤트</span> <span data-close-text="true">핀치 이벤트</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">&quot;핀치&quot;이벤트는 한 번에 인식되는 장치 화면에 대한 두 번의 터치를 기반으로하며, 하나 또는 둘 다 특정 거리 이상 이동했습니다. 각 터치의 움직임과 함께 터치의 이동 각도는 핀치 또는 회전 이벤트의 감지를 결정하는 요소입니다 (핀치 이벤트 유형의 경우).</p>
    <ul class="dropspotlist">
      <li class="dropspot">접촉 중 하나는 이동하지 않는 경우, 다른 하나는 그것을 향해 이동 또는 멀리에서 임계각 내에 있어야한다 (함수를 사용하여 설정 될 수 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards을 ()</span></a> 와 - <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away을 ()</span></a> ).</li>
      <li class="dropspot">두 터치가 모두 움직 인 경우 속도는 대략 반대 방향이어야하며 터치가 대략 정렬 상태로 움직 이도록 동일한 각도 임계 값 검사도 수행됩니다.</li>
    </ul>
    <p class="dropspot">위의 기준으로 두 번의 터치와 움직임이 감지되면 핀치 이벤트가 트리거되고 각 이벤트에서 <span class="inline">event_data</span> DS Map에 다음 키가 채워집니다.</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>키</th>
          <th>기술</th>
        </tr>
        <tr>
          <td>&quot;몸짓&quot;</td>
          <td>재생중인 제스처에 <i>고유 한</i> ID 값입니다. 이를 통해 멀티 파트 제스처의 여러 부분 (예 : 드래그 시작, 드래그 및 드래그 엔드)을 서로 연결할 수 있습니다.</td>
        </tr>
        <tr>
          <td>&quot;touch1&quot;</td>
          <td>이것은 꼬집음 제스처의 일부로 사용되는 첫 번째 터치의 인덱스입니다. 일반적으로이 값은 0이지만이 이벤트가 다른 터치에 의해 트리거 될 때 사용자가 다른 곳의 화면을 터치하면 값이 0보다 큽니다.</td>
        </tr>
        <tr>
          <td>&quot;touch2&quot;</td>
          <td>이것은 핀치 제스처의 일부로 사용되는 두 번째 터치의 인덱스입니다. 일반적으로 이것은 touch1의 값보다 1 더 많지만 다른 곳에서 감지되는 터치 수에 따라 다른 값일 수 있습니다.</td>
        </tr>
        <tr>
          <td>&quot;posX1&quot;</td>
          <td>첫 번째 터치의 실내 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;posY1&quot;</td>
          <td>이것은 첫 번째 터치의 실내 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposX1&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;rawposY1&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;guiposX1&quot;</td>
          <td>첫 번째 터치의 gui-space X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;guiposY1&quot;</td>
          <td>이것은 두 번째 터치의 gui-space Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;posX2&quot;</td>
          <td>두 번째 터치의 실내 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;posY2&quot;</td>
          <td>두 번째 터치의 실내 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposX2&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposY2&quot;</td>
          <td>이것은 두 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guiposX2&quot;</td>
          <td>두 번째 터치의 GUI 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guiposY2&quot;</td>
          <td>두 번째 터치의 GUI 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;midpointX&quot;</td>
          <td>실내 공간에서 두 터치 사이의 중간 지점의 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;중간 점 Y&quot;</td>
          <td>실내 공간에서 두 터치 사이의 중간 지점의 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawmidpointX&quot;</td>
          <td>이것은 중간 지점의 원시 창 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawmidpointY&quot;</td>
          <td>이것은 중간 지점의 원시 창 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guimidpointX&quot;</td>
          <td>이것은 중간 지점의 GUI 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guimidpointY&quot;</td>
          <td>중간 지점의 GUI 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;상대적 규모&quot;</td>
          <td>이것은이 동작의 마지막 이벤트와 비교하여 스케일의 차이입니다. 따라서 <b>Pinch In</b> 이벤트의 경우 항상 1.0보다 작고 <b>Pinch Out</b> 이벤트의 경우 항상 1.0보다 큽니다.</td>
        </tr>
        <tr>
          <td>&quot;절대 규모&quot;</td>
          <td>이것은 제스처가 시작되었을 때 손가락이 있던 위치와 비교 한 스케일입니다 (따라서 손가락 사이의 거리가 절반으로 줄어든 경우 0.5가되고 거리가 두 배가되면 2.0이됩니다).</td>
        </tr>
      </tbody>
    </table>
    <p class="dropspot"> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true">핀치 스타트</span> <span data-close-text="true">핀치 스타트</span></a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p class="dropspot">핀치 스타트 이벤트는 인스턴스 (또는 이벤트가 전역 인 경우 화면)가 두 개의 &quot;핑거&quot;에 의해 터치되고 (터치가 유지됨) &quot;핑거&quot;중 하나 또는 둘 모두가 이동하면 트리거됩니다. 터치가 서로에서 멀어 지거나 최소 확인 거리 (기본적으로 0.1 인치) 이상으로 서로를 향해 이동하지만 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_distance.htm"><span class="inline">제스처 (push_pinch_distance ()</span></a> 함수를 사용하여 설정할 수 있음) 사이의 각도가 정의 된 값 ( 기본적으로 45도이지만 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards ()</span></a> 및 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away ()를</span></a> 사용하여 설정할 수 있으며, 핀치 시작 이벤트가 트리거됩니다. 이 경우 나중에 사용하기 위해 변수 또는 상점 위치 날짜를 설정할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>핀치 스타트 이벤트</h4>
      <p class="code">pinching = true;<br/> pinch_x = event_data[? &quot;midpointX&quot;]; pinch_y = event_data[? &quot;midpointY&quot;];</p>
      <p class="dropspot">위의 코드는 핀치를 감지하여 해당 핀치의 중간 위치를 저장합니다.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true">핀치 인 / 핀치 아웃</span> <span data-close-text="true">핀치 인 / 핀치 아웃</span></a></p>
    <div class="droptext" data-targetname="drop-down13">
      <p class="dropspot">핀치 인 및 핀치 아웃 이벤트는 핀치를 구성하는 두 터치 사이의 거리가 최소 임계 값 (기본적으로 +/- 0.1 인치로 설정 됨)에서 제스처 _ 핀치 _ 거리를 사용하여 변경할 수있는 모든 단계에서 트리거됩니다. . 핀치 터치의 움직임이 없으면 이러한 이벤트가 트리거되지 않습니다. 이러한 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>글로벌 핀치 인 / 핀치 아웃 이벤트</h4>
      <p class="code">var _scale = event_data[? &quot;relativescale&quot;];<br/> var _w = camera_get_view_width(view_camera[0]);<br/> var _h = camera_get_view_height(view_camera[0]);<br/> var _x = camera_get_view_x(view_camera[0]) + (_w / 2);<br/> var _y = camera_get_view_y(view_camera[0])
        + (_h / 2);<br/>
        <br/> _w *= _scale;<br/> _h = _w * (room_height / room_width);<br/> _x -= _w / 2;<br/> _y -= _h / 2;<br/>
        <br/> camera_set_view_pos(view_camera[0], _x, _y);<br/> camera_set_view_size(view_camera[0], _w, _h);</p>
      <p class="dropspot">위의 코드는 핀치 터치의 상대적 배율을 ​​기준으로 뷰의 배율을 조정합니다.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">핀치 엔드</span> <span data-close-text="true">핀치 엔드</span></a> <strong></strong></p>
    <div class="droptext" data-targetname="drop-down14">
      <p class="dropspot">사용자가 장치에서 터치 중 하나 (또는 ​​둘 다)를 놓으면 Pinch End 이벤트가 트리거됩니다. 이 이벤트는 <span class="inline">event_data</span> DS 맵을 생성하여 <span class="inline">이벤트</span> 에 대한 정보를 얻는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>핀치 엔드 이벤트</h4>
      <p class="code">var _pinchx = event_data[? &quot;midpointX&quot;];<br/> var _pinchy = event_data[? &quot;midpointY&quot;];<br/> var _w = camera_get_view_width(view_camera[0]);<br/> var _h = camera_get_view_height(view_camera[0]);<br/> var _x = _pinchx - (_w / 2);<br/>        var _y = _pinchy - (_h / 2);<br/>
        <br/> camera_set_view_pos(view_camera[0], _x, _y);</p>
      <p class="dropspot">위의 코드는 뷰 위치가 터치가 해제 될 때 핀치를 구성한 두 터치의 중간 점을 중심으로 설정합니다.</p>
      <p><strong></strong></p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Rotate.png" style="margin-left: 56px"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down15" href="#"><span data-open-text="true">이벤트 회전 이벤트</span> <span data-close-text="true">회전</span></a></p>
  <div class="droptext" data-targetname="drop-down15">
    <p class="dropspot">&quot;회전&quot;이벤트는 한 번에 인식되는 장치 화면에 대한 두 번의 터치와 특정 시간 내에 둘 사이에 일정한 각도 회전이 발생한 경우를 기준으로합니다. 각 터치의 움직임과 함께 터치의 이동 각도는 핀치 또는 회전 이벤트의 감지를 결정하는 요소입니다 (회전 이벤트 유형의 경우).</p>
    <ul class="dropspotlist">
      <li class="dropspot">지정된 최소 시간 동안 두 번 터치해야합니다 (기본 시간은 0.16 초이지만, <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time ()</span></a> 함수를 사용하여 변경할 수 있습니다).</li>
      <li class="dropspot">이 최소 시간 내에 일관된 방향으로 회전해야합니다 (이 시간 내에 회전 방향이 바뀌면 회전이 시작되지 않음).</li>
      <li class="dropspot">회 전량은 최소 임계 값 각도를 초과해야합니다 (기본적으로 5 °로 설정되어 있지만, 이는 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle ()</span></a> 함수를 사용하여 변경할 수 있습니다).</li>
    </ul>
    <p class="dropspot">위의 기준으로 두 번의 터치와 움직임이 감지되면 회전 이벤트가 트리거되고 각 이벤트에서 <span class="inline">event_data</span> DS Map에 다음 키가 채워집니다.</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>키</th>
          <th>기술</th>
        </tr>
        <tr>
          <td>&quot;몸짓&quot;</td>
          <td>재생중인 제스처에 <i>고유 한</i> ID 값입니다. 이를 통해 멀티 파트 제스처의 여러 부분 (예 : 드래그 시작, 드래그 및 드래그 엔드)을 서로 연결할 수 있습니다.</td>
        </tr>
        <tr>
          <td>&quot;touch1&quot;</td>
          <td>이것은 꼬집음 제스처의 일부로 사용되는 첫 번째 터치의 인덱스입니다. 일반적으로이 값은 0이지만이 이벤트가 다른 터치에 의해 트리거 될 때 사용자가 다른 곳의 화면을 터치하면 값이 0보다 큽니다.</td>
        </tr>
        <tr>
          <td>&quot;touch2&quot;</td>
          <td>이것은 핀치 제스처의 일부로 사용되는 두 번째 터치의 인덱스입니다. 일반적으로 이것은 touch1의 값보다 1 더 많지만 다른 곳에서 감지되는 터치 수에 따라 다른 값일 수 있습니다.</td>
        </tr>
        <tr>
          <td>&quot;posX1&quot;</td>
          <td>첫 번째 터치의 실내 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;posY1&quot;</td>
          <td>이것은 첫 번째 터치의 실내 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposX1&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;rawposY1&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;guiposX1&quot;</td>
          <td>첫 번째 터치의 gui-space X 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui ()를</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;guiposY1&quot;</td>
          <td>이것은 두 번째 터치의 gui-space Y 위치입니다 ( <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui ()</tt></span></a> 사용하여 마우스 위치를 얻는 것과 동일).</td>
        </tr>
        <tr>
          <td>&quot;posX2&quot;</td>
          <td>두 번째 터치의 실내 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;posY2&quot;</td>
          <td>두 번째 터치의 실내 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposX2&quot;</td>
          <td>이것은 첫 번째 터치의 <i>원시</i> 창 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawposY2&quot;</td>
          <td>이것은 두 번째 터치의 <i>원시</i> 창 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guiposX2&quot;</td>
          <td>두 번째 터치의 GUI 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guiposY2&quot;</td>
          <td>두 번째 터치의 GUI 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;PivotX&quot;</td>
          <td>실내 공간에서 회전 피벗 점의 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;피벗&quot;</td>
          <td>실내 공간에서 회전 피벗 점의 Y 위치.</td>
        </tr>
        <tr>
          <td>&quot;rawpivotX&quot;</td>
          <td>회전 피벗 점의 원시 창 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;rawpivotY&quot;</td>
          <td>회전 피벗 점의 원시 창 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guipivotX&quot;</td>
          <td>회전 피벗 점의 GUI 공간 X 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;guipivotY&quot;</td>
          <td>회전 피벗 점의 GUI 공간 Y 위치입니다.</td>
        </tr>
        <tr>
          <td>&quot;상대적&quot;</td>
          <td>이것은 각도로 측정 된이 제스처의 마지막 이벤트와 비교 한 회전 차이입니다.</td>
        </tr>
        <tr>
          <td>&quot;절대&quot;</td>
          <td>이것은 제스처가 시작되었을 때 손가락이 있던 위치와 각도의 차이입니다 (도 단위). 예를 들어, 제스처 시작 이후 손가락이 1/4 원 회전 한 경우이 값은 회전 방향에 따라 90 ° 또는 -90 °가됩니다.</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true">회전 시작</span> <span data-close-text="true">회전 시작</span></a></p>
    <div class="droptext" data-targetname="drop-down16">
      <p class="dropspot">Rotate Start 이벤트는 인스턴스 (또는 이벤트가 전역 인 경우 화면)가 두 개의 &quot;finger&quot;(터치)에 의해 터치되고 터치가 유지되면 시작에서 &quot;fingers&quot;중 하나 또는 둘 모두가 회전 될 때 트리거됩니다. 위치. 터치의 회전은 짧은 시간 (기본적으로 0.16 초) 내에 시작되어야하지만, <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time ()</span></a> 함수를 사용하여 설정할 수 있으며 최소 각도 임계 값 (기본값 : 5 °)보다 클 수 있습니다. <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle ()</span></a> 함수를 사용하여 변경할 수 있습니다. 이러한 검사가 참이면 회전 시작 이벤트가 트리거되고이를 사용하여 값을 저장하거나 나머지 회전 이벤트와 함께 사용할 변수를 설정할 수 있습니다. 예를 들면 다음과 같습니다.</p>
      <h4>이벤트 만들기</h4>
      <p class="code">rotating = false;<br/> view_a = camera_get_view_angle(view_camera[0]);</p>
      <h4>회전 시작 이벤트</h4>
      <p class="code">rotating = true;</p>
      <p class="dropspot">위의 코드는 단순히 뷰 카메라 회전을위한 일부 변수를 설정 한 다음 Rotate Start 이벤트에서 변수 중 하나를 true로 설정합니다.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down17" href="#"><span data-open-text="true">자전</span> <span data-close-text="true">자전</span></a></p>
    <div class="droptext" data-targetname="drop-down17">
      <p class="dropspot">Rotating 이벤트는 움직임이 최소 각도 임계 값보다 크면 (기본적으로 5 °이지만, <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle ()</span></a> 함수를 사용하여 변경할 수 있음) 화면 터치가 서로 회전하는 모든 단계에서 트리거됩니다. . 이 이벤트는 다음과 같이 변수를 설정하고 인스턴스를 조작하는 데 사용할 수 있습니다.</p>
      <h4>회전 이벤트</h4>
      <p class="code">var _relangle = event_data[?&quot;relativeangle&quot;];<br/> var _a = camera_get_view_angle(view_camera[0]);<br/> _a += _relangle;<br/> camera_set_view_angle(view_camera[0], _a);</p>
      <p class="dropspot">위의 코드는 이벤트에서 터치의 회전 이동에 따라 카메라 뷰를 회전시킵니다.</p>
      <p class="dropspot"><strong></strong></p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true">회전 끝</span> <span data-close-text="true">회전 끝</span></a> <strong></strong></p>
    <div class="droptext" data-targetname="drop-down18">
      <p class="dropspot">동작을 구성하는 하나 (또는 ​​둘 다) 터치가 장치 화면에서 해제되면 회전 종료 이벤트가 트리거됩니다. 이 이벤트는 다음과 같이 변수를 설정하고 인스턴스를 조작하는 데 사용할 수 있습니다.</p>
      <h4>종료 이벤트 회전</h4>
      <p class="code">rotating = false;</p>
      <h4>스텝 이벤트</h4>
      <p class="code">if !rotating<br/>     {<br/>     var _a = camera_get_view_angle(view_camera[0]);<br/>     var _adif = angle_difference(view_a, _a);<br/>     _a += median(-5, _adif, 5);<br/>     camera_set_view_angle(view_camera[0], _a);<br/>     }</p>
      <p class="dropspot">위의 코드는 Rotate End 이벤트를 사용하여 사용자가 제스처를 중지 한 후 변수를 설정하는시기를 감지합니다. 이 변수는 단계 이벤트에서 뷰 카메라를 원래 위치로 다시 회전시키는 데 사용됩니다.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('The_Asset_Editors\Object_Properties\Gesture_Events.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="Object_Events.htm">객체 이벤트</a></div>
        <div style="float:right">다음: <a href="Event_Order.htm">이벤트 순서</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Gesture Events
Flick Events
Pan Events
Rotate Events
Tap Events
Gestures
-->
  <!-- TAGS
gesture_events
-->

</body></html> 