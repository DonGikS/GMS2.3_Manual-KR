<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1_2";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Physics Objects</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing object physics"/>
  <meta name="rh-index-keywords" content="Objects - Physics"/>
  <meta name="search-keywords" content="Object Physics,Physics,fixtures,binding,physics shape editor,shape editor,physics properties"/>
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Physics Objects">
        <span>물리 객체</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>물리 객체</h1>
  <p>새 객체 자원을 처음 만들면 <strong>Use Physics</strong> 라는 확인란이 있으며 기본적으로 선택되어 <em>있지 않습니다</em> . 이 옵션을 선택하면 객체의 인스턴스가 방에 배치 될 때 객체의 물리적 특성이 켜지고 객체의 &quot;전통적인&quot;이동 및 충돌 기능이 더 이상 유효하지 않음을 의미하기 때문에 객체의 인스턴스가 방에있을 때 객체의 동작이 크게 변경됩니다. 배치 된 룸은 물리 룸으로 표시됩니다 ( <a href="../Room_Properties/Room_Properties.htm">룸 편집기 속성</a> 섹션 참조). 이를 확인하면 오브젝트 자원 창이 물리 편집기의 새 체인 창을 엽니 다.</p>
  <p>물리 비헤이비어 값을 편집하기 전에 먼저 <strong>충돌 모양을</strong> 설정하는 것이 좋습니다. &quot;정상&quot;충돌 시스템을 사용하면 충돌이 오브젝트에 할당 된 스프라이트 마스크를 기반으로하지만 물리가 활성화 <strong>된 경우 더 이상 그렇지 않습니다</strong> . <strong>충돌 모양</strong> 을 오브젝트 자체에 할당해야합니다 (이것은 <strong>조명기</strong> 라고합니다. 자세한 내용 <a href="../../GameMaker_Language/GML_Reference/Physics/Physics.htm">은 물리 함수</a> 를 참조하십시오). 원, 사각형 또는 직접 정의한 다각형 모양이 될 수 있습니다. <strong>충돌 모양 수정</strong> 버튼을 클릭하면 <strong>모양</strong> 을 편집 할 수있는 다음과 같은 연결 창이 열립니다.</p>
  <p>이것은 <a href="../Paths.htm">Path Editor</a> 와 유사하며 거의 같은 방식으로 작동합니다. 그러나 선택한 마스크에 따라 다소 제한적일 수 있습니다.</p>
  <ul class="colour">
    <li><strong>원형</strong> 마스크가있는 경우 경로 직경 중 하나만 잡아 당겨서 원 직경을 더 크게 또는 더 작게 만들 수 있습니다</li>
    <li><strong>직사각형</strong> 마스크가있는 경우 네 모서리 중 하나를 이동할 수 있지만 해당 모서리는 항상 직사각형을 유지하도록 위치를 자동 조정합니다.</li>
    <li><strong>사용자 정의</strong> (다각형) 마스크가있는 경우 최소 3 개에서 최대 8 개의 점이 있어야하며 볼록해야합니다 (아래 이미지 참조).</li>
  </ul>
  <p>모양을 설정 한 후에는 개체의 기본적인 물리적 속성을 정의해야합니다. 이들은 다음 매개 변수를 변경하여 구성됩니다.</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">밀도</span> <span data-close-text="true">밀도</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">무언가의 밀도는 단위 부피당 질량으로 정의되는데, 이는 기본적으로 세계에서 차지하는 공간에 얼마나 많은 질량이 채워 졌는지를 의미합니다. 따라서 풍선은 큰 공간을 차지하는 질량이 거의 없기 때문에 밀도가 낮고, 리드 바는 큰 질량을 가지면서도 밀도가 높지만 공간이 거의 없습니다. GameMaker Studio 2 2D 물리 세계에서 밀도는 밀도에 입력 한 값과 픽스처에 대해 정의한 모양의 표면 영역을 기준으로 자동으로 계산됩니다. 이것은 조명기의 관성 정도와 충돌 및 힘에 반응하는 방식에 직접적인 영향을 미치므로 밀도가 높은 작은 모양을 만들면 매우 큰 질량 (리드 바와 같은)을 갖게됩니다. 그러나 밀도가 낮은 큰 모양을 정의하면 풍선처럼 질량이 훨씬 작아집니다.</p>
    <p class="dropspot">밀도를 0으로 설정하면 인스턴스가 <strong>운동 학적</strong> 으로 생성 된 특수한 경우를 제외하고 본질적으로 무한히 조밀하고 외부 힘이나 충돌의 영향을받지 않는 &quot;정적&quot;고정물이 생성됩니다 (자세한 내용은 아래 참조).</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">배상</span> <span data-close-text="true">배상</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">물리학에서 회복은 &quot;탄성 변형 후 물체 나 시스템을 원래 상태로 되 돌리는 것&quot;으로 정의되지만, GameMaker Studio 2의 고정물은 실제로 강체이며 변형 될 수 없기 때문에 회복은 실제로 어떻게 말하는가 &quot;탄력성&quot;비품입니다. 이 설정은 오브젝트가 다른 오브젝트와 충돌 할 때 오브젝트가 &quot;튀는&quot;정도에 영향을 미치며 중력 및 마찰과 같은 인스턴스에 작용하는 다른 힘에 따라 달라집니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">충돌 그룹</span> <span data-close-text="true">충돌 그룹</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">기본적으로 모든 물리 객체의 충돌 그룹은 0이며, 이는 정상적으로 상호 작용한다는 것을 의미합니다. 이는 <strong>상호 작용할 충돌 이벤트가 있어야</strong> 함을 의미 <strong>합니다</strong> (간단한 설명은 충돌을 트리거하기 위해 수행함). 그렇지 않으면 충돌이 발생하지 않습니다. 등록하십시오. 그러나 객체가 특정의 번호가 지정된 <strong>충돌 그룹에</strong> 속하도록 지정할 수도 있습니다. <em>긍정적 인</em> 충돌 그룹에 오브젝트를 할당함으로써 (즉, 3 개의 오브젝트가 모두 &quot; <strong>2</strong> &quot;그룹에 있음) GameMaker Studio 2는 오브젝트가 충돌 이벤트에 아무 것도 없어도 물리적 속성에 따라 충돌하더라도 <em>항상</em> 충돌해야한다고 알려줍니다 당신이 그들을 할당하고 <em>부정적인 충돌</em> 그룹 개체가있는 경우 방들이, 반대로에 있음. (예 : 네 개의 객체 할당을 <strong>&quot;-1&quot;),</strong> 당신은 GameMaker 스튜디오 2를 말하고있다이 <em>결코에서</em> 충돌해야하고, 어떤 충돌이 그들 사이의 이벤트는 무시됩니다.</p>
    <p class="note"><strong>참고</strong> : 충돌 그룹을 사용하면 물리 시스템에 필요한 처리 속도가 크게 향상되며 반드시 필요한 경우에만 사용해야하며 가능한 한 적은 그룹이 있어야합니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#"><span data-open-text="true">리니어 댐핑</span> <span data-close-text="true">리니어 댐핑</span></a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">댐핑은 실을 통과 할 때 인스턴스의 물리 세계 속도를 줄이는 데 사용됩니다. 원칙적으로 이것은 &quot;실제&quot;세계의 표면에 대한 마찰과 유사하지만 GameMaker Studio 2 물리 시스템에서는 충돌 모양 (고정구)을 가진 두 인스턴스가 접촉 할 때만 마찰이 실제로 적용됩니다. 따라서 다른 물리 인스턴스와 접촉 할 필요없이 시간이 지남에 따라 움직이는 물리 인스턴스를 점차적으로 느리게하는 &quot;공기 마찰&quot;과 같은 선형 감쇠를 고려할 수 있습니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#"><span data-open-text="true">앵귤러 댐핑</span> <span data-close-text="true">앵귤러 댐핑</span></a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">&quot;실제 세계&quot;에서 회전 물체에 대해 생각할 때 모터가 있거나 공간에 있지 않는 한 외부 힘의 영향으로 인해 시간이 지남에 따라 회전 속도가 느려집니다 (기계적 마찰 또는 주변 공기 또는 물과의 마찰 등) 그것). 각도 감쇠 옵션을 사용하여이 효과를 시뮬레이션하고 물리 세계에서 인스턴스의 회전 속도를 줄일 수 있습니다. 그렇지 않으면 회전하는 인스턴스가 계속 무한대로 회전합니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#"><span data-open-text="true">마찰</span> <span data-close-text="true">마찰</span></a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot">마찰은 GameMaker Studio 2 물리 세계에서 물리 요소와의 충돌로 인한 운동량의 손실로 해석되는 서로에 대해 슬라이딩하는 재료 요소의 상대 운동에 저항하는 힘입니다. 따라서 두 인스턴스가 충돌하면이 값의 움직임에 영향을 미치며 마찰이 높으면 낮은 값보다 운동량 손실이 커집니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>마지막으로 조명기, <strong>Sensor</strong> , <strong>Start Awake</strong> 및 <strong>Kinematic에</strong> 대해 플래그를 설정하거나 해제 할 수있는 세 가지 추가 옵션이 있습니다. 이러한 각 플래그는 다음과 같은 방식으로 조명기의 동작을 변경합니다 :</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#"><span data-open-text="true">센서</span> <span data-close-text="true">센서</span></a></p>
  <div class="droptext" data-targetname="drop-down6">
    <p class="dropspot">이 확인란을 선택하면 GameMaker Studio 2에 기본적으로 객체의 물리적 속성을 &quot;무시&quot;하라고 지시하지만 여전히 주변의 객체와 충돌 이벤트를 반환합니다. 이런 식으로 방에 물리적 인 존재가없는 인스턴스를 가질 수 있지만 플레이어와 같은 다른 인스턴스의 충돌에 반응하여 문을 열거 나 다른 작업을 수행하는 등의 작업을 차례로 수행 할 수 있습니다. 방에 두십시오.</p>
    <p class="note"><strong>참고</strong> : 충돌이 <strong>처음 발생할 때만</strong> 센서 픽스쳐에서 충돌 이벤트 <strong>가 발생합니다</strong> . 즉, 두 바디가 계속 겹치기 때문에 충돌 이벤트 스트림이 발생하지 않습니다. 이들이 겹치지 않고 계속 겹치면 다른 충돌 이벤트가 트리거됩니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#"><span data-open-text="true">깨어 시작 깨어</span> <span data-close-text="true">시작</span></a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p class="dropspot">이것은 기본적으로 선택되어 있으며 방의 시작 부분에있는 조명기의 초기 &quot;상태&quot;를 나타냅니다. 일반적으로 시작부터 바로 깨우기를 원합니다 (예 : 물리 세계에 참여). 이것은 물리 시뮬레이션의 갑작스러운 시작으로 인해 특정 불안정성과 원치 않는 효과를 초래할 수 있습니다. 이러한 효과를 피하기 위해이 플래그를 체크 해제하면 픽스쳐가 잠 들어 인스턴스가 생성되며, 물리 시뮬레이션에 영향을주지 않으면 물리 시뮬레이션에 참여하지 않습니다.</p>
    <p class="dropspot">물리 인스턴스가 더 이상 이동하지 않거나 다른 물리 인스턴스와 상호 작용하지 않으면 &quot;잠자기&quot;로 플래그가 지정되며, &quot;자기&quot;인스턴스는 물리 시뮬레이션에 의해 현재 완전히 처리되지 않은 인스턴스입니다 ( <a class="tooltip" title="CPU 오버 헤드는 컴퓨터의 중앙 처리 장치가 수행 할 수있는 작업량과 개별 컴퓨팅 작업에 사용되는 용량의 백분율을 측정합니다.">CPU 오버 헤드를</a> 절약합니다).</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">운동학</span> <span data-close-text="true">운동학</span></a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">물리 기반 게임에서 움직이고 싶지만 중력과 같은 힘이나 동적 객체와의 충돌로 발생하는 힘에 의해 행동하고 싶지 않은 특정 인스턴스가 있습니다 (예 : 플랫폼 게임에서 플랫폼을 움직이는 경우) ). 그러한 물체의 경우, 단순히 조명기의 밀도를 0으로 설정하면 물리학은 물체가 <strong>정적으로</strong> 의도 된 것으로 가정하고 전혀 반응하지 않습니다. 그러나이 확인란을 선택하면 정적 객체가 <strong>운동 학적으로 만들어</strong> 지며 중력과 같은 충돌 및 힘의 영향을받지 않지만 적절한 변수를 사용하여 이동하거나 회전 할 수 있습니다 (예 : <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm"><span class="inline">phy_position_x</span></a> 및 <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm"><span class="inline">phy_position_y</span></a> 참조).</p>
    <p> </p>
  </div>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('The_Asset_Editors/Object_Properties/Physics_Objects.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="../Objects.htm">객체 편집기</a></div>
        <div style="float:right">다음: <a href="Object_Variables.htm">객체 변수</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Physics Objects
-->
  <!-- TAGS
objects_physics
-->

</body></html> 