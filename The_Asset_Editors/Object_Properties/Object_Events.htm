<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Object Events</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing the events system and the different events in an object"/>
  <meta name="rh-index-keywords" content="Objects - Events"/>
  <meta name="search-keywords" content="events,object events,events list"/>
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Object Events">
        <span>객체 이벤트</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>객체 이벤트</h1>
  <p>그렇다면 객체 <strong>이벤트는</strong> 무엇입니까? 기본적으로, 이것은 게임 루프에서 신중하게 프로그래밍 된 내용에 따라 상황이 발생하는 순간입니다. GameMaker Studio 2는 이러한 이벤트의주기와 함께 작동합니다. 방이 시작된 순간부터 완료 될 때까지 일련의 이벤트가 실행 또는 확인되는 모든 <strong>단계</strong> 에서 게임 루프가 실행되며 코드 또는 DnD를 배치하도록 선택할 수 있습니다. „¢ 이러한 이벤트에 반응하는 사물에서의 행동 (단계는 게임 시간의 순간이며, 실내 속도 설정에 의해 결정되며 <strong>프레임</strong> 이라고도 함).</p>
  <p>이벤트 및 코드를 사용하여 일반적인 객체 설정을 살펴 보겠습니다.</p>
  <p><img alt="Object Editor Events View" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Events.png"/>예제 객체에서 볼 수 있듯이 응답해야 할 이벤트가 많이 있지만 처음에는 객체를 만들 때이 목록이 비어 있으므로 필요한 이벤트와 해당 객체의 인스턴스가 수행 될 때 수행해야 할 이벤트를 결정해야합니다 이벤트가 트리거됩니다. 객체에 이벤트를 추가하려면 이벤트 목록 하단에있는 이벤트 <em>추가</em> 버튼을 누르면 다음 창이 나타납니다.</p>
  <p><img alt="Object Editor Events List" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_EventList.png"/>이것은 객체가 응답 할 수있는 모든 기본 이벤트 및 이벤트 범주의 목록이며 각 범주에는 동작을 세분화하기위한 하위 이벤트가 있습니다. 예를 들어, <strong>K <strong>어이</strong></strong> <strong>눌러</strong> 클릭하면 이벤트 범주 당신은 더 창은 개체가 <em>응답해야하는</em> 키 선택할 수있는 이벤트와 함께 팝업 얻을 것이다. 이벤트를 선택하면 코드 창 (또는 DnD ™ 작업 공간 창)이 연결되어 오른쪽에 열립니다. 이제 코드를 편집하여 객체에 해당 이벤트에 대한 특정 동작이나 반응을 제공 할 수 있습니다.</p>
  <p>마우스 오른쪽 버튼을 클릭 할 수 있습니다 다음 메뉴 옵션을 얻기 위해 객체에 추가 된 모든 이벤트에서</p>
  <p><img alt="Object Editor Events Menu" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_RMBMenu.png"/>이러한 옵션은 다음과 같습니다.</p>
  <ul class="colour">
    <li><strong>이벤트 추가</strong> -이벤트 목록에서 새 이벤트를 추가하십시오.</li>
    <li><strong>잘라 내기</strong> / <strong>복사</strong> / <strong>붙여 넣기 이벤트</strong> -선택한 이벤트를 잘라내거나 복사하거나 붙여 넣습니다. 표준 키보드 단축키도 사용할 수 있습니다. / + <span class="inline">X</span> , / + <span class="inline">C</span> / + <span class="inline">V.</span></li>
    <li><strong>이벤트 복제</strong> -선택한 이벤트를 복제합니다. 선택한 이벤트의 내용을 가져와 지정한 다른 이벤트에 복제합니다.</li>
    <li><strong>이벤트 변경</strong> - <strong>이벤트를</strong> 변경하십시오. 그러면 다른 이벤트 범주를 선택하라는 메시지가 표시되고 현재 이벤트의 내용이 선택되면 새 이벤트로 변경됩니다 (프로세스에서 원래 이벤트 제거).</li>
    <li><strong>끌어서 놓기 / 코드로 변환</strong> -코드를 사용하거나 끌어서 놓기 작업을 사용하여 프로젝트를 만들 때 선택한 방법을 사용하여 개체 이벤트가 생성됩니다. 이 옵션을 사용하면 프로젝트 유형에 관계없이 하나에서 다른 것으로 변환 할 수 있습니다.</li>
    <li><strong>이벤트 삭제</strong> - <strong>이벤트를</strong> 삭제합니다.</li>
  </ul>
  <p>이벤트를 제거 할 때 사용할 수 있습니다 + 여러 이벤트를 선택한 다음 모두 삭제합니다. 생성 한 각 <strong>개체</strong> 에는 <strong>개체 편집기</strong> 에서 추가 된 고유 한 이벤트 목록이 있습니다. 이러한 이벤트는 두 가지 범주로 분류됩니다.</p>
  <ul class="colour">
    <li>모든 단일 게임 단계를 실행하는 사람들</li>
    <li>인스턴스가 방 가장자리에 도달하거나 키보드 또는 마우스를 누르는 것과 같이 게임 이벤트에 의해 &quot;트리거&quot;되는 것.</li>
  </ul>
  <p>전체 이벤트 목록은 다음과 같습니다.</p>
  <p> </p>
  <p><img alt="Create Event Icon" src="../../assets/Images/Icons/Icon_Create.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">작성</span> <span data-close-text="true">작성</span></a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">이 이벤트는 객체의 인스턴스가 처음 생성 될 때 발생하며, 룸에 들어갈 때 룸 편집기를 통해 룸에 배치 된 인스턴스 내에서 가장 먼저 발생합니다. 즉,이 이벤트는 <a class="tooltip" title="변수는 프로그램 내에서 명명 된 값으로, 필요할 때마다 수정, 저장 및 표시 할 수 있습니다. 예를 들어 이름이 XYZ 인 정수 변수가 있고 값 10을 저장하는 경우 A = XYZ + 10과 같은 작업을 수행 할 수 있습니다. 그러면 XYZ가 10이고 변수 A의 값이 20으로 설정됩니다. 그것에 10을 더하고 있습니다. 연산자를 사용하여 변수 값을 변경할 수도 있으므로 XYZ = XYZ + 100을 수행하면 XYZ 변수의 값이 110으로 수정됩니다. 변수는 식별자와 다른 자산에 대한 참조를 저장하는 데 사용될 수도 있습니다.">변수</a> 를 초기화하고, <a href="../Timelines.htm">타임 라인을</a> 시작하고, <a href="../Paths.htm">경로</a> 등을 설정하고, 일반적으로 한 번만 또는 룸에서 인스턴스를 처음 만들 때만 수행해야하는 다른 작업을 수행하기에 이상적인 장소입니다. 객체에 객체 편집기 또는 룸 편집기에 <strong>객체 변수</strong> 또는 <strong>인스턴스 변수가</strong> 추가 된 경우 이러한 변수가 먼저 초기화 된 후 <strong>이벤트 생성</strong> 이 실행됩니다.</p>
    <p class="dropspot">룸 편집기의 <a href="../Room_Properties/Layer_Properties.htm">인스턴스 생성 코드</a> 에서 이벤트 생성에서 설정 한 항목을 수정할 수 있습니다. 이는 <a href="../Room_Properties/Layer_Properties.htm">인스턴스</a> 의 생성 이벤트 직후에 실행되며 <strong>인스턴스 변수</strong> 를 생성하거나 다음과 같이 추가 된 변수를 재정의하는 데 사용할 수 있습니다. 객체 변수 또는 실제 생성 이벤트</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Destroy Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true">파괴</span> <span data-close-text="true">파괴</span></a></p>
  <div class="droptext" data-targetname="drop-down9">
    <p class="dropspot">이 이벤트는 인스턴스가 파괴 될 때 실행되는 이벤트입니다. 객체에 행동을 추가 할 때 종종 간과되지만, 적을 죽일 때 폭발 또는 입자 효과를 생성하거나 방의 다른 부분에서 객체의 새로운 인스턴스를 다시 생성하는 등 매우 유용 할 수 있습니다. 점수에 점수를 추가하는 경우에도 마찬가지입니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Clean Up Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true">정리</span> <span data-close-text="true">정리</span></a></p>
  <div class="droptext" data-targetname="drop-down10">
    <p class="dropspot"><span>이 이벤트는 회의실에서 객체의 인스턴스를 제거하는 이벤트 후에 호출됩니다.</span> <span>따라서 다음과 같은 경우 트리거됩니다.</span></p>
    <ul class="dropspotlist">
      <li class="dropspot"><span>인스턴스가 파괴되었습니다</span></li>
      <li class="dropspot"><span>방 끝</span></li>
      <li class="dropspot"><span>게임이 끝난다</span></li>
    </ul>
    <p class="dropspot"><span>게임에있을 수있는 동적 리소스 (표면, 데이터 구조 등)를 &quot;정리&quot;하거나 인스턴스가 제거 될 때 <em>한 번</em> 수행해야하는 작업을 수행 할 수 있도록 설계되었습니다. 어떤 식 으로든 게임.</span></p>
    <p class="dropspot"><span>이 이벤트를 트리거 한 이벤트 후 <em>즉시</em> 호출하지만, 인스턴스가 실제로 <strong>현재 이벤트가 끝날 때까지</strong> 게임에서 제거되지 않습니다.</span> <span>예를 들어, Step Event에서 <span class="inline">instance_destroy ()</span> 를 호출하면 Destroy Event가 호출되고 Clean Up <em>Event가 완료되고 나머지 Step Event가 실행을 완료합니다</em> .</span> <span>즉, <span class="inline">instance_destroy ()를</span> 호출 한 후 보유한 모든 코드는 데이터 구조 나 코드에 필요한 기타 리소스를 정리 한 경우 여전히 실행되고 오류의 잠재적 원인이 될 수 있으므로 사용할 때주의해야합니다. 이번 행사.</span></p>
    <p> </p>
  </div>
  <p><img alt="Alarm Event Icon" src="../../assets/Images/Icons/Icon_Alarm.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true">알람</span> <span data-close-text="true">알람</span></a></p>
  <div class="droptext" data-targetname="drop-down11">
    <p class="dropspot">알람 범주는 인스턴스에서 설정할 수있는 가능한 각 알람마다 하나씩 12 개의 이벤트로 나뉩니다. 따라서 <em>알람 추가</em> 카테고리를 클릭하면 다음 창이 나타납니다.</p>
    <p class="dropspot"><img alt="Object Editor Alarm Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_AlarmEvents.png"/>여기서 생성하려는 알람을 선택하고, 일단 완료되면 알람을 이벤트 창에 추가하여 정상적으로 코드를 추가 할 수 있습니다. 그러나 경보 란 무엇입니까? 글쎄, 그것은 알람이 이전에 설정되지 않은 한 아무것도하지 않는 특별한 이벤트이며, 알람이 추가 된 작업이나 코드를 실행하기 전에 알람이 0으로 카운트 다운 될 때까지 기다립니다.</p>
    <p class="dropspot">알람이 0에 도달하고 코드를 실행하면 -1까지 카운트 다운되며 다시 설정 될 때까지 유지됩니다 (알람 값이 -1보다 큰지 여부를 확인하여 알람 값을 확인할 수 있음). 실행 중인지 아닌지). 따라서, 오브젝트 생성 이벤트에서 <span class="inline">alarm [0]</span> 을 30으로 설정했다고 가정하면, GameMaker Studio 2는 <span class="inline">알람 [0]</span> 이벤트에 배치 된 액션이나 코드를 실행하기 전에 30 개의 게임 단계를 카운트 다운합니다. 0에 알람을 설정하면 이벤트가 트리거 될 때, 알람 코드를 <em>실행하지</em> 않지만 코드가 생략하므로 경보가 즉시 -1로 설정되어 있습니다. 다음 단계를 실행하기 위해 알람이 필요한 경우 알람을 1로 설정해야합니다.</p>
    <p class="dropspot">이 기능은 정확한 순간에 동작을 설정할 수 있기 때문에 매우 유용 할 수 있으며 자체 이벤트에서 알람 설정을 중지 할 항목이 없어서 반복하도록 할 수도 있습니다. 몬스터가 있고 3 초마다 오른쪽으로 돌리기를 원한다고 상상해보십시오. 음, 이벤트 생성시 알람을 실내 속도 * 3으로 설정합니다 (실내 속도가 30이면 초당 30 단계이므로, 그 값에 3을 곱하면 3 초가됩니다!) 그리고 알람 이벤트에서 방향을 설정하는 코드 또는 동작과 알람을 다시 실내 속도 * 30으로 설정하는 동작 (또는 코드)을 갖게됩니다. 이런 식으로 특정 간격으로 만 발생하는 간단한 게임 루프를 설정할 수 있습니다.</p>
    <p class="dropspot">동작이나 코드가없는 알람은 카운트 다운 <em>되지 않습니다</em> . 그러나 주석 만 있고 코드 나 작업이 없어도 알람은 계속 카운트 다운되며 평소대로 설정 및 확인할 수 있습니다.</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Step Event Icon" src="../../assets/Images/Icons/Icon_Step.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true">단계</span> <span data-close-text="true">단계</span></a></p>
  <div class="droptext" data-targetname="drop-down12">
    <p class="dropspot">GameMaker Studio 2는 시간을 <strong>단계적</strong> 으로 분할하여 초당 몇 <strong>단계</strong> 가 필요한지를 정의합니다 (단계는 <strong>프레임</strong> 이라고도 함). 단일 단계는 기본적으로 게임이 실행되는 동안 필요에 따라 모든 이벤트를 확인하고 트리거하여 지속적으로 실행되는 루프이므로 <strong>단계 이벤트</strong> 는 인스턴스 동안 게임의 모든 단계마다 확인되는 이벤트입니다. 존재합니다.</p>
    <p class="dropspot">단계 이벤트는 실제로 아래에 설명 된 세 가지 하위 이벤트로 구성됩니다.</p>
    <p class="dropspot"><img alt="Object Editor Step Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Step.png"/>대부분의 경우 표준 단계 이벤트를 사용하는 것이 좋지만 때때로 코드 실행 및 시간을 조금 더 제어하여 <strong>Begin</strong> 및 <strong>End</strong> 단계 이벤트가 제공되기도합니다. 세 단계 모두 매 단계마다 점검되지만, GameMaker Studio 2 엔진에 대한 향후 업데이트가 다른 이벤트를 변경하더라도 순서는 변하지 않을 것입니다. 이는 이것이 항상 다른 일보다 먼저 무언가가 발생하도록하는 유일한 신뢰할 수있는 방법임을 의미합니다.</p>
    <p class="dropspot">스텝 이벤트는 무엇을 위해 사용될 수 있습니까? 지속적으로 실행해야하는 작업이나 코드에 사용할 수 있습니다. 예를 들어, 한 물체가 다른 물체를 따라야하는 경우, 우리가 따르는 물체를 향해 움직임의 방향을 조정하여 부드럽게 뒤로 움직일 수 있습니다. 그러나이 이벤트에주의를 기울이고 특히 게임 룸에 많은 오브젝트 인스턴스를 계획 할 경우 오브젝트의 단계 이벤트에서 많은 복잡한 조치를 수행하지 마십시오. 게임 속도가 느려질 수 있습니다. 많은 일이 알람에 배치되거나 항상 발생하지 않고 <strong>기타</strong> 이벤트 중 일부를 사용하여 트리거하도록 설정할 수 있습니다.</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Collision Event Icon" src="../../assets/Images/Icons/Icon_Collision.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true">충돌</span> <span data-close-text="true">충돌</span></a></p>
  <div class="droptext" data-targetname="drop-down13">
    <p class="dropspot">분명히 게임을 만들 때 객체의 두 개 이상의 인스턴스가 충돌 한 시점과 <strong>충돌 이벤트</strong> 가 발생하는 시점을 아는 것이 매우 중요합니다. 이것은 객체에 놓은 다음 충돌을 확인해야하는 다른 객체에 대해 지정하는 이벤트입니다.</p>
    <p class="dropspot">물리가 켜져 있지 않은 경우 이러한 충돌은 두 객체의 마스크를 기준으로 계산됩니다 (마스크는 스프라이트 속성 내에 정의되거나 객체 속성에 독립적으로 할당 될 수 있음). 충돌의 하나 또는 다른 인스턴스에 마스크가 할당되지 않은 경우 (또는 스프라이트 마스크가 아무것도 설정되지 않은 경우) <em>무언가를 그리는 경우에도</em> 충돌이 감지되지 않습니다.</p>
    <p class="dropspot"><strong>물리</strong> 를 <em>켜면</em> <strong>충돌에</strong> 대한 반응과 마찬가지로 물리 속성에서 객체에 대해 정의한 <strong>충돌 형태</strong> ( <em>Fixture</em> ) 유형을 기준으로 <strong>충돌</strong> 이 발생합니다. 즉, 충돌을 처리하기 위해 코드가 필요하지 않을 수도 있지만이 이벤트에는 충돌을 감지하기 위해 <em>최소한 주석이 있어야</em> 합니다.</p>
    <p class="dropspot">마지막으로, 충돌 이벤트가 트리거 될 때 모든 충돌이 이미 계산되어 사전에 할당되도록 충돌 이벤트가 트리거되기 전에 모든 충돌이 게임 단계 당 한 번 계산됩니다. 즉,이 이벤트에서 인스턴스를 생성 한 후 충돌을 확인하려고하면 게임 루프가 다음 <a class="tooltip" title="반복은 프로젝트 코드에서 일련의 작업을 통과하는 단일 단계입니다. 컴퓨터 프로그래밍에서 반복의 한 형태는 루프를 통하는 것입니다. 루프는 조건이 충족 될 때까지 특정 코드 세그먼트를 반복하여 계속 진행할 수 있습니다. 컴퓨터가 루프를 실행할 때마다 반복이라고합니다. 간단히 말해서 반복이란 특정 코드 조각을 반복해서 반복하여 특정 작업을 수행하는 프로세스입니다.">반복</a> 될 때까지 충돌이 감지되거나 해결되지 않습니다.</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Keyboard Icon" src="../../assets/Images/Icons/Icon_Keyboard.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">키보드,</span> <span data-close-text="true">키보드,</span></a> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">키보드 프레스,</span> <span data-close-text="true">키보드 프레스,</span></a> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">키보드 릴리스</span> <span data-close-text="true">키보드 릴리스</span></a></p>
  <div class="droptext" data-targetname="drop-down14">
    <p class="dropspot">플레이어가 게임의 다양한 측면을 제어하도록하는 것이 매우 중요하며,이를 위해 GameMaker Studio 2는 세 가지 주요 키보드 범주 중 하나에서 사용할 수있는 매우 포괄적 인 키보드 이벤트 목록을 제공합니다. 일반 키보드 범주의 경우 선택한 키를 누를 때마다 모든 단계가 연속적으로 트리거되는 반면, 키를 처음 눌렀거나 놓을 때 누르기 및 해제 범주 이벤트는 한 번만 트리거됩니다.</p>
    <p class="dropspot">키보드 이벤트는 실제로 키를 사용할 때마다 회의실의 모든 활성 인스턴스에서 트리거되지만 해당 특정 키에 대해 이벤트가 정의 된 이벤트 만 응답하고 모든 객체 및 인스턴스에서 여러 키보드 이벤트를 생성 할 수 있습니다. 게임이 실행되는 동안 해당 개체의</p>
    <p class="dropspot">키보드 이벤트를 객체에 추가하면 확인할 키를 지정할 수있는 키보드 하위 이벤트 메뉴가 표시됩니다.</p>
    <p class="dropspot"><img alt="Object Editor Keyboard Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Keyboard.png"/>그것들의 대부분은 상당히 분명하지만 섹션을 간단히 살펴 보겠습니다. 맨 위에 화살표 키와 가장 많이 사용되는 수정 자 키, 키보드의 나머지 부분이 있습니다 (추가 하위 섹션으로 분할되어 더 많은 하위 섹션으로 분할됩니다) 필요한 정확한 키 또는 ) 그리고 마지막으로 두 개의 매우 특별한 하위 이벤트 인 <strong>No Key</strong> 및 <strong>Any Key가</strong> 있습니다. 이름에서 알 수있는 바와 같이, 이러한 하위 이벤트는 그 <em>어떤</em> 키를 누를되지 않은 경우 또는 <em>임의의</em> 키를 누르면 확인합니다. 숫자 키패드의 키는 숫자 <strong>잠금</strong> 이 활성화 된 경우에만 해당하는 이벤트를 생성합니다.</p>
    <p class="dropspot">키보드의 <strong>Press</strong> and <strong>Release</strong> 이벤트는 일반 키보드 이벤트와 거의 동일하지만 연속적으로 트리거되는 대신 한 번만 트리거됩니다. 키보드가 키를 눌렀 음을 처음으로 등록하면 <strong>키보드 눌림</strong> 이벤트 (일반 키보드 이벤트)가 생성되고, 키가 더 이상 감지되지 않은 후 눌린 것으로 처음 감지되면 단일 <strong>키보드</strong> 가 트리거됩니다. <strong>출시</strong> 이벤트.</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt=" Mouse Icon" height="16" src="../../assets/Images/Icons/Icon_MouseEvent.png" width="16"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true">마우스</span> <span data-close-text="true">마우스</span></a></p>
  <div class="droptext" data-targetname="drop-down16">
    <p class="dropspot">마우스 범주는 일련의 이벤트로 구분되어 선택되어 게임에서 일어나는 일을보다 정확하게 제어 할 수 있습니다. 다음은 이러한 이벤트가 정확히 무엇인지 확인할 수 있습니다.</p>
    <p class="dropspot"><img alt="Object Editor Mouse Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Mouse.png"/>왼쪽 , 권리 그리고 중간 버튼 이벤트 ( <strong>보통</strong> , <strong>눌림</strong> 또는 <strong>놓음</strong> )는 모두 이벤트가있는 인스턴스의 마스크에서 작동합니다. 이것이 의미하는 것은 GameMaker Studio 2가 마우스 이벤트가있는 인스턴스의 충돌 마스크에 대해 해당 버튼을 사용할 때 회의실에서 마우스의 위치를 ​​확인한다는 것입니다. 인스턴스 <a class="tooltip" title="스프라이트의 경우 경계 상자는 충돌이 처음 감지되는 영역의 가장자리에 지정된 이름이며 적용되는 스프라이트와 크기가 같지 않아도됩니다. 시퀀스의 경우 경계 상자는 하나 이상의 자산이 캔버스에서 차지하는 전체 공간의 바깥 쪽 가장자리입니다.">경계 상자에</a> &quot;충돌&quot;이있는 경우 이벤트가 트리거되므로 이러한 이벤트가있는 인스턴스에 유효한 충돌 마스크가 포함 된 스프라이트가 있거나 개체 속성에서 마스크 스프라이트가 선택되어 있는지 확인하십시오. 이름에서 알 수 있듯이 이러한 이벤트는 선택한 마우스 버튼을 처음 눌렀거나 놓을 때 한 번 또는 버튼이 유지되는 동안 각 단계가 연속적으로 트리거됩니다.</p>
    <p class="dropspot">마우스 입장 및 탈퇴 이벤트는 버튼 마스크와 비슷하지만 인스턴스 마스크를 사용하여 작동하지만 이번에는 마우스가 인스턴스를 처음 &quot;입력&quot;(터치) 할 때 또는 &quot; 인스턴스를 떠납니다. 그러나 이러한 이벤트는 연속적이지 않으며 마우스가 개체에 들어 오거나 개체를 떠날 때마다 한 번만 트리거되므로 예를 들어, 마우스가 마우스를 가져 가기 전에 마우스를 올리면 변경되어야하는 버튼을 만드는 이상적인 방법입니다. 마우스를 제거하면 정상입니다.</p>
    <p class="dropspot">마지막으로 마우스 이벤트에 대한 또 다른 섹션 인 <strong>Global Mouse</strong> 라고합니다. 이 하위 메뉴에서는 마우스가 위에 있거나 근처에있을 때에도 마우스 이벤트를 기록하기위한 이벤트를 선택할 수 있습니다. 이는 <em>모든</em> 인스턴스에 대해 생성되는 이벤트이며 지정된 이벤트에 대해 정의 된 동작 또는 코드가있는 경우 게임 룸 내에서 마우스의 위치에 관계없이 실행됩니다.</p>
    <p class="dropspot">모바일 또는 터치 스크린 장치에서 마우스 왼쪽 버튼 터치 스크린에서 손가락 탭과 마우스 오른쪽 버튼을 확인하는 데에도 사용할 수 있습니다 화면을 두 번 탭하면 트리거됩니다 (이 동작은 코드를 사용하여 변경할 수 있음).</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Gestures Icon" src="../../assets/Images/Icons/Icon_Gesture.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true">제스처</span> <span data-close-text="true">제스처</span></a></p>
  <div class="droptext" data-targetname="drop-down18">
    <p class="dropspot">이 이벤트는 사용자가 화면을 터치하거나 (모바일에서) 마우스를 클릭하고 움직일 때 (다른 모든 플랫폼에서) 발생하는 이벤트입니다. 이러한 이벤트는 일반 버전과 <em>전역</em> 버전이 있다는 점에서 마우스 이벤트와 유사합니다. 이러한 이벤트의 일반 버전은 스프라이트 (또는 마스크)가있는 인스턴스에서 터치가 발생하고 터치가 <a class="tooltip" title="스프라이트의 경우 경계 상자는 충돌이 처음 감지되는 영역의 가장자리에 지정된 이름이며 적용되는 스프라이트와 크기가 같지 않아도됩니다. 시퀀스의 경우 경계 상자는 하나 이상의 자산이 캔버스에서 차지하는 전체 공간의 바깥 쪽 가장자리입니다.">경계 상자</a> 내에서 발생하는 경우에만 트리거됩니다. 그러나 이러한 이벤트의 글로벌 버전은 사용자가 화면의 <em>아무 곳이나</em> 터치 <em>하면</em> 트리거됩니다.</p>
    <p class="dropspot">제스처 이벤트는 다음을 감지합니다.</p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>탭</strong> -사용자가 클릭 / 터치하고 빠르게 놓을 때</li>
      <li class="dropspot"><strong>드래그</strong> -사용자가 터치 / 클릭하고 유지하면 손가락 / 커서를 움직입니다.</li>
      <li class="dropspot"><strong>긋기</strong> -사용자가 한 번의 움직임으로 터치 / 클릭을 움직일 때</li>
      <li class="dropspot"><strong>핀치</strong> -사용자가 화면에 두 손가락을 가지고있을 때 손가락을 함께 움직이거나 분리 할 때</li>
      <li class="dropspot"><strong>회전</strong> -사용자가 화면에 두 손가락을 가지고 있고 점을 중심으로 회전 할 때</li>
    </ul>
    <p class="dropspot"><img alt="Object Editor Gesture Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png"/>다른 이벤트에는 항상 &quot; <span class="inline">event_data</span> &quot;맵이라는 DS 맵이 포함되며 여기에는 터치 / 클릭 위치 및 이동에 대한 데이터와 여러 키 / 값 쌍이 포함됩니다. 사용 가능한 모든 하위 이벤트 및 작동 방식에 대한 자세한 내용은 다음 섹션을 참조하십시오.</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Gesture_Events.htm">제스처 이벤트</a></li>
    </ul>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Other Icon" height="16" src="../../assets/Images/Icons/Icon_Other.png" width="16"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down19" href="#"><span data-open-text="true">기타</span> <span data-close-text="true">기타</span></a></p>
  <div class="droptext" data-targetname="drop-down19">
    <p class="dropspot">GameMaker Studio 2로 게임을 만들 때 사용할 특별한 이벤트가 많이 있으며 기타 이벤트 아래에 대부분 그룹화되어 있으며이를 선택할 때 나타나는 하위 이벤트의 팝업 메뉴에서 선택할 수 있습니다. 다른 모든 이벤트의 이미지는 다음과 같습니다.</p>
    <p class="dropspot"><img alt="Object Editor Other Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_OtherEvents.png"/>위 이미지에 나열된 각 이벤트에 대한 자세한 내용은 다음 섹션을 참조하십시오.</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Other_Events.htm">다른 이벤트</a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Draw Event" src="../../assets/Images/Icons/Icon_Draw.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down20" href="#"><span data-open-text="true">무승부</span> <span data-close-text="true">무승부</span></a></p>
  <div class="droptext" data-targetname="drop-down20">
    <p class="dropspot">이 이벤트 범주는 게임을 실행할 때 화면에 표시되는 내용을 제어하는 ​​범주이며 다양한 신중한 이벤트로 나뉩니다.</p>
    <p class="dropspot"><img alt="Draw Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png"/>보시다시피, draw 이벤트 범주에는 여러 가지 다른 이벤트 유형이 있습니다. <strong>Draw Begin</strong> , <strong>Draw</strong> 및 <strong>Draw End</strong> 는 아마도 가장 많이 사용하는 &quot;표준&quot;드로우 이벤트입니다. 기본 Draw 이벤트는 스프라이트의 유무에 관계없이 모든 인스턴스에 대해 항상 호출됩니다. 인스턴스를 보이지 않는 것으로 플래그를 지정하면 이벤트가 트리거되지 않습니다 (게임 로직이있는 경우이를 명심하십시오) 보이지 않는 객체의 그리기 이벤트에서 실행되지 않습니다). 메인 드로우 이벤트는 이벤트에 코드 나 액션이 없을 때 (예 : 오브젝트의 이벤트 목록에 추가하지 않은 경우) GameMaker Studio 2 기본이 인스턴스 스프라이트를 그리는 곳이기도합니다. 기본 드로잉은 인스턴스와 관련된 스프라이트를 사용하며 코드에서 설정된 변환이나 적용된 액션으로 그 스프라이트를 그립니다.</p>
    <p class="dropspot">표준 추첨 이벤트 <strong>그리기 GUI 이벤트</strong> <em>전에</em> 그릴과 <strong>전</strong> <em>사이에</em> (즉 관계없이 층, <strong>그리기 GUI 이벤트의</strong> 아래에 그려진이 이벤트에 그려진 모든 것이 의미 <strong>그리기</strong> 및 <strong>포스트</strong> 이벤트를 <strong>그리기</strong> : 무엇이라도 그려 Draw GUI 이벤트는 레이어 순서와 상관없이 항상 일반 그리기 이벤트에서 그린 항목 위에 그려집니다.</p>
    <p class="dropspot">위의 이벤트는 Draw 이벤트의 작동 방식에 대한 개요이지만 사용 가능한 모든 하위 이벤트에 대한 자세한 내용은 다음 섹션을 참조하십시오.</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Draw_Events.htm">추첨 이벤트</a></li>
    </ul>
    <p> </p>
    <p> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Async Event" src="../../assets/Images/Icons/Icon_Async.png"/><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down21" href="#"><span data-open-text="true">비동기식</span> <span data-close-text="true">비동기</span></a></p>
  <div class="droptext" data-targetname="drop-down21">
    <p class="dropspot">이 이벤트 범주는 포함 된 이벤트가 기본적으로 GameMaker Studio 2에 의해 트리거되는 것이 아니라 파일로드 또는 웹 서버의 응답과 같은 다른 작업이 끝날 때 특별하다는 점에서 특별합니다. 범주는 다음과 같은 이벤트로 나뉩니다.</p>
    <p class="dropspot"><img alt="Object Editor Asynchronous Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Async.png"/></p>
    <p class="dropspot">자, 이미지 파일을 GameMaker Studio 2에 추가하고 싶다고 가정 해 봅시다. 글쎄, 객체의 다른 이벤트 (아마도 Create Event)에서이 코드를 코딩하고 대기 중 (예를 들어) 폴링 중에 해당 객체가 로딩 바를 그리도록합니다. 파일이로드되었음을 GameMaker Studio 2에 알리는 <a class="tooltip" title="콜백은 단순히 실행 된 다음 수행 된 작업을 모두 마쳤을 때 다른 함수 (또는 코드 블록)를 트리거하는 함수입니다. 예를 들어, sprite_add () 함수는 스프라이트가로드 될 때 비동기 이미지로드 이벤트에서 콜백을 트리거합니다.">콜백</a> 까지 적절한 비동기 이벤트. 그런 다음이 이벤트에서 반환 된 데이터를 사용하여 탈의실과 같은 다른 작업을 수행하거나 품목을 구입할 수 있습니다.</p>
    <p class="dropspot">위의 내용은 단순히 비동기 이벤트의 작동 방식에 대한 개요이지만 사용 가능한 모든 하위 이벤트에 대한 자세한 내용은 다음 섹션을 참조하십시오.</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Async_Events.htm">비동기 이벤트 목록</a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>또한 이벤트 이름을 지정하거나 최소한 이벤트 편집기에서 이벤트 옆에 표시되는 간단한 설명 텍스트를 제공 할 수 있습니다. 이를 위해 이벤트 코드 편집기의 첫 번째 행에 다음을 추가하십시오.</p>
  <p class="code">/// @description Your text here</p>
  <p>예를 들어, <strong>알람</strong> 이벤트에서 이와 같은 것을 가질 수 있습니다.</p>
  <p class="code">/// @description This is the AI Fight alarm</p>
  <p>이제 이벤트 편집기에 다음이 표시됩니다.</p>
  <p><img alt="Object Editor Named Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_NamedEvents.png"/></p>
  <p>DnD ™ 사용자의 경우 주석을 추가하려면 <strong>코드 실행</strong> 조치를 사용해야합니다.이 조치는 이벤트에 대한 조치의 맨 위에 배치해야합니다. 이 작업을 추가하면 위에 표시된 것과 같은 코드 줄을 지정하여 이벤트 이름을 지정합니다. 예 :</p>
  <p><img alt="Naming An Event In DnD" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_DnD_NamedEvents.png"/>위의 이벤트 및 일반적인 이벤트 실행 순서에 대한 자세한 내용은 다음 섹션을 참조하십시오.</p>
  <ul class="colour">
    <li><a href="Event_Order.htm">이벤트 순서</a></li>
    <li><a href="Other_Events.htm">다른 이벤트</a></li>
    <li><a href="Draw_Events.htm">추첨 이벤트</a></li>
    <li><a href="Async_Events.htm">비동기 이벤트</a></li>
    <li><a href="Gesture_Events.htm">제스처 이벤트</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('The_Asset_Editors/Object_Properties/Object_Events.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">목록: <a href="../Objects.htm">객체 편집기</a></div>
        <div style="float:right">다음: 
      <div class="clear">
<div style="float:left"> 뒤로 : <a href="../Objects.htm">객체 편집기</a></a></div>
        <div style="float:right">Next: Parent Objects</div>
        <div style="float:right">Next: Parent Objects</div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Object Events
Named Events
-->
  <!-- TAGS
object_events
-->

</body></html> 