<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "5.2.1.1.0_12";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Steam</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing the Steam async event."/>
  <meta name="rh-index-keywords" content="Objects - Async Steam Event"/>
  <meta name="search-keywords" content="Steam,ev_web_steam,ugc_item_installed,ugc_item_subscribed,ugc_item_unsubscribed"/>
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Steam">
        <span>증기</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>증기</h1>
  <p>이 이벤트는 일부 <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam.htm">Steam API</a> 함수의 <a class="tooltip" title="콜백은 단순히 실행 된 다음 수행 된 작업을 모두 마쳤을 때 다른 함수 (또는 코드 블록)를 트리거하는 함수입니다. 예를 들어, sprite_add () 함수는 스프라이트가로드 될 때 비동기 이미지로드 이벤트에서 콜백을 트리거합니다.">콜백에</a> 의해서만 트리거 될 수 있으며 이벤트를 트리거 한 함수의 <a class="tooltip" title="콜백은 단순히 실행 된 다음 수행 된 작업을 모두 마쳤을 때 다른 함수 (또는 코드 블록)를 트리거하는 함수입니다. 예를 들어, sprite_add () 함수는 스프라이트가로드 될 때 비동기 이미지로드 이벤트에서 콜백을 트리거합니다.">콜백</a> 에 따라 다른 키 / 값 쌍을 포함하는 변수 <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load에</span></a> 저장된 <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS 맵</a> 을 반환합니다. 맵에는 항상 &quot; <span class="inline">event_type</span> &quot;키가 포함되며, 이벤트를 트리거 한 함수 유형을 찾고 해당 코드를 변경하기 위해 구문 분석 할 수 있습니다.</p>
  <p>이 이벤트를 트리거하는 함수를 호출 할 때 async_load 맵에는 항상 구문 분석 할 수있는 ID 키가 포함되므로 변수에 저장하고 확인해야하는 고유 한 비동기 ID 값을 생성합니다. 올바른 이벤트. 실제로 비동기 응답을 생성하는 데 사용 된 Steam 기능에 관계없이 맵에는 항상 다음 키가 있습니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">id</span> &quot;-이벤트를 트리거 한 함수가 리턴 한 비동기 ID</li>
    <li>&quot; <span class="inline">result</span> &quot;-작업 결과 (실제 값). 이것은 GML 상수 <span class="inline">ugc_result_success</span> 또는 다른 실수입니다. 이 상수를 확인하여 호출이 성공했는지 확인하고 다른 값이 리턴되면 무언가 올바르게 작동하지 않았는지 확인해야합니다. 반환 된 나머지 가능한 값은 Steam &quot; <span class="inline">EResult</span> &quot;값의 결과로 표시되며 SDK 헤더에 <span class="inline">steamclientpublic.h</span> 가 표시되어 가능한 모든 값이 표시됩니다.</li>
    <li>&quot; <span class="inline">event_type</span> &quot;-이벤트 유형을 나타내는 문자열 (자세한 내용은 아래 참조)</li>
  </ul>
  <p> </p>
  <h2>데이터 업로드</h2>
  <p>리더 보드 ( <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_upload_score.htm"><span class="inline">steam_upload_score ()</span></a> 또는 <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_upload_score_buffer.htm"><span class="inline">steam_upload_score_buffer ()</span></a> )를 업로드하기 위해 Steam 함수를 사용할 때 반환 된 DS 맵은 다음과 같은 키 / 값 쌍을 갖습니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">event_type</span> &quot;-이 키는 &quot; <span class="inline">leaderboard_upload</span> &quot;값을 보유합니다</li>
    <li>&quot; <span class="inline">post_id</span> &quot;-이 키는 업로드 호출 함수가 반환 한 ID 값과 일치해야합니다.</li>
    <li>&quot; <span class="inline">lb_name</span> &quot;-이 키에는 게시 된 리더 보드의 이름이 있습니다.</li>
    <li>&quot; <span class="inline">성공</span> &quot;-게시물이 성공하면 1이되고 0은 실패합니다.</li>
    <li>&quot; <span class="inline">업데이트</span> &quot;-순위표 점수가 실제로 업데이트 된 경우 1이되고 (예 : 새 점수가 높을 경우) 0이 아닌 경우</li>
    <li>&quot; <span class="inline">score</span> &quot;-이 키는 게시 된 점수를 보유합니다</li>
  </ul>
  <p>점수 업로드 기능에 대한 페이지에서이 예제를 볼 수 있습니다.</p>
  <p> </p>
  <h2>리더 보드 다운로드</h2>
  <p>리더 보드 ( <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_scores.htm"><span class="inline">steam_download_scores ()</span></a> , <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_scores_around_user.htm"><span class="inline">steam_download_scores_around_user ()</span></a> 또는 <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_Leaderboards/steam_download_friends_scores.htm"><span class="inline">steam_download_friends_scores ()</span></a> )를 다운로드하기 위해 Steam 함수를 사용할 때 반환 된 DS 맵에는 다음과 같은 키 / 값 쌍이 있습니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">event_type</span> &quot;-이 키는 &quot; <span class="inline">leaderboard_download</span> &quot;값을 보유합니다</li>
    <li>&quot; <span class="inline">id</span> &quot;-이 키는 다운로드 호출 함수가 반환 한 ID 값과 일치해야합니다.</li>
    <li>&quot; <span class="inline">status</span> &quot;-콜백의 상태로, -1은 실패이거나 결과가 반환되지 않았으며 0은 성공입니다.</li>
    <li>&quot; <span class="inline">lb_name</span> &quot;-이 키에는 게시 된 리더 보드의 이름이 있습니다.</li>
    <li>&quot; <span class="inline">numEntries</span> &quot;-반환되는 리더 보드 데이터의 &quot;행&quot;수입니다.</li>
    <li>&quot; <span class="inline">entries</span> &quot;-키 &quot; <span class="inline">default</span> &quot;(결과가 포함되지 않음을 나타냄) 또는 키 &quot; <span class="inline">entries</span> &quot;를 포함하는 다른 DS 맵이 포함 된 JSON 객체 문자열입니다. 그러면 값을 얻을 수 있습니다. &quot; <span class="inline">entry</span> &quot;에 대한이 반환 값은 순위표의 각 순위가 포함 된 <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Lists/DS_Lists.htm">DS 목록</a> 이되며, 목록의 각 항목 자체는 &quot; <span class="inline">name</span> &quot;, &quot; <span class="inline">score</span> &quot;및 &quot; <span class="inline">rank</span> &quot;키를 포함하는 다른 DS Map을 참조합니다. 업로드에 사용 된 기능에 따라 &quot; <span class="inline">data</span> &quot;키를 포함 할 수도 있습니다.</li>
  </ul>
  <p>주어진 순위표에 상위 10 개 순위를 요청하고 결과를 Steam Async Event에서 파싱하여 점수 데이터 다운로드가 작동하는 방법의 예를 보여줍니다 (업로드 예는 해당 기능 페이지 참조). 시작하려면 다음 코드로 점수를 요청해야합니다.</p>
  <p class="code">score_get = steam_download_scores(&quot;Game Scores&quot;, 1, 10);</p>
  <p>그러면 리더 보드 &quot;Game Scores&quot;에서 점수를 요청하고 변수 &quot; <span class="inline">score_get</span> &quot;에 요청의 비동기 ID를 저장하여 Steam Server에 요청을 보냅니다. 그런 다음 <strong>Steam 비동기 이벤트</strong> 에서 다음과 같은 방식으로 처리됩니다.</p>
  <p class="code">var async_id = ds_map_find_value(async_load, &quot;id&quot;);<br/> if async_id == score_get<br/>    {<br/>    var entries = ds_map_find_value(async_load, &quot;entries&quot;);<br/>    var map = json_decode(entries);<br/>    if ds_map_exists(map, &quot;default&quot;)<br/>        {<br/>       ds_map_destroy(map);<br/>       exit;<br/>       }<br/>    else<br/>       {<br/>       var list = ds_map_find_value(map, &quot;entries&quot;);<br/>       var len = ds_list_size(list);<br/>       var entry;<br/>       for(var i =
    0; i &lt; len; i++;)<br/>          {<br/>          entry = ds_list_find_value(list, i );<br/>          steam_name[i] = ds_map_find_value(entry, &quot;name&quot;);<br/>          steam_score[i] = ds_map_find_value(entry, &quot;score&quot;);<br/>    steam_rank[i]
    = ds_map_find_value(entry, &quot;rank&quot;);<br/>          if (ds_map_exists(entry, &quot;data&quot;))<br/>             {<br/>             var data = ds_map_find_value(entry, &quot;data&quot;);<br/>             var buffId = buffer_base64_decode(data);<br/>              var message = buffer_read(buffId, buffer_string);<br/>             show_debug_message( &quot; -- attached message: &quot; + string(message));<br/>             buffer_delete(buffId);<br/>             }<br/>          ds_map_destroy(entry);<br/>           }<br/>       ds_list_destroy(list)<br/>       }<br/>    ds_map_destroy(map)<br/>    }</p>
  <p>여기서하는 일은 먼저 특수한 async_load 맵의 &quot; <span class="inline">id</span> &quot;키를 확인하는 것입니다. 이 값이 원래 콜백 함수의 값 ( &quot; <span class="inline">score_get</span> &quot;변수에 저장 됨)의 값과 동일한 경우 데이터를 계속 처리합니다. 가장 먼저 할 일은 리더 보드 데이터를 포함하는 JSON 객체를 포함하는 &quot; <span class="inline">entry</span> &quot;키에 대한 <span class="inline">async_load</span> DS Map을 구문 분석하는 것입니다. 그런 다음이 JSON 객체가 다른 DS 맵으로 디코딩되고 ( <a href="../../../GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><span class="inline">json_decode ()</span></a> 참조 <a href="../../../GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><span class="inline">)</span></a> 이 새 맵 ID는 변수 &quot; <span class="inline">map</span> &quot;에 저장됩니다.</p>
  <p>이 맵은 &quot; <span class="inline">default</span> &quot;키에 대해 점검되며, 발견되면 맵이 삭제되고 이벤트가 종료됩니다. &quot; <span class="inline">기본</span> &quot;키가 없으면 코드는지도를 구문 분석하여 먼저 DS 맵의 &quot; <span class="inline">항목</span> &quot;키에서 DS 목록을 추출한 다음지도의 각 항목을 반복하여 리더 보드에 대한 필요한 정보를 추출합니다. 각 항목의 <span class="inline">이름</span> , <span class="inline">점수</span> 및 <span class="inline">순위</span> 가 포함 된 다른 DS 맵을 가져 오려면 list를 입력하십시오. 이러한 값은 배열에 저장되고 추가 &quot; <span class="inline">데이터</span> &quot;키가 있는지 확인합니다. 이 경우 (즉, 추가 데이터 패키지로 점수가 업로드 된 경우) 버퍼를 파기 한 다음 맵을 계속 파괴하기 전에이를 파싱하여 디버깅을 위해 컴파일러 콘솔로 보냅니다. &quot; <span class="inline">data</span> &quot;키가 포함 된 경우 올바르게 읽으려면 <a href="../../../GameMaker_Language/GML_Reference/Buffers/buffer_base64_decode.htm"><span class="inline">buffer_base64_decode ()</span></a> 함수를 사용하여 디코딩해야합니다.</p>
  <p>루프가 완료되면 항목 목록은 가져온 맵과 같이 삭제됩니다. <span class="inline">async_load</span> DS 맵은 GameMaker Studio 2에서 처리하므로 <span class="inline">async_load</span> DS 맵을 삭제할 필요가 없습니다.</p>
  <p> </p>
  <h2>UGC 다운로드 (사용자 생성 컨텐츠)</h2>
  <p><a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_UGC/Steam_UGC.htm">UGC (User Generated Content)</a> 를 다운로드하기 위해 Steam 기능을 사용할 때 다수의 기능이이 이벤트를 트리거합니다. 그러나 각 함수는 서로 다른 키 / 값 쌍을 사용하여 <span class="inline">async_load</span> DS Map을 생성합니다 (항상 일반 &quot; <span class="inline">id</span> &quot;, &quot; <span class="inline">result</span> &quot;및 &quot; <span class="inline">event_type</span> &quot;키를 포함하지만)에는 사용중인 함수와 관련된 페이지를 참조하십시오. 세부 사항 및 예.</p>
  <p> </p>
  <h2>고유 한 UGC 이벤트</h2>
  <p>사용자가 게임 외부의 항목을 구독 할 때 Steam 비동기 이벤트가 트리거 될 수도 있습니다. 예를 들어, 브라우저를 탭하고 새 항목을 구독 한 다음 게임으로 다시 탭합니다. 이 경우 <span class="inline">async_load</span> 맵에는 다음 세부 사항 만 포함 <span class="inline">되며이</span> 페이지의 맨 위에 나열된 기본값은 없습니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">event_type</span> &quot;-이 키는 상수 <span class="inline">ugc_item_installed를</span> 유지합니다.</li>
    <li>&quot; <span class="inline">published_file_id</span> &quot;-새로 설치된 UGC 항목의 ID ( <a href="../../../GameMaker_Language/GML_Reference/Steam/Steam_UGC/steam_ugc_get_item_update_info.htm"><span class="inline">steam_ugc_get_item_install_info ()</span></a> 함수를 사용하여 설치된 항목의 경로를 가져올 수 있음)</li>
  </ul>
  <p>워크샵 항목이 앱 내에서 또는 워크샵 브라우저에서 외부로 구독 될 때 Steam Async 이벤트가 트리거 될 수도 있습니다.이 경우 <span class="inline">async_load</span> 맵에는 다음 키 / 값 쌍이 포함됩니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">event_type</span> &quot;-이 키는 상수 <span class="inline">ugc_item_subscribed를</span> 보유합니다.</li>
    <li>&quot; <span class="inline">publish_file_id</span> &quot;:이 키에는 새로 구독 한 항목의 게시 된 파일 ID가 있습니다.</li>
  </ul>
  <p>DS 맵이 다음을 보유한 상태에서 모든 항목을 구독 취소하면 이벤트가 트리거됩니다.</p>
  <ul class="colour">
    <li>&quot; <span class="inline">event_type</span> &quot;-이 키는 상수 <span class="inline">ugc_item_unsubscribed를</span> 보유합니다.</li>
    <li>&quot; <span class="inline">published_file_id</span> &quot;:이 키에는 구독 취소 된 항목의 게시 된 파일 ID가 있습니다.</li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('The_Asset_Editors/Object_Properties/Async_Events/Steam.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="../Async_Events.htm">비동기 이벤트</a></div>
        <div style="float:right">다음: <a href="System.htm">체계</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Asynchronous Steam Event
async_load
ugc_result_success
ugc_item_installed
ev_web_steam
ugc_item_subscribed
ugc_item_unsubscribed
-->
  <!-- TAGS
ev_web_steam
-->

</body></html> 