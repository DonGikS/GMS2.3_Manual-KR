<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.1.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Creating An Extension</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page detailing how to create a generic extension"/>
  <meta name="rh-index-keywords" content="Extensions - Creating An Extension"/>
  <meta name="search-keywords" content="creating extensions"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Creating An Extension">
        <span>확장 만들기</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>이 페이지를 전체 내용으로 보려면 여기를 클릭하십시오</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>확장 만들기</h1>
  <p>To create an extension you first need to right click <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png"/>Asset Browser에서 <strong>Create Extension을</strong> 선택합니다. 기본 확장 등록 정보 창이 열립니다.</p>
  <p><img alt="Extension Properties" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions.png"/>이제 필요한 파일과 기능을 추가 할 준비가되었습니다. 여기에는 확장명에 이름을 지정할 수도 있습니다 (일반적인 문자 / 숫자 규칙에 따라 밑줄 &quot;_&quot;제외). 원하는 경우 내선 번호 버전을 설정할 수도 있습니다.</p>
  <p>To add a file to the new extension you need to click the menu icon <img alt="Estension Options Icon" class="icon" src="../../assets/Images/Icons/Icon_ExtensionMenu.png"/>플레이스 홀더 파일 또는 대상 플랫폼에 필요한 실제 파일을 선택하십시오.</p>
  <p class="dropspot"><img alt="Add Files To An Extension" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Files.png"/></p>
  <p>&quot;일반&quot;플레이스 홀더는 특정 플랫폼에 필요한 파일 (예 : <span class="inline">DLL</span> 또는 <span class="inline">SO</span> 파일 없음)을 제외한 모든 유형의 파일 일 수 있으며 &quot;링커&quot;파일을 제외하고는 연결되지 않습니다. 주어진 확장명을 가진 함수 또는 상수의 집합 (일반적으로 iOS 및 Android 확장에만 사용되며 해당 대상에 대한 아래 섹션에서 설명). 보다 구체적인 사용을 위해 &quot;GML&quot;및 &quot;JS&quot;플레이스 홀더 파일을 추가 할 수도 있습니다.</p>
  <p>일반적으로 당신은 당신이 그들이있는 대상 플랫폼에 따라 다음 파일 중 하나를 추가하려면 <em>추가 파일 옵션을</em> 선택 할 수 있도록, iOS 및 Android를위한 구축하지 않으면 자리를 사용할 필요가 없습니다 :</p>
  <ul class="colour">
    <li class="dropspot"><span class="inline">.gml</span> : GameMaker 언어로만 만든 파일이며 모든 플랫폼과 호환됩니다.</li>
    <li class="dropspot"><span class="inline">.js</span> : 이것은 JavaScript 확장 형식이며 JS 대상 모듈 (HTML5) 과만 호환됩니다.</li>
    <li class="dropspot"><span class="inline">.dll</span> :이 동적 링크 라이브러리 확장 형식이며 Windows, UWP 및 Xbox One 대상과 만 호환됩니다 (각 대상은 해당 사양과 호환되는 다른 <span class="inline">* .dll</span> 파일이 필요합니다).</li>
    <li class="dropspot"><span class="inline">.dylib</span> : DLL과 동등한 Mac 버전이며 Mac 대상 (iOS는 <span class="inline">아님) 과만</span> 호환됩니다.</li>
    <li class="dropspot"><span class="inline">.so</span> : 이것은 DLL과 동등한 Linux이며 Ubuntu (Linux) 대상과 만 호환됩니다.</li>
    <li class="dropspot"><span class="inline">.prx</span> : PS4 대상 기능을 추가하기위한 파일 형식입니다 (각 대상은 해당 사양과 호환되는 다른 <span class="inline">* .prx</span> 파일이 필요합니다).</li>
  </ul>
  <p><strong>Android</strong> 나 <strong>iOS 용</strong> 파일 형식이 없다는 것은 알 수 있습니다. 설정이 약간 다르기 때문입니다. 아래에서 설정 방법에 대한 설명을 찾을 수 있지만 먼저 모든 대상 플랫폼에 대해 프로세스가 동일하므로 대상 플랫폼 중 하나에 대한 일반 GML 확장을 만드는 방법을 살펴 보겠습니다.</p>
  <p>시작하려면 사용할 파일을 만들어야합니다. GML 확장의 경우이 파일은 텍스트 파일 ( <span class="inline">.gml</span> 확장명으로 저장 됨)이며 다음과 같이 형식화됩니다.</p>
  <p class="code">#define c_alice_blue<br/> return make_color_rgb(240,248,255);<br/>
    <br/>
    <br/> #define instance_create_colour<br/> var i = instance_create_layer(argument0, argument1, argument2);<br/> with (i)<br/>     {<br/>     image_blend = argument3;<br/>     }<br/> return i;</p>
  <p>보시다시피 위의 예에서 두 함수를 정의하는 데 사용되는 <span class="inline">#define</span> 호출로 각 섹션을 시작합니다. 나중에 추가 될 함수에 인수 필드를 제공 할 필요는 없습니다. 간단히 정의한 다음 함수 이름을 사용하고 일치하는 GML을 추가하십시오. DLL 또는 JS 확장자를 작성하는 경우 프로세스는 비슷하지만 확장자 파일 형식에 맞는 언어로 작성됩니다.</p>
  <p>이 작업을 완료하면 확장명 (위에서 설명)에 파일을 추가해야합니다. 그러면 파일 속성의 확장명 속성에 새 창이 연결됩니다.</p>
  <p class="dropspot"><img alt="File Property Window" class="center" height="553" src="../../assets/Images/Asset_Editors/Editor_Extensions_FileProperties.png" width="1050"/></p>
  <p>Here you would select the target platform for the extension (for GM you would select them all), as well as rename the extension file and set a few other details, which we&#39;ll cover in a moment. The Editor should be automatically populated with the
    functions included in our GML file, but if it isn&#39;t then you can add them by clicking the functions menu button <img alt="Estension Options Icon" class="icon" src="../../assets/Images/Icons/Icon_ExtensionMenu.png"/>필요한 것을 선택하십시오.</p>
  <p class="dropspot"><img alt="Add functions/Constants To An Extension" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_AddFunctions.png"/></p>
  <p><em>Add Function (함수 추가)을</em> 선택하면 확장 기능에 함수를 추가 한 다음 내장 함수와 마찬가지로 GameMaker Studio 2에서 호출 할 수 있습니다. <span>함수가 추가되면 함수 속성을 정의 할 수있는 다음 창이 열립니다 (또는 함수를 두 번 클릭하여 열 수 있음).</span></p>
  <p class="dropspot"><img alt="Function Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_FunctionEditor.png"/></p>
  <p>위의 이미지에서 GML 확장 스크립트에서 정의한 <span class="inline">instance_create_colour ()</span> 함수에 대한 세부 사항으로 함수 편집기를 채웠습니다 (함수 편집기는 GML 함수를 정의하기위한 것이 아니며 다른 확장 유형과 동일 함) . 프로젝트에서 함수를 사용할 때 호출 할 함수의 이름을 함수에 부여했으며이 이름은 확장에 사용 된 이름과 일치하지 않아도됩니다. 원하는 이름으로 설정할 수 있습니다. 그런 다음 <em>외부 이름</em> 옵션을 사용하여 확장에 정의 된 실제 이름에 연결하십시오. 아래에는 코드 완성 팝업에 사용될 텍스트와 코드 편집기 하단에있는 도우미 텍스트 인 <em>도움말</em> 텍스트를 정의하는 섹션이 있습니다.</p>
  <p>다음으로 <em>반환 유형을</em> 정의 할 수 있습니다.이 함수는 <strong>double</strong> (실수 <a class="tooltip" title="부동 소수점 숫자는 부동 소수점을 포함하는 숫자입니다. 예를 들어 숫자 5.5, 0.001 및 -2,345.6789는 부동 소수점 숫자입니다. 소수점 이하 자릿수가없는 숫자를 정수라고합니다.">부동 소수점</a> 값) 또는 문자열입니다. 외부 함수에서 아무것도 반환하지 않으면 이것이 중요하지 않습니다. 그런 다음 함수에서 사용할 인수를 정의하십시오 취하다.</p>
  <p>Arguments can be either <strong>doubles </strong>or <strong>strings</strong>, and you can add them by clicking the add button <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18"/>제거 버튼을 클릭하여 제거하십시오 . 함수가 가변 인수를 사용할 수있는 경우 하단의 <em>가변 길이 인수</em> 확인란도 선택해야합니다.</p>
  <p class="note"><strong>참고</strong> : Windows <span class="inline">dll</span> 파일을 작성 <span class="inline">중이고</span> 4 개 이상의 인수가있는 경우 <strong>모든 인수는 동일한 유형이어야합니다</strong> .</p>
  <p>모든 작업을 완료하면이 기능을 프로젝트에서 사용할 수 있으며 자동 완성으로 표시되고 색상 코드도 표시됩니다. 정의 된 함수는 <strong>Init Functions</strong> 또는 <strong>Final Functions</strong> 로 설정할 수도 있습니다. 즉, 게임이 시작될 때 (Init) 그리고 게임이 끝날 때 (Final) 자동으로 호출됩니다.</p>
  <p class="note"><strong>중대한!</strong> 모든 플랫폼이 Init 함수 호출을 지원 <strong>하지만 모든 플랫폼이 Final 함수 호출을 수행하지는 않습니다.</strong> 특정 플랫폼은이 함수를 호출 할 때 아무런 통지 나 시간을주지 않고 앱을 종료하기 때문입니다. 이에 영향을받는 플랫폼은 <strong>iOS</strong> , <strong>Android</strong> , <strong>HTML5</strong> , <strong>PlayStation</strong> 및 <strong>XboxOne</strong> 입니다.</p>
  <p>당신이 가진 다른 옵션은 <strong>매크로</strong> 를 만드는 것입니다. 매크로는 <a class="tooltip" title="상수는 프로그램 실행 전체에서 변경되지 않는 명명 된 값을 설명하는 데 사용되는 용어입니다. GameMaker Studio 2에는 여러 내장 상수 (예 : os_windows)가 있지만 프로젝트 (매크로라고 함) 및 확장에 사용할 고유 한 상수 값을 만들 수도 있습니다.">상수</a> 값이거나 단일 코드 스니 펫일 수 있습니다 (매크로에 대한 자세한 내용은 여기를 참조하십시오). 예를 들어, c_alice_blue 색상에 대한 위의 예제 GML 확장에서 정의 된 함수를 제거하고 대신 매크로로 만들 수 있습니다. 매크로를 만들려면 확장 등록 정보 창에서 매크로 버튼을 클릭하십시오.</p>
  <p class="dropspot"><img alt="Macro Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_MacroEditor.png"/></p>
  <p>여기서 편집기는 설명이 거의 필요 없습니다. 매크로 / 일정의 이름과 값 또는 짧은 코드 줄을 제공합니다. 매크로가 코드 라인 인 <strong>경우 매크로가 호출 될 때마다 평가됩니다</strong> .</p>
  <p>여러 대상 플랫폼으로 작업 할 때는 <em>모든</em> 플랫폼에서 작동하는 함수 / 매크로가 하나만있는 단일 확장을 만들 수 있습니다. 이는 링크 라이브러리 중 하나만 확장으로 게임에 추가하고 다른 하나를 <strong>확장 등록 정보</strong> 창에서 <strong>프록시 파일</strong> 목록에 배치하면됩니다. 예를 들어 <span class="inline"><strong>dll</strong></span> &quot; <span class="inline">Haggis.dll</span> &quot;을 가진 Windows 확장명이 있다고 가정합니다. 이 <span class="inline"><strong>dll</strong></span> 을 간단히 Mac <span class="inline"><strong>DyLib</strong></span> 로 복제하여 &quot; <span class="inline"><strong>libHaggis.dylib</strong></span> &quot;라는 이름을 지정하고 내부 함수 이름이 원래 Windows <span class="inline"><strong>dll</strong></span> 의 이름과 일치하는지 확인하십시오. 이 <strong><span class="inline">DyLib</span></strong> 는 프록시 파일에 추가되어 게임이 Mac 대상에서 실행될 때 내보내도록 설정되며, 확장 기능이 호출되면 GameMaker Studio 2가 자동으로이를 사용합니다.</p>
  <p>To add a proxy file, simply click the <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18"/>확장명에 대한 확장 등록 정보 창의 단추를 클릭하고 파일 위치를 찾으십시오. 추가되면 확장 대상을 적절한 모듈로 변경해야 할 수 있으며 다음에 게임을 실행할 때 해당 플랫폼의 프록시로 포함됩니다. 프록시 파일을 클릭하여 프록시 파일을 제거 할 수도 있습니다. 버튼을 누를 때마다 목록에서 마지막 버튼이 제거됩니다.</p>
  <p>Once you have added your proxy files they will be stored in the project files of your game, in the Extensions folder (you can find them easily by right-clicking <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png"/>(확장 프로그램 <em>에서 탐색기에서 열기)를</em> 선택하면 편집해야 할 경우 GameMaker Studio 2가 컴파일을 위해 프로젝트의 파일을 사용하므로 원본이 아닌 게임과 함께 번들로 제공되는 복사 된 파일을 편집해야합니다.</p>
  <p>GameMaker Studio 2는 이러한 이름을 구문 분석하고 확장자 및 이름에 따라 파일의 대상 모듈을 할당하고 자동으로 파일을 링크하므로 프록시 파일은 아래 나열된 명명 규칙을 따르는 것이 매우 중요합니다. 이러한 규칙을 따르지 않으면 GameMaker Studio 2가 어떤 파일을 사용할 수 없거나 파일을 제대로로드하지 못하므로 런타임에 게임이 작동하지 않을 수 있습니다.</p>
  <p>각 대상 플랫폼의 명명 규칙은 다음과 같습니다.</p>
  <p class="dropspot"></p>
  <table>
    <tbody>
      <tr>
        <th style="">플랫폼</th>
        <th style="">이름</th>
      </tr>
      <tr>
        <td style="">윈도우</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; .dll</span></td>
      </tr>
      <tr>
        <td style="">우분투 (Linux)</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; .so, lib &lt; <em>이름</em> &gt; .so, &lt; <em>이름</em> &gt; _linux.so, lib &lt; <em>이름</em> &gt; _linux.so</span></td>
      </tr>
      <tr>
        <td style="">맥 OS</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; .dylib, lib &lt;이름&gt; .dylib</span></td>
      </tr>
      <tr>
        <td style="">HTML5</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; .js</span></td>
      </tr>
      <tr>
        <td style="">PS4</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; .prx, lib &lt; <em>이름</em> &gt; .prx, &lt; <em>이름</em> &gt; _ps4.prx, lib &lt; <em>이름</em> &gt; _ps4.prx</span></td>
      </tr>
      <tr>
        <td style="">XBox One</td>
        <td style=""><span class="inline">&lt; <em>이름</em> &gt; _xboxone.dll</span></td>
      </tr>
    </tbody>
  </table>
  <p class="dropspot"> </p>
  <p>위의 규칙을 사용하여 프록시 파일을 추가 할 기본 파일의 이름으로 <span class="inline">&lt; <em>Name</em> &gt;</span> 부분을 ​​교체합니다.</p>
  <p> </p>
  <p> </p>
  <div class="Participant">번역 : 구글번역기</div>
  <div class="Original_text" onclick="winopen('The_Asset_Editors\Extension_Creation\Creating_An_Extension.htm');">영문 페이지 보기</div>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">뒤로: <a href="../Extensions.htm">확장 편집기</a></div>
        <div style="float:right">다음: <a href="Android_Extensions.htm">안드로이드 확장</a></div>
      </div>
    </div>
    <h5>© 저작권 YoYo Games Ltd. 2020 판권 소유</h5>
  </div>
  <!-- KEYWORDS
Creating Extensions
-->
  <!-- TAGS
extensions_create
-->

</body></html> 